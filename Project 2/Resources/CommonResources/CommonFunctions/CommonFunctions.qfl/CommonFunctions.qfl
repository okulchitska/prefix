'Version : V3.0.2
'----------------------------------------------------------------------------------------------------------------------------------------------------
'# CommonFunctions.qfl
'
'!Only the Framework's common Functions essential for the writing of reusable actions and testcase scripts will be written here
'!
'!Common_ should be prefixed with any common method names
'!
'!Datatypes are determined while developing and prefixed with i_,s_,b_,f_,o_,a_ and d_ for integer, String, boolean, float, object, array and date data types respectively
'!
'!	@copyright	:  	2018 Amadeus Services Limited. All rights reserved.
'!@see https://rndwww.nce.amadeus.net/git/projects/GATI/repos/gati_codebase/browse
'!GATI GIT Repo
'

'	@Author	:   sanjeeth.nayak@amadeus.com
'	@Date  Created: 09Dec2017 | Last Updated: 10APR2018
'----------------------------------------------------------------------------------------------------------------------------------------------------
'!@see https://rndwww.nce.amadeus.net/confluence/pages/viewpage.action?spaceKey=ADB&title=GATI-User+Guide#GATI-UserGuide-HowtoautomateatestusingGATIframework?
'!GATI User Guide
'!@see https://rndwww.nce.amadeus.net/confluence/pages/viewpage.action?spaceKey=ADB&title=GATI-User+Guide#GATI-UserGuide-WhatisGATI?
'!About GATI
'!@see https://rndwww.nce.amadeus.net/confluence/display/ADB/GATI-User+Guide#GATI-UserGuide-WhatistheflowoftestexecutioninGATI?
'!GATI Architecture

'Global Var definitions:
'------------------------

'Max Object sync time set to 60s
i_MaxObjSynTime = 60
'Max page title sync time set to 10s
i_BreadCrumbMaxWait = 120
'To save PON files locally before starting PON
s_PONFolderPath = "C:\TESTRESOURCES\PON"
'Test resource folder
s_LocalResourceFolder = "C:\TESTRESOURCES"								
'Screenshot Folder path
s_ScreenshotFolderPath = "C:\TESTRESOURCES\Screenshot"      			
'To specify Environment Details
s_DefaultTestEnvFile = "TestEnv.xls"									
'Common CM path
s_CMJFEDir="C:\TESTRESOURCES\CMJFESync\Generic.bat"						
'Path for CM app to download
s_CMJFESync = "C:\TESTRESOURCES\CMJFESync"								
'Default screen capture set to true 
b_Capture = true
'Path for logs
s_JFELogsFolderPath = s_LocalResourceFolder&"\Logs\"					 
'Path for attachment downloads
s_EmailAttachmentFolder = s_LocalResourceFolder&"\MailAttachments\"     
'.bat file path to launch inventory App
s_InvDir="C:\Program Files (x86)\Altea Inventory TST\Inv_Generic.bat"   
'ALF Log utility folder path
s_ALFFolderPath = "C:\TESTRESOURCES\ALFLogSearch"
'Alf log batch file name
s_ALFlogsearchBatFile = "alflogsearch.bat"
'to Report critical error
b_CritError = false														
'Enable messenger Pop up handler
Environment.Value("Pop_upHandler")= true								
'Enable pon run
b_RunPON = true
'Store DefaultTime
Environment("DefaultTimeOut") = 20000
'Set Recovery Scenario as true
Environment("Global_RS") = true
'CM MFO Global Var list
's_CMNavigatePath = "C:\TESTRESOURCES\CMNavigate\"
's_CMNavigateFile = "CM_Navigator.xlsx"
Set o_CMNavigateDataDict = CreateObject("Scripting.Dictionary")
s_CMNavigateFROMTO = ""
Environment("TestEnv_JFE_Type") = "NON_MFO_CLICK"
s_UserProfileSheetPath = "C:\TESTRESOURCES\GATI_UserProfile.xls"
Environment("Last_SelectedRow") = "" 'Set to Null
Environment("ALFLogSearchCount") = 0

Environment("Recursive_Check_Requirement_counter") = 1
Environment("Recursive_Check_Requirement_max_counter") = 25

Cyberark_Base_URL = "https://ncepim14.iis.amadeus.net/AIMWebService/Win_Auth/AIM.asmx"
					   
'Previous URL
'Cyberark_Base_URL = "https://pimapi.amadeus.com/AIMWebService/Win_Auth/AIM.asmx?op=GetPassword"
'-----------------------------------------------------------------------------------------------------------------------------------------------------------
'GATI Common Functions Start here------------------>
'-----------------------------------------------------------------------------------------------------------------------------------------------------------

'----------------------------------------------------------------------------------------------------------------------------------------------------

'------------------------------------------------------------Common Functions Definitions------------------------------------------------------------

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!This function will load all necessary components such as login, environment details and sets folder structures required by the framework.
'!
'!	Example Usage: Common_Init or Common_Init()
'! 	@Param  None
'!	@Return None
'!	@Author sanjeeth.nayak@amadeus.com
'! 	@See https://rndwww.nce.amadeus.net/confluence/pages/viewpage.action?spaceKey=ADB&title=GATI-User+Guide#GATI-UserGuide-Whatisthepre-requisitetoStartascript?orHowtostartascript?orWhatisthemandatoryfunctionforascript?
'!	@Date Created: 11Dec2017 | Last Updated: 01Jun2018
Public Function Common_Init()
	
	'Set System default time out to 180s
	'Setting("DefaultTimeOut") = 180000 
	Setting("DefaultTimeOut") = Environment("DefaultTimeOut")
	'Set web time out to 20s	
	Setting("WebTimeout") = i_MaxObjSynTime * 300 						

	'Reporter.ReportEvent micDone, "Common_Init", "Start of GATI Initialization"
	Print "GATI functions Log for the Test:["& QCUtil.CurrentTest.Name &"] "& now
	Print "------------------------------------------------------------------------------------------------------------------------------------"
	Print "Common_Init: Start of GATI Initialization"
	'Create TESTRESOURCE folder if not exists
	Common_FolderCreate s_LocalResourceFolder
	
	'Create Screenshot folder if not exists
	Common_FolderCreate s_ScreenshotFolderPath
	
	'Check if Run PON flag is true (Check if PON folder needs to be cleared)
	If b_RunPON Then
		'PON Folder cleanup
		Common_FolderCleanUp s_PONFolderPath
		'Create PON folder if not exists
		Common_FolderCreate s_PONFolderPath
	End If
	
	Environment.Value("e_SpecificPON")="e_SpecificPON"
	
	'Load the Recovery scenario
	Common_CMAddRecoveryScenerio

	'Get Default Environment Properties
	Common_FetchEnvProperties
	
	'MFO Preparation Start -->
	
'	Common_FolderCreate s_CMNavigatePath
'	
'	Common_DownloadWithPreferance s_CMNavigateFile,s_CMNavigatePath
'	
'	Common_PrepareCMNavigate Environment("TestEnv_JFE_Type")
	
	
	'<---End of MFO Preparation 
	
	'Register few actions to make it stable
	
	RegisterUserFunc "JavaButton", "Click", "Register_Click"
	RegisterUserFunc "JavaMenu", "Select", "Register_Menu"
	RegisterUserFunc "JavaCheckBox", "Set", "Register_Set"
	RegisterUserFunc "JavaEdit", "Set", "Register_Edit"
	
	
	
	If Common_EnvVarReplace("Test_Connection") = "DEV" Then
		Environment("Default_MaxSyncWait") = 120
		Environment("Default_MidSyncWait") = 40
		Environment("Default_MinSyncWait") = 10
	else
		Environment("Default_MaxSyncWait") = 60
		Environment("Default_MidSyncWait") = 20
		Environment("Default_MinSyncWait") = 5
	End If
	
	'Change resolution of system
	Common_ChangeScreenResolution 1920,1080
		
	'Reporter.ReportEvent micDone, "Common_Init", "End of GATI Initialization"
	Print "Common_Init: End of GATI Initialization"
End Function
	


'
''For IP way of authentication below method can be used
''Syntax:
''Common_GetCyberArkPassword "T-DCS-QA","T-DCS-QA","test"
''
'Public Function Common_GetCyberArkPassword (byval s_AppID,byval s_Safe,byval s_ObjectAddress)
'
'	Common_GetCyberArkPassword = false
'	Dim o_REST
'	Set o_REST = CreateObject("MSXML2.XMLHTTP.3.0")
'	'Construct Request String
'	s_SearchString = "?AppID="&s_AppID&"&Safe="&s_Safe&"&Object="&s_ObjectAddress&"&Reason=GATI TEST"
'	s_SearchString = "https://pimapi.amadeus.com/AIMWebService/api/Accounts/"& s_SearchString
'
'	On error resume next
'	Err.clear
'	o_REST.open "GET", s_SearchString , False
'	o_REST.send
'	s_CyberArkInfo = o_REST.responseText
'	
'	if err.number <> 0 then
'		Reporter.ReportEvent micFail, "Common_GetCyberArkPassword", "Error while fetching Password from: " & s_SearchString & chr(10) & "Error Number:" & err.number
'		Exit function
'	End If
'	
'	On error goto 0
'	
'	a_CyberArkInfo = split(s_CyberArkInfo,chr(34)&","&chr(34))
'	If not instr(a_CyberArkInfo(0), "{" & chr(34) & "Content" & chr(34) & ":" &chr(34))>0 Then
'		Reporter.ReportEvent micFail, "Common_GetCyberArkPassword", "Failed to retriew Password from: " & s_SearchString &chr(10)&"Returned String from CyberArk:" & s_CyberArkInfo
'		Exit function
'	Else
'		Reporter.ReportEvent micPass, "Common_GetCyberArkPassword", "Password Retreive Successful for: " & s_SearchString 
'	End If
'	
'	s_CyberArkPassword = Crypt.Encrypt(replace(a_CyberArkInfo(0),"{"&chr(34)&"Content"&chr(34)&":"&chr(34),""))
'	Common_GetCyberArkPassword = s_CyberArkPassword
'
'End Function
'
'


'For Windows way of authentication below method can be used
'Syntax:
'Common_GetCyberArkPassword "T-DCS-QA","T-DCS-QA","test"
'Common_GetCyberArkPasswordSOAP "T-DCS-QA","T-DCS-QA","Application-AMA_LSS-testaddr-test"
Public Function Common_GetCyberArkPasswordSOAP(byVal s_AppID, byVal s_Safe, byVal s_ObjectAddress)
	
	Common_GetCyberArkPasswordSOAP = false
	Dim o_SOAP
	
	Set o_SOAP =createObject("Microsoft.xmlhttp")
	
	On error resume next
	Err.clear
	DisableRecoveryScenario
	o_SOAP.open "GET",Cyberark_Base_URL & "?op=GetPassword",false

	o_SOAP.setRequestHeader "Content-Type","text/xml"
	'Construct Request String
	body = "<soapenv:Envelope xmlns:soapenv="&chr(34)&"http://schemas.xmlsoap.org/soap/envelope/"&chr(34)&" xmlns:tem="&chr(34)&"https://tempuri.org/"&chr(34)&"><soapenv:Header/><soapenv:Body><tem:GetPassword><tem:passwordWSRequest><tem:AppID>"&s_AppID&"</tem:AppID><tem:Safe>"&s_Safe&"</tem:Safe><tem:Object>"&s_ObjectAddress&"</tem:Object></tem:passwordWSRequest></tem:GetPassword></soapenv:Body></soapenv:Envelope>"
	i_maxretry = 0
	o_SOAP.send body
	
	
	'some sync for getting response
	While ((err.number <> 0) and (i_maxretry <= 2))
		i_maxretry = i_maxretry + 1
		'Reporter.ReportEvent micWarning, "Common_GetCyberArkPasswordSOAP", "Error occured while fetching Password from: " & s_SearchString & chr(10) & "Error Number:" & err.number & vbcr & "Retrying to get password from Cyberark"
		Err.clear
		o_SOAP.open "GET", Cyberark_Base_URL & "?op=GetPassword", false
		o_SOAP.setRequestHeader "Content-Type","text/xml"
		o_SOAP.send body
	Wend

	if err.number <> 0 then
		'Call 
		print "Attempting to get password via Powershell"
		Common_GetCyberArkPasswordSOAP = Common_CyberarkPowerShellCall(s_AppID, s_Safe, s_ObjectAddress)
		''on error goto 0 is cleared down..**Rupa**
		On error goto 0
		EnableRecoveryScenario
'		s_SearchString = "AppID=" & s_AppID & " Safe=" & s_Safe & " Object=" & s_ObjectAddress
'		Reporter.ReportEvent micFail, "Common_GetCyberArkPasswordSOAP", "Error while fetching Password from: " & s_SearchString & chr(10) & "Error Number:" & err.number
		Set o_SOAP = Nothing
		Exit function
	End If
	
	On error goto 0
	EnableRecoveryScenario
	
	s_SOAPResponse = o_SOAP.responseText
	'"Value to be fetched-------> <key>Content</key><value>THISISPLACEHOLDERFORPASSWORD</value></KeyAndValue>"
	errFlag = false
	''added On error reume next**Rupa*
	'On error resume next
	'Err.clear
	'DisableRecoveryScenario
	i_StartPoint = instr(s_SOAPResponse,"<key>Content</key><value>")
	i_EndPoint = instr(s_SOAPResponse,"</value></KeyAndValue>")
	
	if i_StartPoint > 0 then
		
		If (i_EndPoint > 0) and (i_EndPoint > i_StartPoint) Then
			
			s_Password = replace(mid(s_SOAPResponse,i_StartPoint,i_EndPoint-i_StartPoint),"<key>Content</key><value>","")
			Reporter.ReportEvent micPass, "Common_GetCyberArkPasswordSOAP", "Password Retreive Successful for: " & body 
			If lcase(s_ObjectAddress) = "svc-gati-alf" Then
				Common_GetCyberArkPasswordSOAP = s_Password
			else	
				Common_GetCyberArkPasswordSOAP = Crypt.Encrypt(s_Password)
			End If
			
		else
			errFlag = true
		End If			
	else
		errFlag = true
	End If
	If errFlag Then
		Reporter.ReportEvent micFail, "Common_GetCyberArkPasswordSOAP", "Looks like Response from "&Cyberark_Base_URL&"?op=GetPassword has no Passowrd string" &chr(10)& "Logs:" &chr(10)& s_SOAPResponse
	End If
	
	On error goto 0
	EnableRecoveryScenario
	Set o_SOAP = Nothing
End function





'Syntax Common_CyberarkPowerShellCall("T-CS-QA","T-DCS-QA","PDT_7X_FJORDAN")

public function Common_CyberarkPowerShellCall(byVal s_AppID, byVal s_Safe, byVal s_ObjectAddress)
	Common_CyberarkPowerShellCall = false
	s_Cyberarkbasefolder = "C:\TestResources\CyberarkUtility"
	s_CyberarkPSFile = "Cyberark.ps1"
	
	'initialise folders if not present
	Common_FolderCreate s_Cyberarkbasefolder
	
	'Cleanup the exising powershell files
	Common_FolderCleanUp s_Cyberarkbasefolder
	
	'Build string for cyberark call
	s_CyberarkCallString = "$url="&chr(34)&Cyberark_Base_URL&chr(34) 
	s_CyberarkCallString = s_CyberarkCallString & vbcr & "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12"
	s_CyberarkCallString = s_CyberarkCallString & vbcr & "$proxy = New-WebServiceProxy -Uri $url -UseDefaultCredential"
	s_CyberarkCallString = s_CyberarkCallString & vbcr & "$namespace = $proxy.getType().namespace"
	s_CyberarkCallString = s_CyberarkCallString & vbcr & "$request = New-Object ($namespace + "&chr(34)&".passwordRequest"&chr(34)& ")"
	s_CyberarkCallString = s_CyberarkCallString & vbcr & "$request.AppID = "&chr(34)&s_AppID&chr(34)&";"
	s_CyberarkCallString = s_CyberarkCallString & vbcr & "$request.Query = "&chr(34)&"Object="&s_ObjectAddress&";Safe=" & s_Safe &chr(34)&";"
	s_CyberarkCallString = s_CyberarkCallString & vbcr & "$response = $proxy.GetPassword($request)"
	s_CyberarkCallString = s_CyberarkCallString & vbcr & "$response.content"


	'Write to Cyberark.ps1 file
	Common_LogDump s_Cyberarkbasefolder,s_CyberarkPSFile,s_CyberarkCallString
	
	
	
	Set objShell = CreateObject("Wscript.Shell")
	On error resume next
	err.clear
	DisableRecoveryScenario
	i_maxretryPS = 0
	set objex = objShell.Exec("powershell.exe -nologo -file "&s_Cyberarkbasefolder &"\"&s_CyberarkPSFile)
	
	While ((err.number <> 0) and (i_maxretryPS <= 5))
		i_maxretryPS = i_maxretryPS + 1
		Reporter.ReportEvent micWarning, "Common_CyberarkPowerShellCall", "Error occured while fetching Password from: " & s_SearchString & chr(10) & "Error Number:" & err.number & vbcr & "Retrying to get password from Cyberark using Powershell method"
		Err.clear
		set objex = objShell.Exec("powershell.exe -nologo -file "&s_Cyberarkbasefolder &"\"&s_CyberarkPSFile)
	Wend
	
	If err.number <> 0 Then
		Reporter.ReportEvent micFail, "Common_CyberarkPowerShellCall", "Attempt to cyberark call via Powershell is failed. Please Contact GATI team for the resolution"
		Set o_SOAP = Nothing
		exittest
	End If
	
	s_CyberarkError = objex.StdErr.ReadAll
	Err.clear
	EnableRecoveryScenario
	On error goto 0
	
	if s_CyberarkError<>"" then
		print "CyberArk Returned Errors:"
		print s_CyberarkError
		Reporter.ReportEvent micFail, "Common_CyberarkPowerShellCall", "CyberArk Returned Errors:"&vbcr&s_CyberarkError
		Set o_SOAP = Nothing
		exittest
	End If
	
	s_cyberarkPassword = objex.StdOut.readline
	If s_cyberarkPassword <> "" then
			If lcase(s_ObjectAddress) = "svc-gati-alf" Then
				Common_CyberarkPowerShellCall = s_cyberarkPassword
			else	
				Common_CyberarkPowerShellCall = Crypt.Encrypt(s_cyberarkPassword)
			End If
		
		
	Else 
		Reporter.ReportEvent  micWarning, "Common_CyberarkPowerShellCall", "Empty password returned from Cyberark. Consider updating the password to a non Empty string"
	
	End If
'On error goto 0 is defined earlier..**Rupa
	On error goto 0
	EnableRecoveryScenario
End function




'
'	
''CM_Navigator "Inbound Missed Connection Summary"
'Public Function CM_Navigator(ByVal s_Param)
'
'	'Set CM_Navigator to false
'	CM_Navigator = false
'	b_ErrorFlag = ""
'	
'	'-----------------------------------Fetch Type of JFE operation----------------------------->
'	'Set default NON_MFO_CLICK
'	s_JFEType = Environment("TestEnv_JFE_Type")
'	
'	'-----------------------------------Initial Screen Checks----------------------------------->
'	a_Param = split(s_Param,">")
'	
'	
'	If ubound(a_Param) = 1 Then
'		if not Common_CMScreenCheck(a_Param(0)) then
'			Exit function
'		End If
'		s_ActiveScreen = a_Param(0)
'		s_Param = a_Param(1)
'	ElseIf ubound(a_Param) = 0 Then
'		s_ActiveScreen = Common_CMGetCMScreen()
'	Else
'		Reporter.ReportEvent micFail, "CM_Navigator", "Found more than 2 screen names in s_Param. Please refer userguide for the syntax"
'		Exit function
'	End If
'	
'	
'	'Check if active screen param is returned
'	If s_ActiveScreen = "" Then
'		Common_Report "No Active breadcrumb trail|CM_Navigator|WARNING"
'		Exit function
'	End If
'
'	
'	'----------------------------------Search Logic------------------------------------------------------------>
'     
'	'check if matching FROM screen in CM_Navigator.xlsx
'	If not instr(s_CMNavigateFROMTO,"%" & s_ActiveScreen) > 0 Then
'		Common_Report "Active screen is: " & s_ActiveScreen & "and No Matching FROM_SCREEN"
'		b_ErrorFlag = false
'	End If
'	'check if matching TO screen in CM_Navigator.xlsx
'	If not instr(s_CMNavigateFROMTO,s_Param & "%") <> 0 Then
'		Common_Report "Requested TO screen is: " & s_FROMTO & "and No Matching TO_SCREEN"
'		b_ErrorFlag = false
'	End If
'	
'	'Check if errors in previous 2 checks
'	If b_ErrorFlag = true Then
'		Exit function
'	End If
'	
'	If instr(s_CMNavigateFROMTO,"%" & s_ActiveScreen & ":" & s_Param & "%")>0 Then
'		'Got a quickMach
'		s_ID =  s_ActiveScreen & ":" & s_Param
'		s_Operation = o_CMNavigateDataDict.Item(s_ID)
'	Else	
'		'TODO: Find Shortest Path - For future development
'	
'	End If
'	
'
'	
'	'---------------------------------Build logic---------------------------------------------------------->
'	
'	DisableRecoveryScenario
'	On error resume next
'	err.clear
'	
'	i_StartPos = cint(instr(s_Operation, "~#~" & s_JFEType & "~@~")) + len(s_JFEType) + 6
'	i_EndPos = cint(instr( i_StartPos,s_Operation, "~#~"))
'	s_Operations = mid(s_Operation, i_StartPos, i_EndPos - i_StartPos)
'	
'	If err.number <> 0 Then
'		reporter.ReportEvent micFail, "CM_Navigator", "Error while fetching Object name from Dictionary containing values extracted from CM_Navigator.xlsx sheet"
'		On error goto 0
'		EnableRecoveryScenario
'		Exit Function
'	End If
'	''already defined earlier**Rupa
''	On error goto 0
''	EnableRecoveryScenario
'		
'	
'	a_Operation = split(s_Operations,">")
'	
'
'	'---------------------------------Execute and error logic---------------------------------------------->
'	JavaWindow("wndCM").activate
'
'	For i_Operation = 0 To ubound(a_Operation) Step 1
'		If JavaWindow("wndCM").JavaObject("objLists").Exist(1) Then
'			'JavaWindow("wndCM").JavaObject("objLists").highlight
'			Set o_ChildObjects = JavaWindow("wndCM").JavaObject("objLists").ChildObjects
'		ElseIf JavaWindow("wndCM").JavaObject("objJFEMoreActionList").Exist(1) Then
'			'JavaWindow("wndCM").JavaObject("objJFEMoreActionList").highlight
'			Set o_ChildObjects = JavaWindow("wndCM").JavaObject("objJFEMoreActionList").ChildObjects
'		Else	
'			Reporter.ReportEvent micFail,"CM_Navigator", "Menu"
'		End If	
'		Reporter.Filter = rfDisableAll
'		For i_Iterator = 0 To o_ChildObjects.count - 1 Step 1
'
'			If instr(ucase(o_ChildObjects(i_Iterator).getroproperty("text")),ucase(a_Operation(i_Operation))) > 0 Then
'
'				Select case ucase(o_ChildObjects(i_Iterator).getroproperty("to_class"))
'					Case "JAVACHECKBOX"
'						o_ChildObjects(i_Iterator).set("ON")
'						Exit for
'					Case "JAVABUTTON"
'						o_ChildObjects(i_Iterator).click
'						Exit for
'					Case "JAVAMENU"
'						o_ChildObjects(i_Iterator).Select
'						Exit for
'					Case else
'						'Goto Next child object
'				End Select
'			End If 
'		Next
'		Reporter.Filter = rfEnableAll
'	Next
'	
'	'---------------------------------Final screen Checks-------------------------------------------------->
'	
'	Common_CMScreenCheck s_Param
'	
''	s_ActiveScreen = Common_CMGetCMScreen()
'	
''	'Check if active screen param is returned
''	If s_ActiveScreen = "" Then
''		Common_Report "No Active breadcrumb trail|CM_Navigator|WARNING"
''		Exit function
''	ElseIf ucase(s_ActiveScreen) = ucase(s_Param) Then 
''		Common_Report "Active breadcrumb trail is : "& s_Param &"|CM_Navigator|PASS"
''	Else
''		Common_Report "Active breadcrumb trail is not : "& s_Param &"|CM_Navigator|WARNING"
''	End If
'
'	
'End Function
'

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!This function will download resources/files from ALM. Order of preference currently is ALM-Testcase in test lab > ALM-Testcase in test Plan > ALM-Resources 
'!
'!  Example Usage : Common_DownloadWithPreferance()
'! 	@Param  None
'!	@Return True - When PON completes data creation succesfully, False - When PON issues exists and VDDP is not generated
'!	@author	sanjeeth.nayak@amadeus.com
'!	@Date 	Created:  | Last Updated: 
Public Function Common_DownloadWithPreferance(byval s_FileNameToSearch, byVal s_ToPath)
	If not Common_DownloadAttachment("SET",s_FileNameToSearch,s_ToPath) then
		If not Common_DownloadAttachment("LAB-TEST",s_FileNameToSearch,s_ToPath) then
			If not Common_DownloadAttachment("PLAN-TEST",s_FileNameToSearch,s_ToPath) then
				Common_DownloadTestResource s_FileNameToSearch,s_ToPath
			End if
		End If
	End If
End Function

'
''MFO
'public function Common_PrepareCMNavigate(byVal s_Env)
'
'	'-----------------------------------Parse Excel sheets-------------------------------------->
'		
'	'Create dictionary and excell objects
'	
'	s_InputFile = s_CMNavigatePath & s_CMNavigateFile
'	s_sheetName = "Menus"
'	s_Delimiter = "~#~"
'	
'	Set o_ObjExcel = CreateObject("Excel.Application")
'	o_ObjExcel.Visible = false
'	Set o_ObjWorkbook = o_ObjExcel.Workbooks.Open(s_InputFile)
'	Set o_ObjWorksheet = o_ObjWorkbook.Worksheets(s_sheetName)
'	Set o_ObjRange = o_ObjWorksheet.UsedRange
'	'Get Row and Col range
'	i_MaxRow = o_ObjRange.Rows.Count
'	i_MaxCol = o_ObjRange.Columns.Count
'  		
'  	'If search sheet has less than 2 rows or 1 column then exit
'	If i_MaxRow < 2 or i_MaxCol < 1  Then
'		Common_Report "Please check the Excell file! Data is invalid|FileCheck|Fail"
'		b_CritError = true
'		Set Common_ReadExcel2Dictionary = o_DataDict
'		Exit Function
'	End If
'		
'  	'Row loop
'	For i_RowIterator = 2 To i_MaxRow Step 1
'		s_Value = ""	
'		'Column loop
'		For i_ColIterator = 3 To i_MaxCol step 1
'			s_CellValue = o_ObjWorksheet.cells(i_RowIterator,i_ColIterator).value
'			s_Value = ucase(s_Value & s_Delimiter & o_ObjWorksheet.cells(1,i_ColIterator).value  & "~@~" & s_CellValue)
'		Next
'		'Form Key FROMPAGE:TOPAGE
'		s_Key =  o_ObjWorksheet.cells(i_RowIterator,1).value & ":" & o_ObjWorksheet.cells(i_RowIterator,2).value
'		o_CMNavigateDataDict.add s_Key,s_Value
'		s_CMNavigateFROMTO = s_CMNavigateFROMTO & "%" & s_Key & "%"
'		
'	Next
'	
'	o_ObjExcel.Quit
'
'End Function
'

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!This function will run PON utility and Imports VDDP data to PONData data sheet
'!
'!  Example Usage : Common_CallPON()
'! 	@Param  None
'!	@Return True - When PON completes data creation succesfully, False - When PON issues exists and VDDP is not generated
'!	@author	sanjeeth.nayak@amadeus.com
'! 	@See https://rndwww.nce.amadeus.net/confluence/pages/viewpage.action?spaceKey=ADB&title=GATI-User+Guide#GATI-UserGuide-HowtocreatetestdatausingPONUtilitythroughGATI?
'!	@Date 	Created: 11Dec2017 | Last Updated: 20Aug2018
Public Function Common_CallPON()
	
	If environment("TestIteration") = 1 Then
		
		'Reporter.ReportEvent micDone, "Common_CallPON", "Start of PON Utility run"
		
		'Initialise Common_CallPON to return False by default
		Common_CallPON = False

		s_PSG_path = "C:\TTServerAAF\psg"
		s_JFEPropertyBackup = "JFEPropertyBackup"
		s_JFEPropertyFilename = "JFElogins.properties"
		
'		if  not (Common_FileExistance(s_PSG_path &"\"&s_JFEPropertyFilename)) then
'	
'			s_PSG_path = "D:\TTServerAAF\psg"
'			
'		End If	
		'Downloading latest property file from ALM
		

		
'		if  (Common_FileExistance(s_PSG_path &"\"&s_JFEPropertyFilename)) then
'			
'			if not (Common_FileExistance(s_PSG_path &"\"&s_JFEPropertyBackup&"\"&s_JFEPropertyFilename)) then
'				
'				Common_FolderCreate s_PSG_path &"\"&s_JFEPropertyBackup
'				
'				Set o_FSO = CreateObject("Scripting.FileSystemObject") 
'				
'				o_FSO.MoveFile s_PSG_path &"\"&s_JFEPropertyFilename ,s_PSG_path &"\"&s_JFEPropertyBackup&"\"&s_JFEPropertyFilename
'				
'			End If
'		
'		End If
		
		'Common_DownloadWithPreferance s_JFEPropertyFilename, s_PSG_path

		'End of Downlaoding
		
		
		
		'Common_DownloadTestResource "aafdatacreate.py","C:\TTServerAAF\psg"
		'Common_DownloadTestResource "aafdatacreate.py","D:\TTServerAAF\psg"
		Common_DownloadTestResource "cyberarkparams.ini","C:\TTServerAAF\psg\cfg"
		Common_DownloadTestResource "cyberarkparams.ini","D:\TTServerAAF\psg\cfg"
		
		If Common_EnvVarReplace("e_SpecificPON")="e_SpecificPON" Then  'Changed
			s_PONStartFile="PONStart"
		else
			s_PONStartFile=Environment.Value("e_SpecificPON")
		End if
		
		Common_DownloadWithPreferance s_PONStartFile, s_PONFolderPath
		'Ponstart file downloaded from Test Lab or Test Plan (First preference being Test Lab)
'		if not Common_DownloadAttachment("LAB-TEST",s_PONStartFile,s_PONFolderPath) then
'			if not Common_DownloadAttachment("PLAN-TEST",s_PONStartFile,s_PONFolderPath) then
'				Reporter.ReportEvent micFail, "Common_CallPON", "PONStart File attachment not found for the test case either in test lab and test plan"
'				ExitTest
'			End if
'		End If
		
		'Run CallPON.bat file
		'Common_RunBatch "\\lonjfe3.iis.amadeus.net\windmill\WindmillProject\TTServerAAF\psg\bin\callpon.bat "& replace(s_PONFolderPath,":","#") &" " & s_DefaultTestEnvFile &" "&s_PONStartFile&".xls > "& s_PONFolderPath &"\"&s_PONStartFile&"Execution.log 2>&1"
		'Common_RunBatch s_PSG_path & "\bin\callpon.bat "& replace(s_PONFolderPath,":","#") &" " & s_DefaultTestEnvFile &" "&s_PONStartFile&".xls > "& s_PONFolderPath &"\"&s_PONStartFile&"Execution.log 2>&1"
		Common_RunBatch "C:\TTServerAAF\psg\bin\callpon.bat "& replace(s_PONFolderPath,":","#") &" " & s_DefaultTestEnvFile &" "&s_PONStartFile&".xls > "& s_PONFolderPath &"\"&s_PONStartFile&"Execution.log 2>&1"
		'Common_RunBatch "D:\TTServerAAF\psg\bin\callpon.bat "& replace(s_PONFolderPath,":","#") &" " & s_DefaultTestEnvFile &" "&s_PONStartFile&".xls > "& s_PONFolderPath &"\PONExecution.log"
		
		'Check if PON activity is complete
		If Common_FileExistance(s_PONFolderPath & "\PONComplete.txt") Then
			Reporter.ReportEvent micDone, "PON Run", "Success"
			'Importing VDDP in to PONData data sheet   
			Common_FolderCleanUp "C:\TESTRESOURCES\PON\VDDP.xlsx"
			Common_ImportData "LOCAL",s_PONFolderPath & "\VDDP.xls",1,"PONData"
			Common_DynamicEnvVarCreate "PONData", "PON" 
		'Else, Save the PON folder in to an Archive
		else	
			Common_FolderCreate s_PONFolderPath & "Archive"
			Common_FolderBackup s_PONFolderPath,s_PONFolderPath & "Archive"
			Reporter.ReportEvent micFail, "Common_CallPON", "Failed! Logs Archived here: " &  s_PONFolderPath & "Archive"
			ExitTest
		End IF
	End If
	
	'Reporter.ReportEvent micDone, "Common_CallPON", "End of PON Utility run"
	Print "Common_CallPON: PON Utility run Successfully"	
	Environment.Value("e_SpecificPON")=NOTHING
		
End Function 
	

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!This function will run PON-Rollback utility and Imports VDDP data to PONData data sheet
'!
'!  Example Usage : Common_CallPON()
'! 	@Param  None
'!	@Return True - When PON-Rollback completes data creation succesfully, False - When PON issues exists and RollbackComplete.txt is not present
'!	@author	sanjeeth.nayak@amadeus.com
'!	@Date Created: 11Dec2017 | Last Updated: 11Dec2017
Public Function Common_CallPONRollBack()

	'Reporter.ReportEvent micDone, "Common_CallPONRollBack", "Start of PON-RollBack Utility run"
	
	'Initialise Common_CallPON to return False by default
	Common_CallPONRollBack = False
	
	'Run rollback.bat file
	Common_RunBatch "\\lonjfe4.iis.amadeus.net\WindmillProject\TTServerAAF\psg\bin\rollback.bat "& replace(s_PONFolderPath,":","#") & " " & s_DefaultTestEnvFile &" > " & s_PONFolderPath &"\PONRollback.log 2>&1"
	
	'Check if PON activity is complete
	If Common_FileExistance(s_PONFolderPath &"\RollbackComplete.txt") then
		Reporter.ReportEvent micDone, "Common_CallPONRollBack", "Passed"
	else
		Common_FolderCreate s_PONFolderPath & "Archive"
		Common_FolderBackup s_PONFolderPath,s_PONFolderPath & "Archive"
		Reporter.ReportEvent micWarning, "Common_CallPONRollBack", "Failed! Logs Archived here: " &  s_PONFolderPath & "Archive"
	End If
	
	'Reporter.ReportEvent micDone, "Common_CallPONRollBack", "End of PON-RollBack Utility run"
	
End Function


'Todo: Update Common_DownloadResource in userGuide
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!This function will download file attached in Test Resources
'!
'!	Example Usage  : Common_DownloadResource "CMJFELogin.xls","C:\TESTRESOURCES"
'! 	@Param  s_FileName - File name to be searched, s_Destination - Destination folder in local machine
'!	@Return Returns True if download is successful else returns false
'!	@author sanjeeth.nayak@amadeus.com 
'!	@Date 	Created: 11Dec2017 | Last Updated: 14Dec2017
Public Function Common_DownloadTestResource(byval s_FileName,byval s_Destination)
	
	'Reporter.ReportEvent micDone, "Common_DownloadTestResource", "Start of DownloadTestResource"
	
	Dim o_QC, o_Resource, o_Filter, objFileList, o_File, s_FilterPair, i_Count, o_FileList
	
	'Set Common_DownloadTestResource to false initially (Mark as failed)
	Common_DownloadTestResource = False
	
	'Creating ALM OTA QCConnection object,for accessing the ALM object model. 
	Set o_QC = QCUtil.QCConnection
	
	'Assessing the Resources inside the Test Resources
	Set o_Resource = o_QC.QCResourceFactory
	
	'Activating the Filter object
	Set o_Filter =  o_Resource.Filter
	
	'Matching the given FileName in the Test Resources files
	o_Filter.Filter("RSC_FILE_NAME") = """" & Cstr(s_FileName) & """"
	
	'Creates a list of objects according to the specified filter.
	Set o_FileList = o_Filter.NewList
	
	'Downloading the found File
	If o_FileList.Count = 1 Then
	
		Set o_File = o_FileList.Item(1)
		o_File.FileName = s_FileName
		
		'Downlaod the file and sync= True , for completion of process
		o_File.DownloadResource s_Destination, True
		
		'Reporter.ReportEvent micDone,"Common_DownloadTestResource","'"&s_FileName&"',Successfully downloaded to '"&s_Destination&"'"
		Print "Common_DownloadTestResource:" & s_FileName & " Successfully downloaded to " & s_Destination
		'Commenting the reporter.reporter event as we want to display only Test report information
		Common_DownloadTestResource = True
	
	Else
		'Reporter.ReportEvent micWarning,"Common_DownloadTestResource", "No Match found in ALM for the FileName = '"&s_FileName&"'"
		Print "Common_DownloadTestResource: No Match found in ALM for the File " & s_FileName
	End If
	
	'Destroying the Objects  

	Set o_QC = Nothing
	Set o_Resource = Nothing
	Set o_Filter = Nothing
	Set o_FileList = Nothing
	Set o_File = Nothing
	
End Function

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function To load all login details if airline name is given. "LoginData" data sheet will be created in UFT data sheet
'!
'!	Example Usage  : Common_FetchLoginProperties "7X"
'! 	@Param  s_Airline - Airline Name
'!	@Return None, It will create global variables called referred as environment variables (e.g., when we fetch 7X login using this function, environment variables will be created such as environment("Login_DutyCode") etc)
'!	@author sanjeeth.nayak@amadeus.com 
'!	@Date 	Created: 11Dec2017 | Last Updated: 14Dec2017
Public Function Common_FetchLoginProperties(byVal s_Airline)
	s_LoginSheetName = "CMJFELogin_" & ucase(replace(Environment("TestEnv_Connection"),chr(34),""))
	'CMJFELogin_env file downloaded from Test Lab or Test Plan (First preference being Test Lab) or Resources
	if not Common_DownloadAttachment("LAB-TEST",s_LoginSheetName,s_LocalResourceFolder) then
		if not Common_DownloadAttachment("PLAN-TEST",s_LoginSheetName,s_LocalResourceFolder) then
			Common_DownloadTestResource s_LoginSheetName & ".xls",s_LocalResourceFolder
		End if
	End If
	
	Common_ImportData "local",s_LocalResourceFolder & "\" & s_LoginSheetName & ".xls",s_Airline,"LoginData"
	Common_DynamicEnvVarCreate "LoginData", "login"
	

	Set o_Net = CreateObject("WScript.Network")
	s_loginUser = ucase(o_Net.UserName)

	cyberarkflag = true
	
	If cyberarkflag = true Then	' enabled onlt for sanjeeth
		
		if Common_EnvVarReplace("login_Password") = login_Password then
			Reporter.ReportEvent micFail, "Common_FetchLoginProperties", "Password Column not present in " &s_LoginSheetName& ".xls for the airline:" &s_Airline 
			exittest
		Else
			'CyberArkCall
			Environment("login_Password") = Common_GetCyberArkPasswordSOAP("T-DCS-QA","T-DCS-QA",Environment("login_Password"))
			'Environment("login_Password") will have the encrypted password fetched from cyberark
			if Environment("login_Password") = false then
				Exittest
			End If
		End If
		
	End If
	'Fetch ProfileSheet if exists
	if Common_FileExistance(s_UserProfileSheetPath) then
		
		Common_ImportData "local",s_UserProfileSheetPath,"UserProfile","UserProfile"
		Common_DynamicEnvVarCreate "UserProfile", "UserProfile"
		
	End If
	
	'Reporter.ReportEvent micDone, "Common_DownloadTestResource", "End of DownloadTestResource"
End Function


'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function To load environment details from TestEnv_xyz.xls attached to a test set if not found, it will take TestEnv.xls attached in test resources folder 
'!
'!	Example Usage  : Common_FetchEnvProperties()
'! 	@Param  None
'!	@Return None, It will create global variables called referred as environment variables (e.g., environment variables will be created such as environment("TestEnv_Connection") etc)
'!	@author sanjeeth.nayak@amadeus.com 
'!	@Date 	Created: 11Dec2017 | Last Updated: 14Dec2017
Public Function Common_FetchEnvProperties()
	
	'Download Env var 
'	If not Common_DownloadAttachment("SET","TestEnv",s_PONFolderPath) then
'		If not Common_DownloadTestResource(s_DefaultTestEnvFile,s_PONFolderPath) then  'Todo: Change it to point to test set fist
'			Reporter.ReportEvent micFail, "Common_FetchEnvProperties", "ENVDetail File attachment not found in either in test set and Resources folder"
'			ExitTest
'		End If
'	End If
'	
	Common_DownloadWithPreferance s_DefaultTestEnvFile, s_PONFolderPath
	
	Common_ImportData "LOCAL",s_PONFolderPath &"\"& s_DefaultTestEnvFile, 1, "TestEnv"
	Common_DynamicEnvVarCreate "TestEnv", "TestEnv"
	
	'Reporter.ReportEvent MicDone, "Common_FetchEnvProperties", "Environment Details are Fetched and stored in TestEnv_Connection and TestEnv_Iteration env variable"
	print "Environment Details are Fetched and stored in TestEnv_Connection and TestEnv_Iteration env variable"
End Function


'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function To delete all the files in the given path
'!
'!	Example Usage  : Common_FolderCleanUp "C:/TESTRESOURCES/PON"
'! 	@Param  s_FilePath path for files cleanup
'!	@Return None, Deletes all the files in the specified folder
'!	@author sanjeeth.nayak@amadeus.com 
'!	@Date 	Created: 13Dec2017 | Last Updated: 14Dec2017
Public Function Common_FolderCleanUp(ByVal s_FilePath)

	Dim o_Filesys,o_Folder,o_FileCollection,o_File
	'Set the file system object
	Set o_Filesys = CreateObject("Scripting.FileSystemObject")
	'Set the folder target
	DisableRecoveryScenario
	On error resume next
	err.clear
	Set o_Folder = o_Filesys.GetFolder(s_FilePath)
	If err.number = 76 Then
		'Reporter.ReportEvent micDone,"Common_FolderCleanUp","Folder " & s_FilePath & "Does not exist"
		err.clear
		o_Filesys.DeleteFile(s_FilePath)
		If err.number = 0 then
			'Reporter.ReportEvent micDone,"Common_FolderCleanUp",s_FilePath & " File deleted"
			Print "Common_FolderCleanUp: " & s_FilePath & " File deleted Successfully"
		End If
		EnableRecoveryScenario
		On error goto 0
		Exit function
	End If
	'Set the collector (cof = collection of files)
	Set o_FileCollection = o_Folder.Files
	'Start the for each loop
	err.clear
	For Each o_File in o_FileCollection
	    'Delete each file
	    o_File.Delete
	Next

	
	If err.number = 0 then
		Common_FolderCleanUp = true
		'Reporter.ReportEvent micDone,"Common_FolderCleanUp","Folder files deleted"                  'As of now decided not to report after clean up
		'Print "Common_FolderCleanUp: Folder Files deleted Successfully"
	 else	 
		 Reporter.ReportEvent micWarning ,"Common_FolderCleanUp","Failed to delete some files. Please review"
		 Print "Warning!Common_FolderCleanUp: Failed to delete some files. Please review"
	End if
	EnableRecoveryScenario
	On error goto 0
	'clean up
	Set o_Filesys = Nothing
	Set o_Folder = Nothing
	Set o_FileCollection = Nothing
	
End Function


'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function To take backup of a source folder and copy into a target folder
'!
'!	Example Usage  : Common_FolderBackup "C:/TESTRESOURCES/PON","C:/TESTRESOURCES/PONArchive"
'! 	@Param  Source folder path(s_folder_Src), Target Folder path(s_folder_Tgt)
'!	@Return True if folder is copied successfully and False in case of failure or folder doesn't exists
'!	@author jayadev.budiboyina@amadeus.com 
'!	@Date 	Created: 13Dec2017 | Last Updated: 14Dec2017
Public Function Common_FolderBackup(byVal s_folder_Source,byVal s_folder_Target)
	
	Dim s_NewFolderPath,o_Fso
	
	'Formatting target folder
	s_folder_Target = replace(s_folder_Target,"/","\")
	If mid(s_folder_Target,len(s_folder_Target)) <> "\" Then
		s_folder_Target = s_folder_Target & "\"
	End If
	Set o_Fso = CreateObject("Scripting.FileSystemObject")
	s_NewFolderPath = s_folder_Target & o_Fso.GetBaseName(s_folder_Source) & "_"& trim(DotNetFactory.CreateInstance( "System.DateTime" ).Now.ToString( "ddMMyyHHmmss" ))
	
	
	If o_Fso.FolderExists(s_folder_Source) = "True" Then
		'Performs folder backup with timestamp 
		DisableRecoveryScenario
		On error resume next
		err.clear
		o_Fso.CopyFolder s_folder_Source, s_NewFolderPath
		If err.number = 0 then
			Reporter.ReportEvent micDone,"Common_FolderBackup","Folder Copied from " & s_folder_Source & " to " & s_NewFolderName
			Common_FolderBackup = True
		else
			Reporter.ReportEvent micWarning,"Common_FolderBackup","Failed to copy from " & s_folder_Source & " to " & s_NewFolderName
			Common_FolderBackup = False		 
		End if
		EnableRecoveryScenario
		On error goto 0
	else
	
	Reporter.ReportEvent micWarning,"Common_FolderBackup","Folder doesn't exists"
	Common_FolderBackup = False
	End If
	 
	Set o_Fso = Nothing
	
End Function


'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function To dump variable content to a desired file such as .log or .txt
'!
'!	Example Usage  : Common_LogDump "C:\TEMP","CM_Log",s_Content
'! 	@Param  s_FileLocation: File Location, s_FileName:Filename and s_Content:content
'!	@Return True: When file creation is successful, False:When file creation fails
'!	@author sanjeeth.nayak@amadeus.com 
'!	@Date 	Created: 13Dec2017 | Last Updated: 14Dec2017
Public function Common_LogDump(byVal s_FileLocation, byVal s_FileName,byVal s_Content)
	
	Dim o_Fso
	Set o_Fso = CreateObject("Scripting.FileSystemObject")
	
	Common_FolderCreate s_FileLocation
	
	s_FileLocation = replace(s_FileLocation,"/","\")
	If mid(s_FileLocation,len(s_FileLocation)) <> "\" Then
		s_FileLocation = s_FileLocation & "\"
	End If
	
	
	DisableRecoveryScenario
	On error resume next
	
	err.clear
	Set o_File = o_Fso.CreateTextFile(s_FileLocation & s_FileName, True)
	Set o_File = o_Fso.OpenTextFile(s_FileLocation & s_FileName, "ForReading", True)
	
	o_File.Write(s_Content)
	
	If (Err.Number = 0) or (Err.Number = 13) Then
		Reporter.ReportEvent micDone,s_FileName &" Saving:", "Saving Successful" & s_FileLocation &"\"& s_FileName
	Else
		Print "Warning: Common_LogDump Log dump Failure. There might be Issue with inputs. Please check"
	End If
	
	EnableRecoveryScenario
	On error goto 0
	Set o_Fso = Nothing
	Set o_File = Nothing
	
End function

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function to run any batch file
'!
'!	Example Usage  : Common_RunBatch "D:/CMLatestbuild/generic.bat"
'! 	@Param s_CMDCommand Batch file path
'!	@Return True: True: When Batch file runs successfully, False: Batch file run failure occurs
'!	@author sanjeeth.nayak@amadeus.com 
'!	@Date 	Created: 11Dec2017 | Last Updated: 14Dec2017
Public Function Common_RunBatch(byVal s_CMDCommand)
	
	Dim o_WinShell
	Set o_WinShell = CreateObject("WScript.Shell")
	DisableRecoveryScenario	
	On error resume next
	err.clear
	

	o_WinShell.run s_CMDCommand,1,TRUE
	
	If Err.Number = 0 Then
		Reporter.ReportEvent micDone,"Common_RunBatch", "Batch file: " & s_CMDCommand &" is run Successfully"
		Common_RunBatch = true
	Else
		Reporter.ReportEvent micFail,"Common_RunBatch", "Run Batch Failure. Issue with the inputs. Please Check!"
		Common_RunBatch = false
	End If
	
	Set o_WinShell = Nothing
	EnableRecoveryScenario
	On error goto 0
	
End Function

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function To check if a given file exists or not
'!
'!	Example Usage  : Common_RunBatch "D:/CMLatestbuild/generic.bat"
'! 	@Param s_CMDCommand Batch file path
'!	@Return True if file exists, else False
'!	@author sanjeeth.nayak@amadeus.com 
'!	@Date 	Created: 11Dec2017 | Last Updated: 14Dec2017
Public Function Common_FileExistance(byVal s_FileFullPath)

	Dim o_File
	Set o_File = CreateObject("Scripting.FileSystemObject")
	
	If (o_File.FileExists(s_FileFullPath) = true) Then
		common_FileExistance = True
		'Reporter.ReportEvent micPass, "Common_FileExistance", s_FileFullPath & " Exists"
		Print "Common_FileExistance:"& s_FileFullPath & " Exists"
	Else
		common_FileExistance = False
		'Reporter.ReportEvent micDone, "Common_FileExistance", s_FileFullPath & " Does not Exist"
		Print "Common_FileExistance:"& s_FileFullPath & " Does not Exist"
	End If
	set o_File = Nothing
	
End Function



'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function To create a folder in specified path if it is not yet present
'!
'!	Example Usage  : Common_FolderCreate "C:\TESTRESOURCES\PON"
'! 	@Param s_FolderPath Folder Full path
'!	@Return True if Folder already exists/Folder creation is successful, False if there are any error while creating folder
'!	@author sanjeeth.nayak@amadeus.com 
'!	@Date 	Created: 11Dec2017 | Last Updated: 14Dec2017
Public Function Common_FolderCreate(byVal s_FolderPath)
		
	Dim o_FSO
	
	Set o_FSO = CreateObject("Scripting.FileSystemObject")
	'If folder exists already donot attempt to create
	If Not o_FSO.FolderExists(s_FolderPath) Then
		DisableRecoveryScenario
		On error resume next
		err.clear
		o_FSO.CreateFolder(s_FolderPath)
		If Err.Number = 0 Then
	  		'Reporter.ReportEvent micDone,"Common_FolderCreate", s_FolderPath & " Created Successfully!"
	  		Print "Common_FolderCreate:" & s_FolderPath & "Created Successfully"
	  		'Commented the reporting of folder create
		Else
			Reporter.ReportEvent micWarning,"Common_FolderCreate", "Error while creating folder. Please check: " & s_FolderPath
		End If
		EnableRecoveryScenario
		On error goto 0
	else
		'Reporter.ReportEvent micDone,"Common_FolderCreate", s_FolderPath & " Exists already!"
		'Commented the reporting of folder create
	End If
	
End Function



'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function To import data from excel sheet to the UFT data sheet
'!
'!	'Method to import from ALM -Resources/Plan/Lab and Local machine
'!
'!	'Only Excel sheet supported at the moment
'!	Example Usage: Common_ImportData "LOCAL", "C:\TESTRESOURCES\LoginProperty.xls","7X","LoginData") 
'! 	@Param s_From - Currently "LOCAL" to be used,s_SheetPath - Full path of source file,s_FromSheet - source Sheet name or number ,s_ToSheet - destination sheet name in UFT data sheet
'!	@Return True if data import is successful, False if data import could not be performed
'!	@author sanjeeth.nayak@amadeus.com 
'!	@Date 	Created: 11Dec2017 | Last Updated: 20Dec2017
Public Function Common_ImportData(ByVal s_From, ByVal s_SheetPath,ByVal s_FromSheet,ByVal s_ToSheet) 

	if ucase(s_From) = "LOCAL" then

		DisableRecoveryScenario
		On error resume next
		
		err.clear
		
		DataTable.AddSheet s_ToSheet 'If already sheet is present it wont add the sheet in UFT data sheet
		
		DataTable.ImportSheet s_SheetPath, s_FromSheet, s_ToSheet
		
'		If err.number = 0 Then
'	  		Reporter.ReportEvent micDone,"Common_ImportData", " Importing done Successfully!"
		'Else
		If err.number <> 0 then
			If (instr(ucase(s_SheetPath),"VDDP")) and (err.number = 20012) Then
				
				err.clear
				
				Common_VDDPCleanUp
				
				DataTable.ImportSheet s_PONFolderPath & "\VDDP.xlsx", s_FromSheet, s_ToSheet
			
			elseIf (instr(ucase(s_SheetPath),"DDP")) and (err.number = 20012) Then
				
				err.clear
				
				Common_DDPCleanUp
				
				DataTable.ImportSheet s_PONFolderPath & "\DDP.xlsx", s_FromSheet, s_ToSheet

			elseIf err.number <> 0 Then
				Reporter.ReportEvent micWarning,"Common_ImportData", "Error while Importing. Please check: " & s_From &","& s_SheetPath &","&  s_FromSheet &","& s_ToSheet
			End If	

		
		End If
		EnableRecoveryScenario
		On error goto 0
		
		If instr(ucase(s_SheetPath),"VDDP") > 0 Then
			'ToDo: call VDDP cleanup after import sheet
		End If
		
	End If
	On error goto 0
	EnableRecoveryScenario
End Function


'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!This function will run DDP utility and Imports VDDP data to DDP Data data sheet
'!
'!  Example Usage : Common_CallDDP()
'! 	@Param  None
'!	@Return True - When DDP completes data creation succesfully, False - When DDP issues exists and VDDP is not generated
'!	@author	sanjeeth.nayak@amadeus.com
'! 	@See https://rndwww.nce.amadeus.net/confluence/pages/viewpage.action?spaceKey=ADB&title=GATI-User+Guide#GATI-UserGuide-HowtocreatetestdatausingPONUtilitythroughGATI?
'!	@Date 	Created: 11Nov2019 
Public Function Common_CallDDP()
	
	If environment("TestIteration") = 1 Then
		
		'Initialise Common_CallDDP to return False by default
		Common_CallDDP = False
		Common_FolderCleanUp "C:\TESTRESOURCES\PON\DDP.xlsx"
		Common_DownloadWithPreferance "DDP", "C:\TESTRESOURCES\PON"
		Common_ImportData "LOCAL",s_PONFolderPath & "\DDP.xls",1,"DDP"
		Common_DynamicEnvVarCreate "DDP", "DDP"

		Print "Common_CallDDP: DDP Utility run Successfully"	
	End If
		
End Function 




'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function To remove "" from VDDP and save
'!
'!	Example Usage: Common_VDDPCleanUp 
'! 	@Param None
'!	@Return True if VDDP cleanup is successful, False if there are any unexpected errors while VDDp clean up
'!	@author sanjeeth.nayak@amadeus.com 
'!	@Date 	Created: 11Dec2017 | Last Updated: 20Dec2017
Public Function Common_VDDPCleanUp()
	
	Dim o_ObjExcel,o_ObjWorkbook,o_ObjWorksheet,o_ObjRange
			
	Set o_ObjExcel = CreateObject("Excel.Application")
			
	o_ObjExcel.Visible = false
	
	DisableRecoveryScenario
	On error resume next
			
	Set o_ObjWorkbook = o_ObjExcel.Workbooks.Open(s_PONFolderPath & "\VDDP.xls")    
			
	Set o_ObjWorksheet = o_ObjWorkbook.Worksheets(1)
			
	Set o_ObjRange = o_ObjWorksheet.UsedRange
	
	o_ObjRange.Replace chr(34), ""
	
	o_ObjWorkbook.Saveas s_PONFolderPath & "\VDDP.xlsx", 51
	
	o_ObjWorkbook.Close
	
	Set o_ObjWorkbook = nothing
	set o_ObjExcel = nothing
	
	Common_FolderCleanUp s_PONFolderPath & "\VDDP.xls"
	
	if err.number <> 0  then
		Common_Report "Unexpected Error while performing VDDP CleanUp|Common_VDDPCleanUp|Warning"
	End if
	
	EnableRecoveryScenario
	On error goto 0
	
	'Reporter.ReportEvent micDone,"Common_VDDPCleanUp", "VDDP CleanUp done Successfully!"
	Print "Common_VDDPCleanUp: VDDP CleanUp done Successfully!"
End Function





'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function To remove "" from DDP and save --------------> need to merge with VDDP clean up some day
'!
'!	Example Usage: Common_DDPCleanUp 
'! 	@Param None
'!	@Return True if DDP cleanup is successful, False if there are any unexpected errors while VDDp clean up
'!	@author sanjeeth.nayak@amadeus.com 
'!	@Date 	Created: 11Dec2017 | Last Updated: 20Dec2017
Public Function Common_DDPCleanUp()
	
	Dim o_ObjExcel,o_ObjWorkbook,o_ObjWorksheet,o_ObjRange
			
	Set o_ObjExcel = CreateObject("Excel.Application")
			
	o_ObjExcel.Visible = false
	
	DisableRecoveryScenario
	On error resume next
			
	Set o_ObjWorkbook = o_ObjExcel.Workbooks.Open(s_PONFolderPath & "\DDP.xls")    
			
	Set o_ObjWorksheet = o_ObjWorkbook.Worksheets(1)
			
	Set o_ObjRange = o_ObjWorksheet.UsedRange
	
	o_ObjRange.Replace chr(34), ""
	
	o_ObjWorkbook.Saveas s_PONFolderPath & "\DDP.xlsx", 51
	
	o_ObjWorkbook.Close
	
	Set o_ObjWorkbook = nothing
	set o_ObjExcel = nothing
	
	Common_FolderCleanUp s_PONFolderPath & "\DDP.xls"
	
	if err.number <> 0  then
		Common_Report "Unexpected Error while performing DDP CleanUp|Common_VDDPCleanUp|Warning"
	End if
	
	EnableRecoveryScenario
	On error goto 0
	
	'Reporter.ReportEvent micDone,"Common_VDDPCleanUp", "VDDP CleanUp done Successfully!"
	Print "Common_VDDPCleanUp: DDP CleanUp done Successfully!"
End Function





'----------------------------------------------------------------------------------------------------------------------------------------------------
'	# Public Function Common_DateModifier()
'
' 		~ This function will 
'		~ Usage	 :
' 		~ Input  : 
'		~ Output : 
'
'
'	@author		:   
'	@copyright	:  	2018 Amadeus Services Limited. All rights reserved.
'	@Author	:   
'	@Date  Created:  | Last Updated: 
'----------------------------------------------------------------------------------------------------------------------------------------------------
'ToDo
'Public Function Common_ModifyDateTime(byref d_DateIn,byRef s_Modifier)
'
'	
'	If (instr(1,sDateTime,":") > 0) Then
'		sDateTime = ucase(sDateTime)
'		aDateTimetemp = split(sDateTime,":")
'		
'		If (instr(1,"YYYYMDHNS",aDateTimetemp(0))>0) Then 'Year Month Day Hour Minute Second
'			If isnumeric(aDateTimetemp(1)) Then
'				DisableRecoveryScenario
'On error resume next
'				err.clear			
'				dDateIn = DateAdd(aDateTimetemp(0),cint(aDateTimetemp(1)),dDateIn)
'				
'				If err.number > 0 Then
'					reporter.ReportEvent micDone,"Common_ModifyDateTime","Cannot add/Subtract with the given input"
'					EnableRecoveryScenario
'On error goto 0
'					Exit function
'				End If
'				
'				call sFrame_SetGlobalVar(dDateOut, dDateIn)
'				bErrorFlag = false
'				
'			Else
'				sErrorType = "OffSet time is not numberic"
'			End If
'		Else
'			sErrorType = "Interval argument is not valid"
'		End If
'	End If
'	
'End Function
'




'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function to terminate all the process instances of a given application
'!
'!  CAUTION: This function must be used only when it is really needed, as it will close unsaved document/content
'!	Example Usage: Common_KillGUIApp "1A-Launcher.exe"
'! 	@Param s_AppName - Application process full name with extension 
'!	@Return None
'!	@author sanjeeth.nayak@amadeus.com 
'!	@Date 	Created: 11Dec2017 | Last Updated: 20Dec2017
Public Function Common_KillGUIApp(byval s_AppName)
	Dim o_shell
	Set o_shell=CreateObject("WScript.Shell")
	o_shell.Run "TASKKILL /F /IM " & s_AppName
	Set o_shell=nothing
	Common_Report s_AppName & " Terminated|Common_KillGUIApp"
	wait 2
	'Todo: check if app has actually closed or not
End Function



'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function to Programatically Load Object Repository from ALM resource to an UFT test.  
'!
'!	Example Usage: Common_KillGUIApp "1A-Launcher.exe"
'! 	@Param s_AppName App name such as "CM"
'!	@Return None
'!	@author ravi.kumar@amadeus.com
'!	@Date 	Created: 11Dec2017 | Last Updated: 20Dec2017
Public Function Common_LoadOR(byval s_AppName)
	DisableRecoveryScenario
	On error resume next	
	err.clear
	Dim s_RepPath
	RepositoriesCollection.RemoveAll()
	Common_DownloadTestResource Ucase(s_AppName) & "_OR.tsr", s_LocalResourceFolder
	s_RepPath=s_LocalResourceFolder & "\" & Ucase(s_AppName) & "_OR.tsr"
	RepositoriesCollection.Add(s_RepPath)
	'Reporter.ReportEvent micDone,"Common_LoadOR", s_AppName &" OR Loaded Successfully!"
	Print "Common_LoadOR: "& s_AppName &" OR Loaded Successfully!"
	If err.number <> 0 Then
		Print "ERROR! Common_LoadOR: "& s_AppName &" OR Loading error!"
	End If
	On error goto 0
	EnableRecoveryScenario
End Function



'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function to create Global variables known as environment variables dynamically. We need to pass UFT data sheet name as input. Each column name will become environment variable where in respective row value will be the value which will be assigned to the environment variable 
'!
'!	Example Usage: Common_DynamicEnvVarCreate "LoginData","env"   'This will result in Creating environment variables by considering UFT data sheet LoginData
'! 	@Param s_FromDataSheet- Data sheet name from which environment values will be created, s_VarPrefix - Variable Prefix
'!	@Return None, Creates environment variables
'!	@author sanjeeth.nayak@amadeus.com 
'!	@Date 	Created: 11Dec2017 | Last Updated: 20Dec2017
Public Function Common_DynamicEnvVarCreate(ByVal s_FromDataSheet,ByVal s_VarPrefix)

	Dim i_ColCount,i_Iterator,s_ColName,s_Exec,s_Value
	i_ColCount = DataTable.GetSheet(s_FromDataSheet).GetParameterCount

	For i_Iterator = 1 To i_ColCount Step 1
    	s_Value = replace(DataTable.GetSheet(s_FromDataSheet).GetParameter(i_Iterator),Chr(34),"") 'Need no double quotes
   	    s_ColName = s_VarPrefix & "_" & DataTable.GetSheet(s_FromDataSheet).GetParameter(i_Iterator).Name
   	    s_ColName = replace(s_ColName," ","")
    	s_Exec = "Environment(" & chr(34) & s_ColName & chr(34) & ")=" & chr(34) &  s_Value & chr(34)
    	Execute s_Exec
	Next
	
	'Reporter.ReportEvent micDone,"Common_DynamicEnvVarCreate", s_FromDataSheet &" Sheet Loaded Successfully! and env Vars created with prefix: " & s_VarPrefix

End Function

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function to Downlaod attachments either from test case in Plan/test set or test set in ALM to the local machine  
'!
'!	Example Usage: Common_DownloadAttachment "PLAN-TEST","PONStart_1.xls","C:/TESTRESOURCES/PON"   'This will result in download of Ponstart file to PON folder from ALM test in plan
'! 	@Param s_From takes Either "PLAN-TEST" or "LAB-TEST" or "SET" (to search the attachment in Test case in Test Plan, Test case in Test set or Test set respectively).
'!	@Param s_QcAttachmentName Attachment to be searched,s_LocalPathToCopy Full path where attachment to be downloaded
'!	@Return true if attachment download is successful else, False 
'!	@author sanjeeth.nayak@amadeus.com 
'!	@Date 	Created: 11Dec2017 | Last Updated: 20Dec2017
Public Function Common_DownloadAttachment(byVal s_From, byVal s_QcAttachmentName,byVal s_LocalPathToCopy)
	Dim o_AttachmentFactory,o_AttachList,s_TempPath,a_Arraypath,s_TempName,s_LocalPath,i_Iterator,o_Attachment,i_Count,o_FSO
	'Mark Filde download as false initially
	Common_DownloadAttachment = False
	
	DisableRecoveryScenario
	On error resume next
	err.clear
	
	Select Case ucase(s_From)
		Case "PLAN-TEST"
			Set o_AttachmentFactory = QCUtil.CurrentTest.Attachments
		Case "LAB-TEST"
			Set o_AttachmentFactory = QCUtil.CurrentTestSetTest.Attachments
		Case "SET"
			Set o_AttachmentFactory = QCUtil.CurrentTestSet.Attachments
		Case else
			reporter.ReportEvent micWarning,"Common_DownloadAttachment", "s_From: Case not defined"
			EnableRecoveryScenario
			On error goto 0
			Exit function
	End Select
	
	If err.number <> 0 Then
		EnableRecoveryScenario
		On error goto 0
		Exit function
	End If
	'already defined..**rupa
	EnableRecoveryScenario
	On error goto 0

'defining on error**rupa

DisableRecoveryScenario
	On error resume next
	err.clear
	
	Set o_AttachList = o_AttachmentFactory.NewList ("")
	
	If o_AttachList.Count > 0 Then
	
		For i_Iterator = 1 to o_AttachList.Count
		
			Set o_Attachment = o_AttachList.Item(i_Iterator)
			s_TempPath = o_Attachment.FileName
			
			'Get temp file path and create array to hold elements
			a_Arraypath = split(s_TempPath,"\")
			i_Count = Ubound(a_Arraypath)
			
			'We use the last element to grab the file name we will use in target folder
			s_TempName = a_Arraypath(i_Count)
			
			'Check to see if file name exist in QC
			If instr(s_TempPath, s_QcAttachmentName)>0 Then
				If not ((ucase(s_QcAttachmentName) = "TTSINJECTOR") and ((instr(ucase(s_TempPath),"DIRECTTTSINJECTOR"))>0)) Then 'If the file name is not TTSInjector_xyz or it doesnt have DIRECTTTSINJECTOR in it's path 
					
					o_Attachment.Load True,""
					Set o_FSO = CreateObject("Scripting.FileSystemObject") 
					s_LocalPath = s_LocalPathToCopy &"\" & s_TempName
					'Check to see if the file exist -- if it does delete it before copying new file
					If o_FSO.FileExists(s_LocalPath) then
						o_FSO.DeleteFile(s_LocalPath) 
					end If
					
					o_FSO.MoveFile s_TempPath,s_LocalPath    
	
	
					If ((instr(ucase(s_QcAttachmentName),"DIRECTTTSINJECTOR"))>0) then
						s_LocalPathToCopy = s_LocalPathToCopy &"\" & "DirectTTSInjector.bat"
					ElseIf ((instr(ucase(s_QcAttachmentName),"TTSINJECTOR"))>0) then
						if instr(ucase(s_QcAttachmentName),".PLAY")>0 then
							s_LocalPathToCopy = s_LocalPathToCopy &"\" &s_QcAttachmentName
						else
							s_LocalPathToCopy = s_LocalPathToCopy &"\" &s_QcAttachmentName & ".play"
						End If
					ElseIf ((instr(ucase(s_QcAttachmentName),"TTSCONFIG"))>0) then
						s_LocalPathToCopy = s_LocalPathToCopy &"\" & s_QcAttachmentName
					ElseIf ((instr(ucase(s_QcAttachmentName),"REGEXDICT"))>0) then
						s_LocalPathToCopy = s_LocalPathToCopy &"\" & "RegExDict.txt"
					ELSE
						a_QcAttachmentName = split(s_QcAttachmentName, ".")
						s_TempVar = ucase(a_QcAttachmentName(ubound(a_QcAttachmentName)))
						If (instr(s_TempVar,"XLS")>0) or (instr(s_TempVar,"PS1")>0) or (instr(s_TempVar,"BAT")>0) Then
							s_LocalPathToCopy = s_LocalPathToCopy &"\" & s_QcAttachmentName
						Else
							s_LocalPathToCopy = s_LocalPathToCopy &"\" & s_QcAttachmentName & ".xls"
						End If
					End If
					
								
					'Check to see if a file with the same name exist in the target folder.
					'If it does delete it before renaming
					If o_FSO.FileExists(s_LocalPathToCopy)then
						o_FSO.DeleteFile(s_LocalPathToCopy)
					End If
					
					o_FSO.MoveFile s_LocalPath,s_LocalPathToCopy
					Common_DownloadAttachment = True
					
					'Reporter.ReportEvent micPass,"Common_DownloadAttachment",s_From & "File Download Successful"
					Print "Common_DownloadAttachment: "& s_From & " File Download Successful"
					Exit for
				End If	
			End If
		Next       
	Else
	
		'Reporter.ReportEvent micDone,"Common_DownloadAttachment","File not found in "& s_From
		print "Common_DownloadAttachment: File not found in "& s_From
	End If
	EnableRecoveryScenario
	On error goto 0
	Set o_AttachmentFactory = Nothing
End Function



'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function to generate Random alpha String or Random alphaNumeric String or Random number of length requested
'!
'!	Example Usage: Common_RandomData(2,8) <- to get a random alphaNumeric string with 8 char length
'! 	@Param i_Mode: for the slection of type of random data needed, 
'!			* If i_Mode value is 1 then Random alpha String with get generated.
'!			* If i_Mode value is 2 then Random alpha-Numeric String with get generated.
'!			* If i_Mode value is 3 then Random number with get generated.
'!  @param s_Len: Length of the random number to be generated.
'!	@Return Random alpha String or alphaNumeric String or number
'!	@author ravi.kumar@amadeus.com
'!	@Date 	Created: 11Dec2017 | Last Updated: 20Dec2017
public Function Common_RandomData(ByVal i_Mode,ByVal s_Len)
	Dim s_Return, s_Main,i
	
	Select Case i_Mode
	'Case 1 to get random string of the requested length.
	Case 1
	    s_Main = "fghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
		
	'Case 2 to get random alpha numeric string of the requested length .	
	Case 2
      	s_Main = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
		
	'Case 3 to get random number of the requested length .	
	case 3
	    s_Main = "123456789"
	    
	case Else 
	  Reporter.ReportEvent micFail,"Common_RandomData","Mode passed "&i_Mode&" is not Valid"
	  Exit Function
	  
    End Select
    
	For i = 1 to s_Len
		s_Return=s_Return & Mid(s_Main,RandomNumber(1, Len(s_Main)),1)
	Next
	Reporter.ReportEvent micDone,"Common_RandomData","random data generated is = "&s_Return
	Common_RandomData = s_Return
	
End Function
'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function to take the Screenshot and then Upload the screenshot to the Test Result
'!
'!	Example Usage: Common_CaptureScreenshot("Login Successful",0)  
'! 	@Param S_Description: Description of the the screenshot should be provided.s_StatVal depicts status 0=Fail ,1=Pass and other values will be treated as done
'!	@Return None
'!	@author ravi.kumar@amadeus.com
'!	@Date 	Created: 11Dec2017 | Last Updated: 20Dec2017
public Function Common_CaptureScreenshot(ByVal S_Description,ByVal s_StatVal)
   
	Dim o_objFSO,o_ObjFolder,o_ObjFiles,f,s_ReportStat
	Dim s_ActionName,o_ObjCurrentTestCase,s_TimeStampDate,s_ScrName,s_ScreenshotPath
	
	
	s_ActionName=environment.Value("ActionName")
	
	Set o_ObjCurrentTestCase = QCUtil.CurrentRun
	'This is to make sure that no screenshot is captured if the test case is not run from ALM
'		If (o_ObjCurrentTestCase Is Nothing) Then
'			Exit Function
'		End If
	
	s_TimeStampDate= Now()
	s_ScrName=s_TimeStampDate&".png"
	s_ScrName=Replace(s_ScrName,"/","-")
	s_ScrName=Replace(s_ScrName,":","-")
	'Screenshot path
	s_ScreenshotPath=s_ScreenshotFolderPath&"\"&s_ScrName
	'Capture screenshot and store at Location "C:\TESTRESOURCES\Screenshot"
	Desktop.CaptureBitmap s_ScreenshotPath, True
	If s_StatVal=0 then
	   Reporter.Reportevent micFail,s_ActionName & "-Image",S_Description,s_ScreenshotPath
	   Elseif s_StatVal=1 then
	   Reporter.Reportevent micPass,s_ActionName & "-Image",S_Description,s_ScreenshotPath
	   ElseIf s_StatVal<>0 and s_StatVal<>1 Then
	   Reporter.Reportevent micDone,s_ActionName & "-Image",S_Description,s_ScreenshotPath
	 End If  
	
	'To Clean the Screenshot folder at location "C:\TESTRESOURCES\Screenshot"
	Set o_objFSO = CreateObject("Scripting.FileSystemObject")
	Set o_ObjFolder = o_objFSO.GetFolder(s_ScreenshotFolderPath)
	Set o_ObjFiles=o_ObjFolder.Files
	For Each f In o_ObjFiles
	    o_objFSO.DeleteFile(f)
	Next

End Function


'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function to download CM JFE from server location to the local machine
'!
'!	Example Usage: Common_JFEAutoDownload
'! 	@Param None, DesiredJFEVersion.cfg attached in ALM resource will have JFE version information
'!	@Return None, C:\TESTRESOURCES\CMJFESync\LatestCMBuild will have the desired version of JFE
'!	@author sanjeeth.nayak@amadeus.com 
'!	@Date 	Created: 3Jan2018 | Last Updated: 3Jan2018
Public Function Common_JFEAutoDownload()
	'Common_Report "Checking if JFE version is as per desired version mentioned in ALM\Test Resources\CommonResources\AppSync\DesiredJFEVersion"
	'Create CMAppSync Folder If not existing already
	Common_FolderCreate s_CMJFESync
	CM_AppClose()
	'Common_DownloadTestResource "DesiredJFEVersion.cfg","C:\TESTRESOURCES\CMJFESync"
	
'	If not Common_FileExistance(CMJFESync & "\ServerPath.txt") Then
'		Common_DownloadTestResource "ServerPath.txt","C:\TESTRESOURCES\CMJFESync"
'	End If
'	
'	If not Common_FileExistance(CMJFESync & "\CMJFESync.exe") Then
'		Common_DownloadTestResource "CMJFESync.exe","C:\TESTRESOURCES\CMJFESync"
'	End If

	If ucase(Environment("TestEnv_JFE_Type")) = "MFO_CLICK" Then
		'Run MFO version of JFE
		
		Common_DownloadWithPreferance "CMJFESync_MFO.bat","C:\TESTRESOURCES\CMJFESync"
		
'		If not Common_FileExistance(CMJFESync & "\CMJFESync_MFO.bat") Then
'			Common_DownloadTestResource "CMJFESync_MFO.bat","C:\TESTRESOURCES\CMJFESync"
'		End If
		Common_RunBatch "C:\TESTRESOURCES\CMJFESync\CMJFESync_MFO.bat > C:\TESTRESOURCES\CMJFESync\AppSync.log 2>&1"
	Else
		
		Common_DownloadWithPreferance "CMJFESync.bat","C:\TESTRESOURCES\CMJFESync"
'		If not Common_FileExistance(CMJFESync & "\CMJFESync.bat") Then
'			Common_DownloadTestResource "CMJFESync.bat","C:\TESTRESOURCES\CMJFESync"
'		End If
		'Non MFO version of JFE
		Common_RunBatch "C:\TESTRESOURCES\CMJFESync\CMJFESync.bat > C:\TESTRESOURCES\CMJFESync\AppSync.log 2>&1"
	
	End If
	'Common_FileExistance "C:\TESTRESOURCES\CMJFESync\DownloadComplete.txt"

End Function




'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function to check outlook if mail has appeared on not
'!
'!	Example Usage: Common_ReadEmailContent "ravi.kumar@amadeus.com", "Customer List", "All Accepted Pax", 150
'! 	@Param s_From - Email from, s_Subject - subject, s_Body - body and i_MaxWait max wait in seconds
'!	@Return True if email found Else, False
'!	@author sanjeeth.nayak@amadeus.com 
'!	@Date 	Created: 22Dec2018 | Last Updated: 13Jan2018
Public Function Common_ReadEmailContent(byVal s_From, byVal s_Subject, byVal s_Body, byVal i_MaxWait, byVal s_Attachment)
Dim o_OutLookApp,o_NameSpace, olFolderInbox, b_EmailFoundFlag, d_ForIgnoringOldUnreadEmail, o_Inbox, d_MaxWait, o_AllMails, o_Mail, s_FileName, s_Append_FileName
	Set o_OutLookApp = Createobject("outlook.application") 			'Create outlook app object
	Set o_NameSpace = o_OutLookApp.getnamespace("mapi")   			'Create Namespace object
	
	b_EmailFoundFlag = False 										'Set Email found as false
	
	'Create reference to Inbox Folder
	Set o_Inbox = o_NameSpace.GetDefaultFolder(6) '6 is index for Inbox 
	
	'Find all items in the Inbox Folder
	
	d_ForIgnoringOldUnreadEmail = DateAdd("n", "-8", Now) 			'Consider only emails got from last 8 min
	d_MaxWait = DateAdd("s", i_MaxWait, Now)
	
	Do
		Set o_AllMails = o_Inbox.Items
		
		mailcount = o_AllMails.Count
		For i = mailcount to 0 step -1								'Check for the unread mails
			Set o_Mail = o_AllMails(i)
			If not o_Mail.unread Then					
				Exit for
			End if
			If o_Mail.unread Then
				If instr(o_Mail.subject,s_Subject)> 0 Then
					If instr(lcase(o_Mail.sendername), lcase(s_From))> 0 Then
						If instr(o_Mail.body, s_Body)> 0 Then
							If cdate(o_Mail.senton) > d_ForIgnoringOldUnreadEmail Then
								If ucase(s_Attachment) = "Y" Then
									Common_FolderCleanUp s_EmailAttachmentFolder
									Common_FolderCreate s_EmailAttachmentFolder
									For each att in o_Mail.Attachments ' Downloads multiple attachments from that mail
										s_FileName = att.FileName
										att.SaveAsFile s_EmailAttachmentFolder & s_FileName
										s_Append_FileName = s_Append_FileName&"|"&s_FileName
									Next
									Common_ReadEmailContent = s_Append_FileName ' Returns the downloaded filenames appended with de-limiter "|"
								End If							
								b_EmailFoundFlag = True
								o_Mail.unread=False 
								Exit Do
							End If
						End If
					End If
				End If
			End If
		Next 
	Loop While Now < d_MaxWait  									' Retry till max wait time
		
	If b_EmailFoundFlag Then
		reporter.ReportEvent micPass, "Common_ReadEmailContent", "As expected got below email: " &  chr(13) & o_Mail.sendername &  chr(13) & o_Mail.subject &  chr(13) & o_Mail.body &  chr(13) & "On:"&  o_Mail.senton
	Else
		reporter.ReportEvent micFail, "Common_ReadEmailContent", "Email search condition not met. Please check!!"
	End If
	
'	Todo: Currently just tells email is found or not. Reporting needs to be changed to report precisely which condition is not met
End Function





'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function to validate the content of message area in CM JFE
'!
'!	Example Usage: Common_CMMessageAreaCheck "ValidationText"
'! 	@Param s_ToVerify - Validation String, By default system waits for 60s till message appears
'!	@Return True if input string is part of message area text Else, False
'!	@author sanjeeth.nayak@amadeus.com 
'!	@Date 	Created: 22Dec2018 | Last Updated: 13Jan2018
Public Function Common_CMMessageAreaCheck(byVal s_ToVerify)
	Dim s_TempVal, d_MaxWait
	
	d_MaxWait = DateAdd("s", i_MaxObjSynTime, Now)
	Common_CMMessageAreaCheck = false
	
	DisableRecoveryScenario
	On error resume next
	Do
		Err.clear
		s_TempVal = replace(trim(JavaWindow("wndCM").JavaEdit("txtMessageArea").GetROProperty("text")),chr(10),"")
		a_ToVerify = split(s_ToVerify, "~OR~") 
	
		For Iterator = 0 To ubound(a_ToVerify) Step 1
			If Err.number = 0 and instr(s_TempVal,a_ToVerify(Iterator)) > 0 Then
				Reporter.ReportEvent micPass, "Common_CMMessageAreaCheck", a_ToVerify(Iterator) & " :is found in Message Area as expected!"
				Common_CMMessageAreaCheck  = true
				Exit For
			End If
		Next
		If Common_CMMessageAreaCheck Then
			Exit Do
		End If

		wait 5
	Loop While Now < d_MaxWait
	EnableRecoveryScenario
	On error goto 0
	
	If Common_CMMessageAreaCheck = false Then
		Reporter.ReportEvent micFail, "Common_CMMessageAreaCheck", s_ToVerify & " :is not found in Message Area! found ["&s_TempVal&"]Instead"
	End If
	
	Common_Report "Message Area"
	
End Function




'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!  Common Function to report information any step to UFT/ALM test report
'!
'!	Example Usage: Below are the modes
'!
'!	Common_Report "TestDescription Only" <-Step will be marked as Done
'!
'!	Common_Report "TestDescription|TestStep" <-Step will be marked as Done
'!
'!	Common_Report "TestDescription|TestStep|PASS" <-Step will be marked as Pass
'!
'!	Common_Report "TestDescription|TestStep|FAIL"
'!
'!	Common_Report "TestDescription|TestStep|WARNING"
'!
'!	Common_Report "TestDescription|TestStep|DONE"
'! 	@Param s_Description - Step description, Step information and step result goes here separated by |
'!	@Return None
'!	@author sanjeeth.nayak@amadeus.com 
'!	@Date 	Created: 22Dec2018 | Last Updated: 13Jan2018
Public Function Common_Report(ByVal s_Description)
	
	Dim a_Description,s_Result
	Dim s_ActionName,o_ObjCurrentTestCase,s_ScreenshotPath
	
	s_Result = "micDone"
	
	s_ActionName=environment.Value("ActionName")
	
	a_Description = Split(s_Description,"|")
	
	If ubound(a_Description) > 0 Then
		s_Description = trim(a_Description(0))
		
		If not trim(a_Description(1)) = "" Then
			s_ActionName = trim(a_Description(1)) &"-"& s_ActionName
		End If
		
		'Check if second element is a assertion
		If ubound(a_Description) > 1 then
			'If Second element is not assertion consider second element as Step number
			If (instr("DONEWARNINGPASSFAIL",ucase(trim(a_Description(2))))>0) Then
				s_Result = "mic" & trim(a_Description(2))
				'Check if there is Step number is present
			End If
		End If
	End If
	
	Set o_ObjCurrentTestCase = QCUtil.CurrentRun
	s_ScreenshotPath = ""
	
	If b_Capture Then
		'Screenshot path
		s_ScreenshotPath=s_ScreenshotFolderPath&"\" & Replace(Replace(cstr(Now())&".png","/","-"),":","-")
		
		'Capture screenshot and store at Location "C:\TESTRESOURCES\Screenshot"
		Desktop.CaptureBitmap s_ScreenshotPath, True
		
		s_ScreenshotPath = "," & chr(34) & s_ScreenshotPath & chr(34)
		
	End If
	
	Execute "Reporter.Reportevent "& s_Result &",s_ActionName,s_Description" & s_ScreenshotPath
	'To Clean the Screenshot folder at location "C:\TESTRESOURCES\Screenshot"
	Common_FolderCleanUp s_ScreenshotFolderPath
	
End Function




'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!  Common Function to validate current CM screen names
'!
'!	Example Usage: Below are the modes
'!
'!	Common_CMScreenCheck "Customer Identification" <- Waits until Customer Identification screen appears (Max wait is 60s)
'!
'!	Common_CMScreenCheck "Customer Acceptance|100" <- Waits until Customer Acceptance screen appears (Max wait is 100s)
'! 	@Param s_ScreenName - Screen name (String) for validation
'!	@Return True if the desired screen appears Else, False
'!	@author sanjeeth.nayak@amadeus.com 
'!	@Date 	Created: 22Dec2018 | Last Updated: 13Jan2018
Public Function Common_CMScreenCheck(byVal s_ScreenName)

	Dim a_ScreenName,d_MaxWait,s_ScreenNameTemp,a_GetCurrentScreenName, i_WaitTimeReporting
	s_ScreenNameTemp = s_ScreenName
	
	Common_CMScreenCheck = false
	a_ScreenName = Split(s_ScreenNameTemp,"|")
	
	If ubound(a_ScreenName)> 0 Then
		If isnumeric(a_ScreenName(1)) Then
			d_MaxWait = DateAdd("s", int(a_ScreenName(1)) , Now)
			s_ScreenNameTemp = a_ScreenName(0)
			i_WaitTimeReporting = int(a_ScreenName(1))
		Else 
			Common_Report "Wait time must be an integer!|Common_CMScreenCheck|Fail"
			Exittest 'Hard fail
		End If
	else
		d_MaxWait = DateAdd("s", i_BreadCrumbMaxWait, Now)
		i_WaitTimeReporting = i_BreadCrumbMaxWait
	End If
	
	DisableRecoveryScenario
	On error resume next
	Err.clear
	Do	
		'Main check for screen
		CM_DynamicSync
		DisableReporting
		If ucase(s_ScreenNameTemp) = "FLIGHT ACTIVITY LIST" Then
			wait 2
		End If
		a_GetCurrentScreenName = split(replace(replace(replace(JavaWindow("wndCM").JavaObject("objBreadCrumbTrail").Object.toString, ",,","~|~"),",","~|~"),":","~|~"),"~|~")
		EnableReporting
		If  Trim(a_GetCurrentScreenName(ubound(a_GetCurrentScreenName))) = Trim(s_ScreenNameTemp) Then
			Common_CMScreenCheck = true
			Exit do
		End If
		CM_DynamicSync
	Loop While Now < d_MaxWait
	EnableRecoveryScenario
	On error goto 0
	
	If ubound(a_ScreenName) = 2 Then
		if ucase(a_ScreenName(2))= "DONTREPORT" Then
			Exit function
		End If
	End If
	
	If Common_CMScreenCheck Then
		Common_Report "Screen (" & s_ScreenNameTemp & ") Found!" & "|Common_CMScreenCheck|Pass"
	Else
		Common_Report "Screen (" & s_ScreenNameTemp & ") Not Found! Even after waiting for " & i_WaitTimeReporting & " seconds|Common_CMScreenCheck|Fail"
	End If

End Function



'----------------------------------------------------------------------------------------------------------------------------------------------------
'	# Register_SelectRow(ByRef o_Object,ByRef s_SearchData)
'
' 		~ This function searches for a row based on search data and selects it
'		~ Usage	 : Register_SelectRow tblCPR, "Customer\Sanjeeth"
' 		~ Input  : 
'		~ Output : none
'
'	@author		:   Sanjeeth Nayak
'	@copyright	:  	2018 Amadeus Services Limited. All rights reserved.
'	@Author	:   sanjeeth.nayak@amadeus.com
'	@Date  Created:22/12/2017  | Last Updated: 
'----------------------------------------------------------------------------------------------------------------------------------------------------
Public Function Register_SelectRow(ByRef o_Object,ByRef s_SearchData)
'Todo:Occurance, Offset etc
	Environment("Last_SelectedRow") = ""
	Dim a_SearchData,i_Iterator,s_CellVal
	a_SearchData = split(s_SearchData,"|")
	'Searching starts here
	If ubound(a_SearchData) > 0 Then
		For i_Iterator = 0 To o_Object.Object.getRowCount-1
			s_CellVal=o_Object.GetCellData (i_Iterator,a_SearchData(0))
'			If Found then select that row and exit for
			If instr(s_CellVal,a_SearchData(1))>0 Then 
				o_Object.SelectRow i_Iterator
				Environment("Last_SelectedRow") = i_Iterator
				Exit for
			End If
		Next
'	Default functionality
	ElseIf isnumeric(s_SearchData) Then
		s_SearchData = cint(s_SearchData)
		o_Object.SelectRow s_SearchData
	Else
		'Report failure
		Common_Report "SelectRow Parameter Issue||Fail"
	End If
End Function


'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!   This function will resturn the full Flight activity name base on the input digits
'!
'!	Example Usage: Common_GetActivityName(1) -> To Run "Trigger Get Mass Airport Control"
'!
'!				    Number 2 -> To Run "Trigger Customer Product Record Feed CPR"
'!
'!				    Number 3 -> To Run  Number ="Open Acceptance"
'!
'!				    Number 4 -> To Run "Clean up guaranteed seats CGS"
'!
'!				    Number 5 -> To Run "Send Seats Occupied Message SOM"
'!
'!				    Number 6 -> To Run "Create Airline Warehouse Feed"
'!
'!				    Number 7 -> To Run "Generates Teletype BTM"
'!
'!				    Number 8 -> To Run "Send Teletype Passenger Manifest TPM"
'!
'!				    Number 9 -> To Run "Trigger Open Baggage"
'!
'!				    Number 10 -> To Run "Generic Print Request"
'!
'!				    Number 11 -> To Run "Send APIS Arrival"
'!
'!				    Number 12 -> To Run "Send APIS Overfly"
'!
'!				    Number 13 -> To Run "Send APIS Departure"
'!
'!				    Number 14 -> To Run "Archive Departure Plan"
'!
'!				    Number 15 -> To Run "Send Batch Regulatory Message Departure"
'!
'!				    Number 16 -> To Run "Send Batch Regulatory Message Arrival"
'!
'!				    Number 17 -> To Run "Trigger BPPR Synchronization"   
'!
'!				    Number 18 -> To Run "Send Close-out Regulatory Message"  
'!
'!				    Number 19 -> To Run "Send Batch AQQ PAXLST Message"	 
'! 	@Param i_ActivityNo - Mode to select which activity
'!	@Return True if the desired screen appears Else, False
'!	@author  ravi.kumar@amadeus.com
'!	@Date 	Created: 20Feb18 | Last Updated: 
Function Common_GetActivityName (i_ActivityNo)
   Dim  i_Mode
	 i_Mode=i_ActivityNo
	 Select Case i_Mode
	    case 1 
		   Common_GetActivityName="Trigger Customer Product Record Feed (CPR)"
        case 2
           Common_GetActivityName="Trigger Get Mass Airport Control"
		case 3 
		   Common_GetActivityName="Open Acceptance"
        case 4
		   Common_GetActivityName="Clean up guaranteed seats (CGS)"
        case 5 
		   Common_GetActivityName="Send Seats Occupied Message (SOM)"
        case 6
		   Common_GetActivityName="Create Airline Warehouse Feed"
		case 7
		   Common_GetActivityName="Generates Teletype BTM"
        case 8
		   Common_GetActivityName="Send Teletype Passenger Manifest (TPM)"
		case 9
		   Common_GetActivityName="Trigger Open Baggage"
		case 10
		   Common_GetActivityName="Generic Print Request"
  		case 11
		   Common_GetActivityName="Send APIS Arrival"
  		case 12
		   Common_GetActivityName="Send APIS Overfly"
  		case 13
		   Common_GetActivityName="Send APIS Departure"
	    Case 14
	    	Common_GetActivityName="Archive Departure Plan"
	    Case 15
	    	Common_GetActivityName="Send Batch Regulatory Message Departure"
	    Case 16
	    	Common_GetActivityName="Send Batch Regulatory Message Arrival"
	    Case 17
	    	Common_GetActivityName="Trigger BPPR Synchronization"   
	    Case 18
	    	Common_GetActivityName="Send Close-out Regulatory Message"  
		Case 19
	    	Common_GetActivityName="Send Batch AQQ PAXLST Message"	  
           Case 20
            Common_GetActivityName="Return Final E-Ticket Coupon Status"
		Case 21
			Common_GetActivityName="Print Matched E-Ticket"		
		Case 22
			Common_GetActivityName="Remove Chargeable Seat Restriction"
            Case 23
			Common_GetActivityName="Handle booking status change for HK/HL pax"				
	   	case Else 
	        Common_GetActivityName=Null
			Reporter.ReportEvent micFail,"Common_GetActivityName","Mode passed "&i_Mode&" is not Valid"
	   		Exit Function
	  
    End Select
		   
End Function



'----------------------------------------------------------------------------------------------------------------------------------------------------
'!	Function to select the row of a table based on the search criteria
'!	
'!		Example Usage  : Common_SelectRow(windowName,tableName,searchCriteria)
'!	
'!			  e.g  Common_SelectRow "wndCM","tblCustomerList","Customer|RACE Simon Mr;From|LHR;Seat|13B"
'!	
'!			  e.g Common_SelectRow "wndCM:dlgservice","tblCustomerList","Customer|RACE Simon Mr;From|LHR;Seat|13B"
'!	
'!  @Param windowName,tableName,searchCriteria
'!  @Return none
'!	@Author	ravi.kumar@amadeus.com
'!	@Date  Created: 05Mar18 | Last Updated:
function Common_SelectRow(byval s_window,byval s_tableStr,byval s_search)
	Dim s_GetRowNo,a_WindowSep,s_WindowPath
	s_GetRowNo=Common_GetRowNo(s_window,s_tableStr,s_search)
	'Below is a check if we got any row no as part of "Common_GetRowNo" if yes then continue else stop
	If s_GetRowNo >=0 Then
		If Instr(s_window,":")>0 Then
			a_WindowSep=Split(s_window,":")
			s_WindowPath="Javawindow(" &CHR(34)& a_WindowSep(0)&CHR(34) & ").JavaDialog("& CHR(34)&a_WindowSep(1)&CHR(34)&")"
		Else 
			s_WindowPath="Javawindow("& CHR(34)&s_window&CHR(34)&")"
		End if
		
		execute  s_WindowPath & ".JavaTable(" & CHR(34) & s_tableStr & CHR(34) & ").SelectRow " & s_GetRowNo
	Else
      Reporter.ReportEvent micfail, "Common_SelectRow", "No row Selected based on the input passed"
	End If
	
End Function


'----------------------------------------------------------------------------------------------------------------------------------------------------
'!	This function will return the selected row value based on the search row criteria
'!	
'!		Example Usage  : Common_GetRowNo(windowName,tableName,searchCriteria)
'!	
'!			  e.g  Common_GetRowNo("wndCM","tblCustomerList","Customer|RACE Simon Mr;From|LHR;Seat|13B")
'!	
'!			  e.g  Common_GetRowNo("wndCM:dlgservice","tblCustomerList","Customer|RACE Simon Mr;From|LHR;Seat|13B")
'!	
'!			  e.g  Common_GetRowNo("wndCM:dlgservice","tblCustomerList","Row(120)")
'!	
'!			  e.g  Common_GetRowNo("wndCM","tblCustomerList","Customer|WILD Alexander Mr;COL(2)|LHR;Seat|16D")
'!  @Param windowName,tableName,searchCriteria
'!  @Return Matched row number
'!	@Author	ravi.kumar@amadeus.com
'!	@Date  Created: 02Mar18 | Last Updated:
function Common_GetRowNo(byval s_window,byval s_tableStr,byval s_search)
	Dim i,l_rowNo,a_WindowSep,s_WindowPath,l_innerLoop,i_RowCountVal,i_flag,s_searchCriteria,s_LenghtofSearch,s_SearchPars,s_NoOfSearchPar,a_ColName(10),a_ColVal(10),a_GetColValue
	s_searchCriteria= s_search
	If Instr(ucase(s_search),"ROW(")>0 Then
		Common_GetRowNo=Common_RowColVal(s_search)
		Exit Function
	End If
    'split s_search by ";" to get the no of search parameters
	s_NoOfSearchPar=Split(s_search,";")
	s_LenghtofSearch=ubound(s_NoOfSearchPar)
	'To get the column name and column value
	For i = 0 To s_LenghtofSearch
		s_SearchPars=Split(s_NoOfSearchPar(i),"|")
		
		If Instr(ucase(s_SearchPars(0)),"COL(")>0 Then
			a_ColName(i)=Common_RowColVal(s_SearchPars(0))
		Else
            a_ColName(i)=s_SearchPars(0)		
		End If
		a_ColVal(i)=s_SearchPars(1)
	Next
	DisableRecoveryScenario
	On error resume next
	Err.clear
	If Instr(s_window,":")>0 Then
		a_WindowSep=Split(s_window,":")
		s_WindowPath="Javawindow(" &CHR(34)& a_WindowSep(0)&CHR(34) & ").JavaDialog("& CHR(34)&a_WindowSep(1)&CHR(34)&")"
	Else 
		s_WindowPath="Javawindow("& CHR(34)&s_window&CHR(34)&")"
	End if
    execute "i_RowCountVal = " & s_WindowPath & ".JavaTable(" & CHR(34) & s_tableStr & CHR(34) & ").GetRoProperty ("&CHR(34)&"rows"&CHR(34)&")"
	If err.number <> 0 Then
		Common_CaptureScreenshot "invalid window or Table name",0

		EnableRecoveryScenario
		On error goto 0
		Exit function
	End If
	''on error goto 0 is already defined
	EnableRecoveryScenario
	On error goto 0
	
	'Below loop is to get each column value of a table and match with the one passed this function. It it matches the loop returns the row matched.
	For l_rowNo = 0 to i_RowCountVal-1
		For l_innerLoop= 0 to s_LenghtofSearch
			DisableRecoveryScenario
			On error resume next
			Err.clear
			'This condition is to check if there a table on dialog and deal accordingly
		    execute "a_GetColValue = " & s_WindowPath & ".JavaTable(" & CHR(34) & s_tableStr & CHR(34) & ").GetCellData ("& CHR(34) & l_rowNo & CHR(34) &","& CHR(34) & a_ColName(l_innerLoop) & CHR(34) &")"
			
			If err.number <> 0 Then
				Common_CaptureScreenshot "invalid column name passed",0

				EnableRecoveryScenario
				On error goto 0
				Exit Function
			End If
			''already defined **rupa
			EnableRecoveryScenario
			On error goto 0
			
			If Instr(a_GetColValue,a_ColVal(l_innerLoop))>0 then
				i_flag=1
			Else 
				i_flag=0
				Exit for
			End if
		Next
	
		If i_flag=1 Then
			Common_GetRowNo=l_rowNo 'Return the row number matched.
			set a_GetColValue=Nothing
			set l_rowNo=Nothing
			'Reporter.ReportEvent micPass, "Common_GetRowNo", "The Row no found is ="&l_rowNo
			Exit for
		End If
	Next
	If i_flag=0 Then
		Common_GetRowNo=Null
		Reporter.ReportEvent micWarning, "Common_GetRowNo", "No row found based on the input passed"
	End If
    On error goto 0
	EnableRecoveryScenario    
End Function



'----------------------------------------------------------------------------------------------------------------------------------------------------
'! 		~ This function will return the value of the required column in table based on the search row criteria
'!
'!			  e.g  Common_ValidateTableValues "wndCM","tblCustomerList","Customer|RACE Simon Mr;From|LHR","Seat|13B"
'!
'!			  e.g: Common_ValidateTableValues "wndCM","tblCustomerList","Row(2)","Seat|13B;Customer|RACE Simon Mr"
'!
'!			  e.g  Common_ValidateTableValues "wndCM:dlgservice","tblCustomerList","Row(12)",COL(2)|13B;Customer|RACE Simon Mr"
'!
'!			  e.g  Common_ValidateTableValues "wndCM","tblCustomerList",COL(2)|LHR;Seat|16D","COL(2)|13B;Customer|RACE Simon Mr")
'!			Common_ValidateTableValues "wndCM","tblCustomerList","Row(2)","Seat|~CHECKIFBLANK~"
'!  @Param s_window - windowName,s_search - tableName,s_Validate - searchCriteria
'!  @Return Pass/Fail.
'!	@Author	ravi.kumar@amadeus.com
'!	@Date  Created: 02JUL18 | Last Updated:
function Common_ValidateTableValues(byval s_window,byval s_tableStr,byval s_search,byval s_Validate)
	Dim s_TempValue,a_GetPar,s_Selected_row,a_GetParVal,s_ColValue,s_ColName,l_getParamater,a_WindowSep,s_WindowPath,s_ValueAfterHTMLRemoved
    
    'Get the desired row no based on the input passed.
	s_Selected_row= Common_GetRowNo(s_window,s_tableStr,s_search)
	
	'Below is a check if we got any row no as part of "Common_GetRowNo" if yes then continue else stop
	If s_Selected_row >=0 Then
	    'Get the Dialog name if we have any
		If Instr(s_window,":")>0 Then
			a_WindowSep=Split(s_window,":")
			s_WindowPath="Javawindow(" &CHR(34)& a_WindowSep(0)&CHR(34) & ").JavaDialog("& CHR(34)&a_WindowSep(1)&CHR(34)&")"
		Else 
			s_WindowPath="Javawindow("& CHR(34)&s_window&CHR(34)&")"
		End if
		'Below loop get the desired column value in the variable passed.
		a_GetPar=Split(s_Validate,";")
		for l_getParamater=0 to ubound(a_GetPar)
			a_GetParVal=Split(a_GetPar(l_getParamater),"|")
			DisableRecoveryScenario
			On error resume next
			Err.clear
			If Instr(ucase(a_GetParVal(0)),"COL(")>0 Then
				s_ColName=Common_RowColVal(a_GetParVal(0))
				s_tempColIDX = s_ColName
				execute "s_ColName = " & s_WindowPath & ".JavaTable(" & CHR(34) & s_tableStr & CHR(34) & ").GetColumnName ("&s_ColName &")"

				
				If (err.number <> 0) or instr(s_ColName,"\n") Then
'					Common_CaptureScreenshot "COL "&s_ColName&" is not present in the table "&s_tableStr,0
'					ExitTest
					s_ColName = s_tempColIDX
				End If

			Else  
				s_ColName=a_GetParVal(0)	
			End If

			s_ColValue=a_GetParVal(1)
			err.clear
			execute "s_TempValue = " & s_WindowPath & ".JavaTable(" & CHR(34) & s_tableStr & CHR(34) & ").GetCellData ("& CHR(34) &	s_Selected_row & CHR(34) &","& CHR(34) & s_ColName & CHR(34) & ")"
			If err.number <> 0 Then
				Common_CaptureScreenshot "COL "&s_ColName&" is not present in the table "&s_tableStr,0
				EnableRecoveryScenario
				On error goto 0
				Exit function
			End If
			
			s_ValueAfterHTMLRemoved=Common_GetValuefromString(s_TempValue,s_ColName)
			
			
			If ucase(s_ColValue) = "~CHECKIFBLANK~" Then
				
				if s_ValueAfterHTMLRemoved = "" then
					Reporter.ReportEvent micPass, "Common_ValidateTableValues", "Blank check Success for the col:["&s_ColName& table &"] in the table["&s_tableStr&"]"
				Else
	               		Reporter.ReportEvent micFail, "Common_ValidateTableValues","Blank check failed for the col:["&s_ColName& table &"] in the table"&s_tableStr&"] Got this value instead: [" 	&s_ValueAfterHTMLRemoved&"]"	
				End if
					
			elseif Common_SimpleCompare(s_ColValue,"IN",s_ValueAfterHTMLRemoved &"~Validation done in Table "& s_tableStr&"~")=true then
				Reporter.ReportEvent micPass, "Common_ValidateTableValues", "The Searched Value["& s_ColValue &"] is present in cell value ["& s_ValueAfterHTMLRemoved &"] of table "&s_tableStr
			Else
              		 Reporter.ReportEvent micFail, "Common_ValidateTableValues", "The Searched Value["& s_ColValue &"] is not present in cell value ["& s_ValueAfterHTMLRemoved &"] of table "&s_tableStr			
			End if
			'***already defined	**rupa
			EnableRecoveryScenario
			On error goto 0
		next
		
	Else
	  Reporter.ReportEvent micfail, "Common_GetTableValue", "No Row fetched based on the input passed"
	End If
	EnableRecoveryScenario
	On error goto 0
End Function

'
'call fCommand_FormatDateTime("12NOV2017 12:11",dateout)
'call fCommand_FormatDateTime("12-NOV-2017 12:11",dateout)
'call fCommand_FormatDateTime("12-12-2017 12:11",dateout)
'call fCommand_FormatDateTime("2-DECember-2017 12:11",dateout)
'call fCommand_FormatDateTime("2-DECember-2017 12:11:11",dateout)
'call fCommand_FormatDateTime("2-DECember-17 12:11AM",dateout)
'call fCommand_FormatDateTime("2/12/17",dateout)
'call fCommand_FormatDateTime("2-12-17",dateout)
''
'
'Function fCommand_FormatDateTime(byval sDateIn, byval dDateOut)
'              sDateTimeDataIn = ucase(sDateIn)
'              Dim sMonthsTypeOne
'              Dim sMonthsTypeTwo
'              Dim aMonthsTypeOne
'              Dim aMonthsTypeTwo
'              
'
'              sMonthsTypeOne = "JANUARY,FEBRUARY,MARCH,APRIL,MAY,JUNE,JULY,AUGUST,SEPTEMBER,OCTOBER,NOVEMBER,DECEMBER"
'              sMonthsTypeTwo = "JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC"
'              aMonthsTypeOne = split(sMonthsTypeOne,",")
'              aMonthsTypeTwo = split(sMonthsTypeTwo,",")
'              
'              
'              For monthnumber = 0 To 11 Step 1
'                             If instr(1, sDateTimeDataIn, aMonthsTypeOne(monthnumber))>0 Then
'                                           sDateTimeDataIn = replace(sDateTimeDataIn,aMonthsTypeOne(monthnumber), "~" & (monthnumber + 1) & "~" )
'                                           Exit for
'                             ElseIf instr(1, sDateTimeDataIn, aMonthsTypeTwo(monthnumber))>0 Then
'                                           sDateTimeDataIn = replace(sDateTimeDataIn,aMonthsTypeTwo(monthnumber), "~" & (monthnumber + 1) & "~")
'                                           Exit for
'                             End if
'              Next
'              sDateTimeDataIn = Replace(sDateTimeDataIn,"/~", "/")
'              sDateTimeDataIn = Replace(sDateTimeDataIn,"~/", "/")
'              sDateTimeDataIn = Replace(sDateTimeDataIn,"-~", "/")
'              sDateTimeDataIn = Replace(sDateTimeDataIn,"~-", "/")
'              sDateTimeDataIn = Replace(sDateTimeDataIn,"~", "/")
'              sDateTimeDataIn = cdate(sDateTimeDataIn)
'              'msgbox sDateTimeDataIn
'              
'End function
''
'
'
'

'----------------------------------------------------------------------------------------------------------------------------------------------------
'!	This function accepts Html string as an input and return the striped HTML value
'!	
'!	Example Usage  : Common_StripeHTML(s_strText)
'!  @Param s_strText - HTML string
'!  @Return String without HTML tags/value.
'!	@Author	ravi.kumar@amadeus.com
'!	@Date  Created: 08Mar18 | Last Updated:
Function Common_StripeHTML(s_strText)
	Dim RegEx
	Set RegEx = New RegExp
	RegEx.Pattern = "(&raquo;)|(&nbsp;)|(<[^>]*>)"
	RegEx.Global = True
	Common_StripeHTML = RegEx.Replace(s_strText, "")
End Function


'----------------------------------------------------------------------------------------------------------------------------------------------------
'! 		~ This function will return the value of the required column in table based on the search row criteria
'!
'!			  e.g  Common_GetTableValue("wndCM","tblCustomerList","Customer|RACE Simon Mr;From|LHR;Seat|13B","Cabin|CabinVal;To|DestPort")
'!
'!			  e.g: Common_GetTableValue("wndCM","tblCustomerList","Row(42)","Seat|SeatVal;To|DestPort")
'!
'!			  e.g: Common_GetTableValue("wndCM","tblCustomerList","Row(2)","Col(1)|SeatVal;Col(2)|DestPort")
'!
'!			  e.g  Common_GetTableValue("wndCM:dlgservice","tblCustomerList","Row(120)",COL(2)|Sv01_CabinVal;Seat|Sv01_SeatVal")
'!
'!			  e.g  Common_GetTableValue("wndCM","tblCustomerList",COL(2)|LHR;Seat|16D",COL(2)|Sv01_CabinVal;Seat|Sv01_SeatVal"))
'!
'!  @Param s_window - windowName,s_search - tableName,s_Get - searchCriteria
'!  @Return Matched column(s) value as environment variable send by user.
'!	@Author	ravi.kumar@amadeus.com
'!	@Date  Created: 08Mar18 | Last Updated:
function Common_GetTableValue(byval s_window,byval s_tableStr,byval s_search,byval s_Get)
	Dim s_TempValue,a_GetPar,s_Selected_row,a_GetParVal,s_ColVar,s_ColName,l_getParamater,a_WindowSep,s_WindowPath
    
    'Get the desired row no based on the input passed.
	s_Selected_row= Common_GetRowNo(s_window,s_tableStr,s_search)
	
	'Below is a check if we got any row no as part of "Common_GetRowNo" if yes then continue else stop
	If s_Selected_row >=0 Then
	    'Get the Dialog name if we have any
		If Instr(s_window,":")>0 Then
			a_WindowSep=Split(s_window,":")
			s_WindowPath="Javawindow(" &CHR(34)& a_WindowSep(0)&CHR(34) & ").JavaDialog("& CHR(34)&a_WindowSep(1)&CHR(34)&")"
		Else 
			s_WindowPath="Javawindow("& CHR(34)&s_window&CHR(34)&")"
		End if
		'Below loop get the desired column value in the variable passed.
		a_GetPar=Split(s_Get,";")
		for l_getParamater=0 to ubound(a_GetPar)
			a_GetParVal=Split(a_GetPar(l_getParamater),"|")
			DisableRecoveryScenario
			On error resume next
			Err.clear
			If Instr(ucase(a_GetParVal(0)),"COL(")>0 Then
				s_ColName=Common_RowColVal(a_GetParVal(0))
				execute "s_ColName = " & s_WindowPath & ".JavaTable(" & CHR(34) & s_tableStr & CHR(34) & ").GetColumnName ("&s_ColName &")"
				If err.number <> 0 Then
					Common_CaptureScreenshot "COL "&s_ColName&" is not present in the table "&s_tableStr,0

					EnableRecoveryScenario
					On error goto 0
					Exit function
				End If

			Else  
				s_ColName=a_GetParVal(0)	
			End If
			
			s_ColVar=a_GetParVal(1)
			''defining on error resume next **Rupa
			On error resume next
			Err.clear
			execute "s_TempValue = " & s_WindowPath & ".JavaTable(" & CHR(34) & s_tableStr & CHR(34) & ").GetCellData ("& CHR(34) &	s_Selected_row & CHR(34) &","& CHR(34) & s_ColName & CHR(34) & ")"
			If err.number <> 0 Then
				Common_CaptureScreenshot "COL "&s_ColName&" is not present in the table "&s_tableStr,0

				EnableRecoveryScenario
				On error goto 0
				Exit function
			End If
			''defining on error resume next ** rupa
			DisableRecoveryScenario
			On error resume next
			Err.clear
			environment.Value(s_ColVar)=Common_GetValuefromString(s_TempValue,s_ColName)
			EnableRecoveryScenario
			On error goto 0
		next
		
	Else
	  Reporter.ReportEvent micfail, "Common_GetTableValue", "No value fetched based on the input passed"
	End If
	EnableRecoveryScenario
	On error goto 0
End Function

''----------------------------------------------------------------------------------------------------------------------------------------------------
'! 	Function takes retrieved value of any column and It's column name.Then Process it and return the value as is visible to user in Column.
'!
'!	@Example Common_GetValuefromString(s_targetString,s_ColNameVal)
'!
'!  @Param s_window - s_targetString,s_ColNameVal
'!  @Return Extracted value from the sentence/string passed.
'!	@Author	ravi.kumar@amadeus.com
'!	@Date  Created: 08Mar18 | Last Updated:
function Common_GetValuefromString(byVal s_targetString,byVal s_ColNameVal)
	Dim re, targetString, colMatch, objMatch,ColVal
	'Checks if the input passed is of XML format
	If instr(s_targetString,"</")>0 Then
	    'This stript the HTNL and returns onlt the content of XML
		Common_GetValuefromString=Common_StripeHTML(s_targetString)
	Else
		Set re = New RegExp
		ColVal=s_ColNameVal&"="
		With re
		  .Pattern = ColVal&"([a-zA-Z0-9_ ]*)\b" 
		  .Global = False
		  .IgnoreCase = True
		End With 
		If re.Test(s_targetString) Then
			Set colMatch= re.Execute(s_targetString)
			
			For each objMatch  in colMatch
	            Common_GetValuefromString=objMatch.SubMatches(0)
			Next 
		Else  
	        Common_GetValuefromString= s_targetString
		End if
	End If	
End Function

'----------------------------------------------------------------------------------------------------------------------------------------------------
'	# Public Function Common_RowColVal(byval s_RowCol)
'			
' 		~ This function takes input as Row()/Col() and returns only the value inside bracket
'		~ Usage  :Syntax:  Common_RowColVal(s_RowCol)
'		          E.g       Common_RowColVal "Row(230)" / Common_RowColVal "Col(23)"

' 		~ Input  :  Column no or Row no passed as Row()/Col()
'		~ Output : Extracted Integer value of Row/Col.
'
'	@author		:   Ravi Kumar
'	@copyright	:  	2018 Amadeus Services Limited. All rights reserved.
'	@Author	:   ravi.kumar@amadeus.com
'	@Date  Created: 15Mar18 | Last Updated:
'----------------------------------------------------------------------------------------------------------------------------------------------------
Function Common_RowColVal(byval s_RowCol)
	Dim a_Split1,a_Split2
	a_Split1=Split(s_RowCol,"(")
	a_Split2=Split(a_Split1(1),")")
	Common_RowColVal=a_Split2(0)
End Function


'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'! Function to Set the value in the cell(s) of a table after the search as per search criteria
'!
'!	Example Usage: Common_SetTableValue(windowName,tableName,searchCriteria,GetCriteria)
'!
'!			  e.g  Common_SetTableValue("wndCM","tblItinerary","Row(0)","Flight|7x+2221;Col(1)|Y;Col(2)|10JAN;Col(3)|LHR;Col(4)|DEL")
'!
'!			  e.g: Common_SetTableValue("wndCM","tblCustomerListFilter","Row(0)","Col(0)|And;Col(1)|Include;Filter|Regrade (RG);Value|Upgraded (U)")
'!
'!			  e.g  Common_SetTableValue("wndCM:dlgservice"","tblCustomerList",COL(2)|LHR;Seat|16D",COL(2)|Sv01_CabinVal;Seat|Sv01_SeatVal")
'!
'! 	@Param  windowName,tableName,searchCriteria,SetCriteria and value to be set
'!	@Return Pass or Fail
'!	@Author ravi.kumar@amadeus.com
'! 	@See 
'!	@Date Created: 19Mar18 | Last Updated: 
Function Common_SetTableValue(byval s_window,byval s_tableStr,byval s_search,byval s_set)
	Dim a_GetPar,s_Selected_row,a_GetParVal,s_ColVar,s_ColName,l_getParamater,s_WindowPath,a_WindowSep,childObject,o_tabledict,o_sortkey,Iterator_Dict,Iterator,i_Counter,s_CellValueToEnter
	Set o_tabledict=Nothing
	Set o_sortkey=Nothing
	'Get the row to be worked upon based on input provided.
	s_Selected_row= Common_GetRowNo(s_window,s_tableStr,s_search)
	
	If s_Selected_row >=0 Then
	    'Case to check if we need to work on window dialog or the main window.
		If Instr(s_window,":")>0 Then
			a_WindowSep=Split(s_window,":")
			If instr(ucase(a_WindowSep(1)),"~FRAME~")>0 Then
				s_WindowPath="Javawindow(" &CHR(34)& a_WindowSep(0)&CHR(34) & ").JavaInternalFrame("& CHR(34)&replace(ucase(a_WindowSep(1)),"~FRAME~","")&CHR(34)&")"
			Else
				s_WindowPath="Javawindow(" &CHR(34)& a_WindowSep(0)&CHR(34) & ").JavaDialog("& CHR(34)&a_WindowSep(1)&CHR(34)&")"
			End If
		Else 
			s_WindowPath="Javawindow("& CHR(34)& s_window&CHR(34) &")"
		End if
		
		a_GetPar=Split(s_set,";")
		
		for l_getParamater=0 to ubound(a_GetPar)
		
			a_GetParVal=Split(a_GetPar(l_getParamater),"|")
			If Instr(ucase(a_GetParVal(0)),"COL(")>0 Then
			   s_ColName=Common_RowColVal(a_GetParVal(0))
			Else  
				s_ColName=a_GetParVal(0)	
			End If
			
			s_ColVar=a_GetParVal(1)
			
			i_Counter=0 'This is a flag
			DisableRecoveryScenario
			On error resume next
			Err.clear
			'Below handles the case when user has passed the set value seperated by "+" e.g.  7X+2221
			If Instr(s_ColVar,"+")>0 Then
				
				'execute s_WindowPath & ".JavaTable(" & CHR(34) & s_tableStr & CHR(34) & ").ClickCell " & CHR(34) & s_Selected_row & CHR(34) & ","& CHR(34) & s_ColName & CHR(34) & ","& CHR(34) & "RIGHT" & CHR(34)
				
				If lcase(s_tableStr) <> "tbladdresses" Then
					execute s_WindowPath & ".JavaTable(" & CHR(34) & s_tableStr & CHR(34) & ").ClickCell " & CHR(34) & s_Selected_row & CHR(34) & ","& CHR(34) & "1" & CHR(34) 
				end if
				err.clear
				execute s_WindowPath & ".JavaTable(" & CHR(34) & s_tableStr & CHR(34) & ").ClickCell " & CHR(34) & s_Selected_row & CHR(34) & ","& CHR(34) & s_ColName & CHR(34) 
				'test = JavaWindow("wndCM").JavaTable("tblItineraryTableComponent").set (s_Selected_row,0,"")
				'JavaWindow("Customer Management -").JavaTable("ATable$InnerTable").SelectCell s_Selected_row,"Flight"
				If err.number <> 0 Then
					Common_CaptureScreenshot "Column= "&s_ColName&" is not present in the table "&s_tableStr,0
					EnableRecoveryScenario
					On error goto 0
					Exit function
				End If
				
				If JavaWindow("title:=.*Customer Management.*").JavaDialog("tagname:=CodeSetSelectionAssistedDialog").JavaButton("label:=Cancel").Exist(1) Then
					JavaWindow("title:=.*Customer Management.*").JavaDialog("tagname:=CodeSetSelectionAssistedDialog").JavaButton("label:=Cancel").Click 
				End If

			
				
				execute "Set childObject = " & s_WindowPath & ".JavaTable(" & CHR(34) & s_tableStr & CHR(34) & ").ChildObjects()"
	
				

				Set o_tabledict = createobject("scripting.dictionary")
				Set o_sortkey = CreateObject("System.Collections.ArrayList")
				
				For Iterator_Dict=0 to childObject.count-1
	
					if ucase(childObject(Iterator_Dict).getroproperty("to_class")) = "JAVAEDIT" Then
						'childObject(Iterator_Dict).highlight
						o_tabledict.add cint((childObject(Iterator_Dict).getroproperty("abs_x"))),childObject(Iterator_Dict)
						o_sortkey.add cint((childObject(Iterator_Dict).getroproperty("abs_x")))
					End if
				Next

				o_sortkey.Sort
				
				s_CellValueToEnter=Split(s_ColVar,"+")
				For Iterator = 0 To o_sortkey.count - 1 Step 1
					o_tabledict(o_sortkey(Iterator)).set s_CellValueToEnter(Iterator)
				Next
				Set o_tabledict=Nothing
				Set o_sortkey=Nothing
			Else
			''defined on error resume next **rupa
             DisableRecoveryScenario
			On error resume next
			Err.clear
				execute s_WindowPath & ".JavaTable(" & CHR(34) & s_tableStr & CHR(34) & ").ClickCell " & CHR(34) & s_Selected_row & CHR(34) & ","& CHR(34) & s_ColName & CHR(34)
				If err.number <> 0 Then
					Common_CaptureScreenshot "Column= "&s_ColName&" is not present in the table "&s_tableStr,0

					EnableRecoveryScenario
					On error goto 0
					Exit function
				End If
				
				''defined on error resume next **rupa
             DisableRecoveryScenario
			On error resume next
			Err.clear
				execute "Set childObject = " & s_WindowPath & ".JavaTable(" & CHR(34) & s_tableStr & CHR(34) & ").ChildObjects"


				Set o_tabledict = createobject("scripting.dictionary")
				Set o_sortkey = CreateObject("System.Collections.ArrayList")
				'Below loop is to check if the target cell is an Javalist.
				For Iterator_Dict=0 to childObject.count-1
					if ucase(childObject(Iterator_Dict).getroproperty("to_class")) = "JAVALIST" Then
					    i_Counter=1
						o_tabledict.add (childObject(Iterator_Dict).getroproperty("abs_x")),childObject(Iterator_Dict)
						o_sortkey.add (childObject(Iterator_Dict).getroproperty("abs_x"))
					End if
				Next
				'If the cell of the table is javalist then it set the value by selecting from the list else directly set the value in cell.
				If i_Counter=1 Then
					o_sortkey.Sort
					o_tabledict(o_sortkey(0)).Select s_ColVar
					If err.number <> 0 Then
						Common_CaptureScreenshot "Value= "&s_ColVar&" is not present in the List of table"&s_tableStr,0

						EnableRecoveryScenario
						On error goto 0
						Exit function
					End If
				Else

					execute s_WindowPath & ".JavaTable(" & CHR(34) & s_tableStr & CHR(34) & ").ClickCell " & CHR(34) & s_Selected_row & CHR(34) & ","& CHR(34) & s_ColName & CHR(34)
					If err.number <> 0 Then
						Common_CaptureScreenshot "COL "&s_ColName&" is not present in the table "&s_tableStr,0

						EnableRecoveryScenario
						On error goto 0
						Exit function
					End If
					execute s_WindowPath & ".JavaTable(" & CHR(34) & s_tableStr & CHR(34) & ").SetCellData " & CHR(34) & s_Selected_row & CHR(34) & ","& CHR(34) & s_ColName & CHR(34) & ","& CHR(34) & s_ColVar & CHR(34)

				End If	
				Set o_tabledict=Nothing
				Set o_sortkey=Nothing				
								
			End if
		Next
		''already defined  error goto 0 **rupa
		EnableRecoveryScenario
		On error goto 0
		Reporter.ReportEvent micPass, "Common_SetTableValue", "All Value(s) passed are set in table "&s_tableStr
	Else
	  Reporter.ReportEvent micfail, "Common_SetTableValue", "No value fetched based on the input passed"
	End If
 	On error goto 0
	EnableRecoveryScenario
End Function

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!  Function To run the departure plan Actvities and wait till they are either complete or Failed. 
'!
'!	@Example	 : Common_CM_DPMActivity "1,2,3,n",True  -> Here true indicated ForceComplete and 1,2,3 indicates activities
'!	@Example	 : Common_CM_DPMActivity "Trigger Get Mass Airport Control,Open Acceptance",False  -> Here true indicated ForceComplete and 1,2,3 indicates activities
'!
'!					Number 1 -> To Run "Trigger Get Mass Airport Control"
'!
'!				    Number 2 -> To Run "Trigger Customer Product Record Feed CPR"
'!
'!				    Number 3 -> To Run  Number ="Open Acceptance"
'!
'!				    Number 4 -> To Run "Clean up guaranteed seats CGS"
'!
'!				    Number 5 -> To Run "Send Seats Occupied Message SOM"
'!
'!				    Number 6 -> To Run "Create Airline Warehouse Feed"
'!
'!				    Number 7 -> To Run "Generates Teletype BTM"
'!
'!				    Number 8 -> To Run "Send Teletype Passenger Manifest TPM"
'!
'!				    Number 9 -> To Run "Trigger Open Baggage"
'!
'!				    Number 10 -> To Run "Generic Print Request"
'!
'!				    Number 11 -> To Run "Send APIS Arrival"
'!
'!				    Number 12 -> To Run "Send APIS Overfly"
'!
'!				    Number 13 -> To Run "Send APIS Departure"
'!
'!				    Number 14 -> To Run "Archive Departure Plan"
'!
'!				    Number 15 -> To Run "Send Batch Regulatory Message Departure"
'!
'!				    Number 16 -> To Run "Send Batch Regulatory Message Arrival"
'!
'!				    Number 17 -> To Run "Trigger BPPR Synchronization"   
'!
'!				    Number 18 -> To Run "Send Close-out Regulatory Message"  
'!
'!				    Number 19 -> To Run "Send Batch AQQ PAXLST Message"	
'!				    Number 20 -> To Run "Return Final E-Ticket Coupon Status"	
'!				    Number 21 -> To Run "Print Matched E-Ticket"	
'!				    Number 22 -> To Run "Remove Chargeable Seat Restriction"	

'!  @Param  : FlightActivityName= "1,3,4" . The numeric digits represnts the Fligt activity name. OptForceComplete - True if Force run and False for skipping DPM activity run which are already completed
'!	@Author ravi.kumar@amadeus.com
'!	@Date 	Created: 02Feb2018 | Last Updated: 21Mar2018
Function Common_CM_DPMActivity(ByVal FlightActivityName,ByVal OptForceComplete)
	Dim s_UpdateActivityList,s_var,lenarray,i,s_IsPresent,s_ListName,i_Rows,j,s_ListNameVal,r,s_StatusVal
	
	If (environment.Value("e_LoginAirLine") = "AY") and ucase(environment.Value("TestEnv_Connection")) = "DEV"  Then
		reporter.ReportEvent micWarning, "DPM", "DPM Run is disabled for AY as we don't have permission to run them"
		Exit function
	End If
	
		If Common_CMScreenCheck("Flight Information") then
			'//Navigate to Flight Activity List Screen
			JavaWindow("wndCM").JavaCheckBox("chkFlight").Set "ON"
			JavaWindow("wndCM").JavaMenu("mnuDeparturePlan").Select
			CM_DynamicSync
'			'TO DO: Disable below condition
'			if JavaWindow("wndCM").JavaDialog("wndWarning").JavaStaticText("stsMessageOne").Exist(2) then
'				Common_Report "THIS STEP IS FAILING DUE TO THE PTR21601842|DPM CHECK|DONE"
'				JavaWindow("wndCM").JavaDialog("wndWarning").JavaButton("btnOK").Click
'				Exit function
'			End if

		'' once Flight leg not issue this can be resolved
		'TO DO: Disable below condition
			if JavaWindow("wndCM").JavaDialog("wndWarning").JavaStaticText("stsMessageOne").Exist(2) then
				If instr(1,JavaWindow("wndCM").JavaDialog("wndWarning").JavaStaticText("stsMessageOne").GetROProperty("text"),"Flight Leg Not Found")>0 Then
					JavaWindow("wndCM").JavaDialog("wndWarning").JavaButton("btnOK").Click
					Common_Report "Flight Leg Not Found|DPM CHECK|DONE"
					Inv_LoginAndTriggerFlight
					JavaWindow("wndCM").JavaCheckBox("chkFlight").Set "ON"
					JavaWindow("wndCM").JavaMenu("mnuDeparturePlan").Select
				Else
				   JavaWindow("wndCM").JavaDialog("wndWarning").JavaButton("btnOK").Click
				   Common_Report "THIS STEP IS FAILING DUE TO THE PTR21601842|DPM CHECK|DONE"
				End If    
			End if
			
			Common_CMScreenCheck "Flight Activity List"
			s_UpdateActivityList=FlightActivityName
		
			s_var=split(s_UpdateActivityList,",")
			lenarray=ubound(s_var)
			
			'// this verify if the activity is there in the table or not, if no add the activity.
			For i=0 to lenarray
			   	s_IsPresent=0
				If IsNumeric(s_var(i))=true Then
				   s_ListName=Common_GetActivityName(s_var(i))
				Else
				   s_ListName=s_var(i)
				End If
				
				On error resume next
				Err.clear
				Reporter.Filter = rfEnableErrorsAndWarnings
				CM_DynamicSync
				i_Rows=JavaWindow("wndCM").JavaTable("tblFlightActivityList").GetRoProperty("rows")
				Reporter.Filter = rfEnableAll
				If err.number <> 0 Then
					Common_CaptureScreenshot "Table tblFlightActivityList is not present or properties might have changed",0
					EnableRecoveryScenario
					On error goto 0
					Exit function
				End If
'already defined **rupa
				EnableRecoveryScenario
				On error goto 0
				For j = 0 To i_Rows-1
					DisableRecoveryScenario
					On error resume next
					Err.clear
					Reporter.Filter = rfEnableErrorsAndWarnings
					s_ListNameVal=JavaWindow("wndCM").JavaTable("tblFlightActivityList").GetCellData (j,"Activity Name")
					Reporter.Filter = rfEnableAll
					If err.number <> 0 Then
						Common_CaptureScreenshot "Column Activity Name is not present in table tblFlightActivityList",0
						EnableRecoveryScenario
						On error goto 0
						Exit function
					End If
''already defined **rupa
					EnableRecoveryScenario
					On error goto 0
					If ucase(s_ListNameVal)=ucase(s_ListName) Then
					   s_IsPresent=1
					   Exit For
					End If
					CM_DynamicSync
				Next
					
				'//If the activity is not in list then add the activity
					
				If s_IsPresent<>1 Then
				CM_DynamicSync
				   JavaWindow("wndCM").JavaButton("btnAddActivity").Click
				   Common_CMScreenCheck "Add Activity"
				   CM_DynamicSync
				   wait 2
				   JavaWindow("wndCM").JavaList("lstActivityName").Select s_ListName
				   JavaWindow("wndCM").JavaEdit("txtActivityStarts").Set "999"
				   JavaWindow("wndCM").JavaList("lstTimeRelative").Select "before"
				   JavaWindow("wndCM").JavaList("lstDepartureTime").Select "STD"
				   
				   JavaWindow("wndCM").JavaButton("btnAdd").Click
				End If
	
				
				For r = 0 To i_Rows-1
					Reporter.Filter = rfEnableErrorsAndWarnings
					wait 1
					CM_DynamicSync
					s_ListNameVal=JavaWindow("wndCM").JavaTable("tblFlightActivityList").GetCellData (r,"Activity Name")
					Reporter.Filter = rfEnableAll
					'If Not (strcomp (l_strValue1,l_strValue2,1)) Then
					If s_ListNameVal=s_ListName Then
						Reporter.Filter = rfEnableErrorsAndWarnings
					  	s_StatusVal=JavaWindow("wndCM").JavaTable("tblFlightActivityList").GetCellData (r,"Status")  
					  	Reporter.Filter = rfEnableAll
					   	If s_StatusVal<>"Completed" or OptForceComplete=true Then
					   		JavaWindow("wndCM").JavaButton("btnUpdateActivity").Click
							Common_CMScreenCheck "Update Activity"
							JavaWindow("wndCM").JavaTable("tblFlightActivityList").SelectRow r
							JavaWindow("wndCM").JavaEdit("txtActivityStarts").Set 999				
							JavaWindow("wndCM").JavaList("lstTimeRelative").Select "before"
							JavaWindow("wndCM").JavaList("lstDepartureTime").Select "STD"
							JavaWindow("wndCM").JavaList("lstActivityStatus").Select "Re-scheduled"
							JavaWindow("wndCM").JavaButton("btnUpdate").Click
							wait 2
							If JavaWindow("wndCM").JavaButton("btnExit").Exist(3) Then
								JavaWindow("wndCM").JavaButton("btnExit").Click
							End If

						End If
						r=i_Rows-1						
					End If
				Next
		        
		
			Next
			'Initialization
			i=0
			j=0
			s_ListName=""
			For i=0 to lenarray
				s_StatusVal="Not Completed"
				If IsNumeric(s_var(i))=true Then
				   s_ListName=Common_GetActivityName(s_var(i))
				Else
				   s_ListName=s_var(i)
				End If
				Reporter.Filter = rfEnableErrorsAndWarnings
				CM_DynamicSync
				i_Rows=JavaWindow("wndCM").JavaTable("tblFlightActivityList").GetRoProperty("rows")
				Reporter.Filter = rfEnableAll
				For j = 0 To i_Rows-1
					wait 1
					Reporter.Filter = rfEnableErrorsAndWarnings
					JavaWindow("wndCM").JavaTable("tblFlightActivityList").SelectRow j
					s_ListNameVal=JavaWindow("wndCM").JavaTable("tblFlightActivityList").GetCellData (j,"Activity Name")
					Reporter.Filter = rfEnableAll
					If s_ListNameVal=s_ListName Then
						Reporter.Filter = rfEnableErrorsAndWarnings
						s_StatusVal=JavaWindow("wndCM").JavaTable("tblFlightActivityList").GetCellData (j,"Status")
						Reporter.Filter = rfEnableAll
						If s_StatusVal="Completed" then
							Common_CaptureScreenshot s_ListName&" Completed",1
							j=i_Rows-1
						Else
							
							t_Initialtime = now

							Do

								wait 2
'								Common_Refresh_CM_Screen
'									**** NEW APPROACH (BEGIN)**** added by jayadev
									JavaWindow("wndCM").JavaButton("btnDone").Click
									wait 2
									If JavaWindow("wndCM").JavaButton("btnDone").Exist(1) Then
										JavaWindow("wndCM").JavaButton("btnDone").Click
									End If
									Common_CMScreenCheck "Flight Information"
									JavaWindow("wndCM").JavaCheckBox("chkFlight").Set "ON"
									JavaWindow("wndCM").JavaMenu("mnuDeparturePlan").Select
									Common_CMScreenCheck "Flight Activity List"
'									**** NEW APPROACH (END) ****
								CM_DynamicSync
								Reporter.Filter = rfEnableErrorsAndWarnings
								call Common_GetTableValue("wndCM","tblFlightActivityList","Activity Name|"&s_ListName,"Status|StatusVal")
								Reporter.Filter = rfEnableAll
								s_StatusVal=environment.Value("StatusVal")
								t_FinalTime = now
								t_diff = datediff("n",t_Initialtime, t_FinalTime)
							Loop While ((s_StatusVal<>"Completed") and (s_StatusVal<>"Failed")) and (t_diff < 10)
							
							If s_StatusVal="Completed" Then
								Common_CaptureScreenshot s_ListName&" Completed",1
								j=i_Rows-1
							Else
								If s_StatusVal<>"Failed" Then
									Common_CaptureScreenshot s_ListName&" Still In progress even after 10 min",0
								Else
								   	Common_CaptureScreenshot s_ListName&" Failed",2
								   	j=i_Rows-1
							   End If
							End If
												
						End If
					End If
										
				Next
								
			Next
'		    JavaWindow("wndCM").JavaButton("btnDone").Click

		    If JavaWindow("wndCM").JavaButton("btnDone").Exist(3) Then
		    	JavaWindow("wndCM").JavaButton("btnDone").Click
		    End If
		Else
		 	Common_CaptureScreenshot "Current screen should be [Flight Information] screen",0
		End if
		EnableRecoveryScenario
		On error goto 0
End Function



'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!  Function To Fetch the desired ALF log and compoares the values mentioned in TestLog_<xyz>.xls with the logs whicha are fetched
'!
'!	* DownLoads TestLog_<xyz>.xls (from testcase in lab/plan) and alflogsearch.bat (from Resources)
'!		~ Usage	 :
'!
'!					Mode1: Default
'!
'!						This mode is used when user donot want to specify any search criteria for searching the ALF log
'!
'!						Following Values will be used by default
'!
'!					PHASE=Environment("TestEnv_Connection") - comes from DefaultENV sheet
'!
'!					APPLICATION=CML"
'!
'!					PEAK=Environment("login_Peak")
'!
'!					TIMEFROM=now
'!
'!					INTERVAL=-10m
'!
'!					OUTPUT=ALFLog.xls"
'!
'!					Mode2: Search with specific search criteria
'!
'!						When user wants to explicitly mention the search criteria while searching this mode can be used
'!
'!						Following search parameters can be used
'!
'!						PHASE,APPLICATION,PEAK,TIMEFROM,INTERVAL,RECLOC,FLIGHT,PAXNAME
'!
'!					Mode3: Compare result with specific sheet of Excel (works for mode1 and mode2 aswell)
'!
'!						If ~Sheet1~ is present in input string, then log validations will be done against data in Sheet1
'!  @Param  : s_Input: <SearchParam1>:<Value1>|<SearchParam2>:<Value2>|<SearchParam2>:<Value2>
'!	@Author sanjeeth.nayak@amadeus.com
'!	@Date 	Created: 14Apr2018 | Last Updated: 14June2018
Public Function Common_ALFLogSearch(byVal s_Input)
	Common_KillGUIApp "EXCEL.EXE"
	s_InputStore = s_Input
	Environment("ALFLogSearchCount") = Environment("ALFLogSearchCount") + 1
	s_exe = "alflogsearch.exe"
	
	'Set Default Sheet name to ToVerify
	s_SheetName = "ToVerify"
	'Check if Special Params present eg., Common_ALFLogSearch "<SearchParam2>:<Value2>~SpecialParam~
	a_SearchParams = Common_FetchVars(s_Input)

	If a_SearchParams(1) <> "" Then
		s_SheetName = a_SearchParams(1)
		Reporter.ReportEvent micDone, "Sheet Name fetch","Using " & s_SheetName
	End If
	
	s_Input = a_SearchParams(0)
	
	'Clear the folder 
	Common_FolderCleanUp s_ALFFolderPath & "\" & s_exe
	
	
	
	'Create Log Search folder if not exists
	Common_FolderCreate s_ScreenshotFolderPath
	'Download Batch file and LogSearch.Xls
	Common_DownloadTestResource s_ALFlogsearchBatFile,s_ALFFolderPath
	
	Set o_FSO = CreateObject("Scripting.FileSystemObject") 
	
	On error Resume next
	err.clear	
	DisableRecoveryScenario
	
	'Automatic deploying the tool
	o_FSO.CopyFile "\\ncealmhost0095.rnd.amadeus.net\GATI-Installers\ALFLOGSEARCH" & "\" & s_exe ,s_ALFFolderPath & "\" & s_exe
	
	If err.number <> 0 Then
		Reporter.ReportEvent micFail, "Error While Transfering File",s_exe
	else
		Reporter.ReportEvent micPass, "File Successfully transfered to "& s_ALFFolderPath ,s_exe
	End If
	
	On error goto 0
	EnableRecoveryScenario
	
	Set o_SearchCrit = CreateObject("Scripting.Dictionary")
	
	s_PPASS = Common_GetCyberArkPasswordSOAP("T-DCS-QA","T-DCS-QA","svc-gati-alf")
	s_PACCOUNTDETAILS = "svc-gati-alf:" & s_PPASS
	
	'Store default keys and values in a dictionary array
	
	o_SearchCrit.Add "PHASE",ucase(Environment("TestEnv_Connection"))
	o_SearchCrit.Add "APPLICATION","CML"
	o_SearchCrit.Add "PEAK",Environment("login_Peak")
	o_SearchCrit.Add "TIMEFROM","now"
	o_SearchCrit.Add "INTERVAL",chr(34) &"-10m"& chr(34)
	o_SearchCrit.Add "OUTPUT","ALFLog.xls"
	o_SearchCrit.Add "PACCOUNTDETAILS",s_PACCOUNTDETAILS
	
	
	
   'Change the default values to the userdefined values for the log search
	If (ucase(s_Input) = "DEFAULT") or (ucase(s_Input) = "") or (instr(ucase(s_Input),"DEFAULT") > 0) Then 
		Common_Report "Hurray! Default Search!"
	Else		
		Common_Report "Not a Default Search! Trying to replace parameters as per Search criteria in the Batch file"
		
		a_Mode = split(s_Input,"|")
		
		For i_ModeIterator = 0 To ubound(a_Mode) Step 1
			a_VarDefine = Split(a_Mode(i_ModeIterator), ":")
			If ubound(a_VarDefine) = 1 Then
				'Dynamically create vars needed for forming the log search criteria
				
'				Get the error handler
				DisableRecoveryScenario
				On error resume next
				err.clear
				
'				If a_Mode(i_ModeIterator) = "MESSAGE:PAXLST" or a_Mode(i_ModeIterator) = "MESSAGE:CUSRES" Then
'					s_exe = "regalflogsearch.exe"
'				End If
'				
				If instr(ucase(a_Mode(i_ModeIterator)), "MESSAGE")>0 Then
					s_MessageName = replace(a_Mode(i_ModeIterator), "MESSAGE:","")
				End If
				
				'Modify the dictionary value for the key passed by the user
				execute "o_SearchCrit(" & chr(34) & a_VarDefine(0) & chr(34) & ") = " & chr(34) & a_VarDefine(1) & chr(34) 
				
				'If critiria is other than default then, add to the dictionary
				If err.number > 0 Then
					execute "o_SearchCrit.add " & chr(34) & a_VarDefine(0) & chr(34) & "," & chr(34) & a_VarDefine(0) & chr(34)
				End If
				
'				Give back error handling to UFT
				EnableRecoveryScenario
				On error goto 0
				
			else
				Reporter.ReportEvent micFail, "ALFLogSearch", "Please check input!"
			End If
		Next

	End If
	
	
	
	'Read Batch file for replacing dictionary object values and performing search
	Set o_FSO = createobject("Scripting.FileSystemObject")
	Set o_BatchFile = o_FSO.OpenTextFile(s_ALFFolderPath & "\" & s_ALFlogsearchBatFile)
	s_FileContent = o_BatchFile.ReadAll	
	Set o_BatchFile = Nothing
	
	'Get Keys and values
	a_SearchCritKey = o_SearchCrit.Keys
	a_SearchCritVal = o_SearchCrit.Items
	
	'Replace the actual search values
	for i_Replaceidx = 1 to o_SearchCrit.Count step 1
		
		s_FileContent = replace(s_FileContent, "%" & a_SearchCritKey(i_Replaceidx-1) & "%", a_SearchCritVal(i_Replaceidx-1))
			
	Next
	
	
	
	Set o_FileContentRegEx = New RegExp
	
	' Below regex used to remove unused parameters from batch file
	With o_FileContentRegEx
	
      	.Pattern    = "(\[-. \%[\S]*\%\] |\[|])" 
      	.IgnoreCase = True
      	.Global     = true

	End With	
	
	Set o_BatchFile = o_FSO.OpenTextFile(s_ALFFolderPath & "\" & s_ALFlogsearchBatFile,2)
	s_FileContent = o_FileContentRegEx.replace(s_FileContent,"")
	s_FileContent = replace(s_FileContent,"%EXT%", s_exe)
	
	o_BatchFile.Write s_FileContent
	o_BatchFile.Close
	set o_BatchFile = nothing
	
	'Run the Batch file
	Common_RunBatch s_ALFFolderPath &"\" & s_ALFlogsearchBatFile
	b_CritError = false

	
	
	
	If s_SheetName <> "CHECKIFRAWLOGISBLANK" Then
		
		
		's_Input = a_SearchParams(0)

		
		If not Common_DownloadAttachment("LAB-TEST","TestLog",s_ALFFolderPath) then
			if not Common_DownloadAttachment("PLAN-TEST","TestLog",s_ALFFolderPath) then
				Reporter.ReportEvent micFail, "Common_CMRegLogSearch", "TestLog File attachment not found for the test case either in test lab and test plan"
				ExitTest
			End if
		End If
	
		'Once LogSearch is completed, then create dictionary object for further processing (basically to get all the row data from log file and search file)
		set d_LogData = Common_ReadExcel2Dictionary(s_ALFFolderPath & "\ALFLog.xls", "Output Data","$$$$")
	
	
		if Common_FileExistance (s_ALFFolderPath & "\ALFLog.xls") then
			Common_AttachToCurrentRun s_ALFFolderPath & "\ALFLog.xls"
		End if
		
		If b_CritError Then
			Common_Report "Critical ERROR Unable to process ALFLog.xls Sheet generated in ALFLogSearch folder|Common_ALFLogSearch|FAIL"
			On error goto 0
			EnableRecoveryScenario
			Exit Function
		End If
		
		b_CritError = false
		
		set d_SearchData = Common_ReadExcel2Dictionary(s_ALFFolderPath & "\TestLog.xls",s_SheetName,"|")
		
		If b_CritError Then
			Common_Report "Critical ERROR Unable to process the attached TestLog.xls file|Common_ALFLogSearch|FAIL"
			On error goto 0
			EnableRecoveryScenario
			Exit Function
		End If
		
		'Search each row of search dictionary in each row of log dictionary 
		For i_SearchRowIdx = 1 To d_SearchData.count Step 1
			'Initialize the error flag to 
			b_ErrorFlag = False
			
			Set o_RegEx = New RegExp
			With o_RegEx
				'Regular expression for search row (or condition for each cell value)
	      		.Pattern  = "(" & replace(d_SearchData.item(i_SearchRowIdx),"+","\+") & ")"
	      		.IgnoreCase = True
	      		'Return all the match
	      		.Global     = true
	  		End With
	  		
	  		'Set s_TempData to some initial value
			s_TempData = "#INITIALVAL#"
			
			For i_LogRowsIdx = 1 To d_LogData.count Step 1
				'Test method returns TRUE if a match is found
				If o_RegEx.Test(d_LogData.Item(i_LogRowsIdx)) Then
					'Execution of search using regEX
			  		set o_Temp = o_RegEx.Execute(d_LogData.Item(i_LogRowsIdx))
			  			  		
			  		s_TempData = d_SearchData.item(i_SearchRowIdx)
			  		
			  		'Replace all found items by NULL and finally we get unmatched items in s_TempData
			  		For i_ReplaceIdx = 0 To o_Temp.count - 1  Step 1
			  			s_TempData = Replace(replace(s_TempData,o_Temp.Item(i_ReplaceIdx).Value,""),"|","")
			  		Next
			  	
		  		End If
		  		'If s_TempData is null then that means some cell value is not found
		  		If s_TempData = "" Then
		  			Reporter.ReportEvent micPass,"Search File Row#" & cstr(i_SearchRowIdx + 1), d_SearchData.item(i_SearchRowIdx) & " Found in Log File Row#" & cstr(i_LogRowsIdx + 1)
		  			b_ErrorFlag = False
		  			Exit for
		  		else
		  			b_ErrorFlag = True
		  		End If
		  		
			Next
			
			If b_ErrorFlag Then
				If s_TempData = "#INITIALVAL#" Then
					s_TempData = d_SearchData.item(i_SearchRowIdx) 
				End If
				reporter.ReportEvent micFail,"While searching Data " & d_SearchData.item(i_SearchRowIdx) & " in Search File Row#" & cstr(i_SearchRowIdx), s_TempData & " Not found In log File"
			End If
		
		Next
	Else
		s_RawFileContent = Common_ReadFileContent(s_ALFFolderPath & "\RawLog.txt")
		if s_RawFileContent = "" then
			Reporter.ReportEvent micPass,"Raw log check","Raw log has no data"
		else
			Reporter.ReportEvent micFail,"Raw log check","Raw log has data"
		End If
	End If
	
	'GATI 121
	if Common_FileExistance (s_ALFFolderPath & "\RawLog.txt") then
	
			
		Common_FolderCreate s_ALFFolderPath & "\RawLogArchive"
		
		Set o_FSO = CreateObject("Scripting.FileSystemObject")
		
		s_RawFilename = "SearchCount-"&Environment("ALFLogSearchCount")&"_DateTime-"&replace(replace(replace(now,"/","_")," ","_"),":","_")&"_ENV-"&ucase(Environment("TestEnv_Connection"))&"_PEAK-"&Environment("login_Peak")&"_"&s_MessageName
		
		o_FSO.MoveFile s_ALFFolderPath &"\RawLog.txt" ,s_ALFFolderPath &"\RawLogArchive\"&s_RawFilename&".txt"
		
		Common_AttachToCurrentRun s_ALFFolderPath&"\RawLogArchive\"&s_RawFilename&".txt"
		
	End if
	
	Set o_FSOC = createobject("Scripting.FileSystemObject")
	Set o_BatchFileC = o_FSOC.OpenTextFile(s_ALFFolderPath & "\" & s_ALFlogsearchBatFile,2)
	s_FileContentbat = replace(s_FileContent,s_PPASS,"XXXXXXXXXXXX")
	
	
	o_BatchFileC.Write s_FileContentbat
	o_BatchFileC.Close
	set o_BatchFileC = nothing
	EnableRecoveryScenario
	On error goto 0
End Function



'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!  Some functions need enhancement by adding extra param and Function parameter number and structure cannot be changed, Such cases are handled in GATI by adding special Param set within two '~' Eg., ~SheetName1~
'!
'!  Simple Function accepts a string and looks for two '~' and returns an array where the first element will have original input(stripping off ~value~) and the second element will have value within two '~'  
'!
'!	Example Usage : Common_FetchVars s_Input     <-Where s_strText is a variable having String Eg., "NormalParam1|NormalParam2|NormalParam3~SpecialParam~"
'! 	@Param s_Input is a variable having Params
'!	@Return array where element 0 will have original String with no Special param value, and Element 1 will have only the special param value
'!	@Author sanjeeth.nayak@amadeus.com
'!	@Date 	Created: 14Jun2018 | Last Updated: 
Public Function Common_FetchVars(byval s_Input)
	On error resume next
 	Err.clear
	DisableRecoveryScenario
	s_RightBound = InStrRev(s_Input,"~")
	s_LeftBound = Instr(s_Input,"~")
	If err.number <> 0 Then
		common_report "PLEASE CHECK s_Input Var|low critical Err thrown Common_FetchVars|WARNING"
	End If
	EnableRecoveryScenario
	On error goto 0
	Dim a_Return(1)
	'Check if two ~ are present, Check if there are any values withing ~~
	If (s_RightBound > s_LeftBound) and ((s_RightBound) <> s_LeftBound + 1) Then
		a_Return(1) =  mid(s_Input,s_LeftBound + 1 ,s_RightBound - s_LeftBound - 1) 'Return Special Param
		a_Return(0) =  Replace(s_Input,"~" & a_Return(1) & "~","") 'Return Original Input but stripp off special param
	else
		a_Return(1) =  "" 'Return Blank that means there are no Special Params
		a_Return(0) =  s_Input 'Return Original Input
	End If
	
	
	Common_FetchVars = a_Return
End Function


'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!
'! This funnction will read the excel sheet and creates dictionary arrayE. Each cell in row will be concatinated and values are mapped to keys of row number'	
'!
'! Written for mainly the ALF log validation. Where we need to replace some string with env values.Also, To handle Error for processing normal string.
'!
'! Example Usage: set d_SearchData = Common_ReadExcel2Dictionary(s_ALFFolderPath & "\TestLog.xls","ToVerify","|")
'!
'! 	@Param  s_Input - Environment variable name (String)
'!	@Return Dictionary object which has excel row data
'!	@Author sanjeeth.nayak@amadeus.com
'!	@Date Created: 16Nov18 | Last Updated:16Nov18
'! 	@See
Public Function Common_ReadExcel2Dictionary(byval s_InputFile, byval s_sheetName, byVal s_Delimiter)
			
	Dim o_DataDict,o_ObjWorkbook,o_ObjExcel,i_MaxRow,i_MaxCol,i_RowIterator,s_Value,i_ColIterator,s_CellValue,s_Key,o_ObjWorksheet,o_ObjRange
	
	'Create dictionary and excell objects
	Set o_DataDict = CreateObject("Scripting.Dictionary")
	Set o_ObjExcel = CreateObject("Excel.Application")
	
	o_ObjExcel.Visible = false
	
	Set o_ObjWorkbook = o_ObjExcel.Workbooks.Open(s_InputFile)
	
	Set o_ObjWorksheet = o_ObjWorkbook.Worksheets(s_sheetName)
	
	Set o_ObjRange = o_ObjWorksheet.UsedRange
	
	i_MaxRow = o_ObjRange.Rows.Count
	
	i_MaxCol = o_ObjRange.Columns.Count
  		
  	'If search sheet has less than 2 rows or 1 column then exit
	If i_MaxRow < 2 or i_MaxCol < 1  Then
		Common_Report "Please check the Excell file! Data is invalid|FileCheck|Fail"
		b_CritError = true
		Set Common_ReadExcel2Dictionary = o_DataDict

		Exit Function
	End If
		
  	'Row loop
	For i_RowIterator = 2 To i_MaxRow Step 1
	
		s_Value = ""	
		
		'Column loop
		For i_ColIterator = 1 To i_MaxCol step 1

			s_CellValue = o_ObjWorksheet.cells(i_RowIterator,i_ColIterator).value
			
			If s_CellValue = "" Then
				s_CellValue = "Null"
			ElseIf mid(s_CellValue,1,1) = "$" Then
				s_CellValue = Common_EnvVarReplace(replace(s_CellValue,"$",""))
			
			ElseIf instr(s_CellValue,"~") > 1 Then
				'Check if two ~ are present, Check if there are any values within ~~
				Set o_Matches = Common_RegExecution(s_CellValue, "(~.*?~)", TRUE)
				For Each o_Match In o_Matches
					s_CellValue =  Replace(s_CellValue, o_Match.value ,Common_EnvVarReplace(replace(o_Match.value,"~",""))) 'replace the values
				Next		
			
			End If
			
			s_Value = ucase(s_Value & s_Delimiter & s_CellValue)
			
		Next
		
		s_Key =  i_RowIterator - 1
		o_DataDict.add s_Key, mid(s_Value,len(s_Delimiter)+1)
	
	Next

	Set Common_ReadExcel2Dictionary = o_DataDict
	
	o_ObjExcel.Quit
	On error goto 0
	EnableRecoveryScenario
End Function



'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!
'! This Function for given string, returns environment variable value. If Enviromnet variable is not present then, Returns input string	
'!
'! Was written for mainly the ALF log validation. Where we need to replace some string with env values.Also, To handle Error for processing normal string.
'! Example Usage: s_ScriptVariable = Common_EnvVarReplace("e_LoginAirLine")   -> sends value (say 7X) in Environment("e_LoginAirLine") if exists. Else, "e_LoginAirLine" will be returned
'!
'! 	@Param  s_Input - Environment variable name (String)
'!	@Return Value of Environment variable if present. Else, input string
'!	@Author sanjeeth.nayak@amadeus.com
'!	@Date Created: 16Nov18 | Last Updated:16Nov18
'! 	@See
Public Function Common_EnvVarReplace(byVal s_Input)
	DisableRecoveryScenario
	On error resume next
	err.clear
	'Replacing env variable using Execute command
	execute "Common_EnvVarReplace = Environment("& chr(34) & s_Input & chr(34) & ")"

	'If environment var is not found then we catch error and return same input
	If err.number <> 0 Then
		Common_EnvVarReplace = s_Input
		'reporter.ReportEvent micWarning, "VarReplace", "Please check: " & s_Input & ", Could not be found in Env variables list"
		Print "Common_EnvVarReplace: Please check [" & s_Input & "], Could not be found in Env variables list"
	End If
	'Give back error handler to UFT
	EnableRecoveryScenario
	On error goto 0
End Function

''---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
''! Function To return the seat numbers matching the seat criteria 
''!
''! Following can be the active screens. System will automatically navigate to seat search screen and after finding the data it will return to the original screen
''!					"FLIGHT INFORMATION"
''!
''!					"SEATMAP"
''!
''!					"SEAT CHANGE"
''!
''!					"SEAT SEARCH"
''!
''!					"SEAT CHARACTERISTICS LOOKUP"
''!
''!	Example Usage:	s_ScriptVariable = Common_CMSearchSeat(<Seat Search type>:<Criteria1>+<Criteria2>+...+<Criteria n>|<Seat Search type>:<Criteria1>+<Criteria2>+...+<Criteria n>)
''!
''!					<Seat Search type> is SO or SC i.e., Seat occupation or Seat characteristics or combination of both
''! 	@Param  s_SearchCrit-Needs to have atleast one characteristics for seat search.	Following are the options for the seat searchs <Seat Search type> is SO or SC i.e., Seat occupation or Seat characteristics or combination of both <Criteria n> 
''!	@Return Seat numbers separated with ';' or "" when there are no seats available for the given search results 
''!	@Author sanjeeth.nayak@amadeus.com
''!	@Date Created: 26Mar18 | Last Updated:26Mar18
Public Function Common_CMSearchSeat(byVal s_SearchCrit)          
               'Initialize
               Dim a_SearchCrit,i_Rows,i_Cols,i_RowIterator,i_ColIterator,s_Temp,s_CurrentScreen,i_SearchIterator,s_IndividualSeach,s_TableName,s_ColToSearch,s_EditBoc,a_RowData,s_StringConcat,d_Synctime,i_SearchRowIterator,i_RowNumber
				CM_DynamicSync
               'Set return to Null
               Common_CMSearchSeat = ""
               
               'Navigate to seat search screen
               DisableReporting
               s_CurrentScreen = ucase(Common_CMGetCMScreen)
               
               Select Case s_CurrentScreen
                              Case "FLIGHT INFORMATION"
                              				 JavaWindow("wndCM").Type micF5
                                             JavaWindow("wndCM").JavaButton("btnSeatmap").Click
                                             Common_CMScreenCheck "Seatmap|120"
                                             JavaWindow("wndCM").JavaButton("btnMoreSeatInfo").Click
                              Case "SEATMAP"
                                             JavaWindow("wndCM").JavaButton("btnMoreSeatInfo").Click
                              Case "SEAT CHANGE"
                                             'Don Nothing
                              Case "SEAT SEARCH"
                                             'Don Nothing
                              Case "SEAT CHARACTERISTICS LOOKUP"
                                             'Don Nothing
                              Case Else
                              				 EnableReporting
                                             Common_Report "Current screen is not valid to perform Seat Search|Common_CMSearchSeat|Fail"
                                             ExitTest
               End Select
               
               'cick on Search Seats button from the menu
               
               If not s_CurrentScreen = "SEAT SEARCH" Then
                              JavaWindow("wndCM").JavaButton("btnSearchSeats").Click
               End If
               
               'Confirm if we are on Seat Search screen
               Common_CMScreenCheck "Seat Search"
               CM_DynamicSync
               'Derive Search Criteria
               
               'SO:Free Seat+Reserved seat|SC:Aisle seat+Exit Row Seat+ Extra Legroom
               
               If s_SearchCrit <> ""  Then
               
                              JavaWindow("wndCM").JavaEdit("txtSelectCharacteristics").Set ""
                              JavaWindow("wndCM").JavaEdit("txtSelectOccupation").Set ""
                              
                              a_SearchCrit = split(s_SearchCrit,"|")
                              
                              For i_SearchIterator = 0 To ubound(a_SearchCrit) Step 1                                 
                                             
                                             s_IndividualSeach = a_SearchCrit(i_SearchIterator)
                                             
                                             If instr(ucase(s_IndividualSeach),"SO:") = 1 then
                                                            
                                                            s_TableName = "tblSeatOccupation"
                                                            s_ColToSearch = "Seat Occupation"
                                                            s_EditBoc = "txtSelectOccupation"
                                                            
                                             Elseif instr(ucase(s_IndividualSeach),"SC:") = 1 then
                                                            
                                                            s_TableName = "tblSeatCharacteristics"
                                                            s_ColToSearch = "Seat Characteristics"
                                                            s_EditBoc = "txtSelectCharacteristics"
                                             
                                             else
                                                            
                                                            Common_Report "Search Criteria is invalid"
                                                            Exit function
                                                                           
                                             End if
                                             
                                             s_IndividualSeach = mid(s_IndividualSeach,4,len(s_IndividualSeach))
                                             
                                             a_RowData = split(s_IndividualSeach,"+")
                                             
                                             s_StringConcat = ""
                                             'Get Search criteria rows
                                             For i_SearchRowIterator = 0 To ubound(a_RowData) Step 1
                                             				DisableReporting
                                                            i_RowNumber = Common_GetRowNo("wndCM",s_TableName,s_ColToSearch & "|" & a_RowData(i_SearchRowIterator))
                                                            EnableReporting
                                                            If i_RowNumber <> "" Then
                                                                           s_StringConcat = cstr(i_RowNumber + 1) & "," & s_StringConcat
                                                            End If
                                             Next
                                             'Set search criteria
                                             JavaWindow("wndCM").JavaEdit(s_EditBoc).Set s_StringConcat
                                             
                              Next
               End If
               
               'End of Search critia
               
               DisableRecoveryScenario
               On error resume next
               err.clear
               
               
               Set o_ChildObjects = JavaWindow("wndCM").JavaObject("objSeatPanel").ChildObjects

               For i_Iterator = 0 To o_ChildObjects.count - 1 Step 1
                              If o_ChildObjects(i_Iterator).getroproperty("Class Name") = "JavaTable" then
               
                                             'Get number of rows and columns
                                             i_Rows = o_ChildObjects(i_Iterator).GetROProperty("rows")
                                             i_Cols = o_ChildObjects(i_Iterator).GetROProperty("cols")
                                             
                                             'Catch the error which we might get during fetching of rows and columns
                                             If err.number <> 0 Then
                                             				EnableReporting
                                                            Common_Report "ERROR while fetching Number of Rows/Cols|Common_CMSearchSeat|Common_CMSearchSeat|Fail"
                                                      
                                                            EnableRecoveryScenario
                                                            On error goto 0
                                                            Exit Function
                                             End If
                                             ''defining error resume next **Rupa
                                              DisableRecoveryScenario
                                              On error resume next
                                              err.clear
                                             For i_RowIterator = 1 To (i_Rows -1) Step 1
                                                            For i_ColIterator = 1 To (i_Cols - 1) Step 1
                                                                           err.clear
                                                                           'Core of fetching blue border from the seatmap table cell
                                                                           DisableReporting
                                                                           s_Temp = (o_ChildObjects(i_Iterator).Object.PrepareRenderer(o_ChildObjects(i_Iterator).Object.getCellRenderer(i_RowIterator,i_ColIterator),i_RowIterator,i_ColIterator).tostring)
                                                                           
                                                                           If err.number <> 0 Then
                                                                           				EnableReporting
                                                                                          Common_Report "ERROR while fetching Number of Rows/Cols|Common_CMSearchSeat|Common_CMSearchSeat|Fail"
                                                                                          
                                                                                          EnableRecoveryScenario
                                                                                          On error goto 0
                                                                                          Exit Function
                                                                           End If
                                                                           'when boarder present, then click on that cell and fetch seat number from the edit box
                                                                           if instr(s_Temp,"border=javax.swing.border.LineBorder@")>0 then
                                                                                          o_ChildObjects(i_Iterator).ClickCell i_RowIterator,i_ColIterator
                                                                                          Common_CMSearchSeat = Common_CMSearchSeat & ";" & JavaWindow("wndCM").JavaEdit("txtSelectSeats").GetROProperty("text") 
                                                                           End if
                                                            Next
                                             Next
                                            ''already handled**rupa
                                             EnableRecoveryScenario
                                             EnableReporting
                                             On error goto 0
                                             'Remove any ; at the start string 
                                             If mid(Common_CMSearchSeat,1,1) = ";" Then
                                                            Common_CMSearchSeat = mid(Common_CMSearchSeat,2, len(Common_CMSearchSeat))
                                                            Common_Report "Seats Found are: "& Common_CMSearchSeat & "|Common_CMSearchSeat|PASS"
                                             End If
                              End If
               Next
               'Set sync time to 30 sec
               d_Synctime = 10
               
               'Clear Selection
               if JavaWindow("wndCM").JavaEdit("txtSelectSeats").Exist(1) Then
                 JavaWindow("wndCM").JavaEdit("txtSelectSeats").Set""
               End If
               
               
               'Get back to the original screen
               While ((Ucase(Common_CMGetCMScreen) <> s_CurrentScreen) and (d_Synctime > 1))
                              d_Synctime = d_Synctime - 1
                              Set WshShell = CreateObject("WScript.Shell")
                              WshShell.SendKeys "{ESC}"
                              wait 1
               Wend
        EnableRecoveryScenario
		On error goto 0
End Function




'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'! Function To return the current screen name 
'!
'!	Example Usage:	s_ScriptVariable = Common_CMGetCMScreen()
'! 	@Param None
'!	@Return Returns Current/Active CM screen name
'!	@Author sanjeeth.nayak@amadeus.com
'!	@Date Created: 26Mar18 | Last Updated:26Mar18
'! 	@See
Public Function Common_CMGetCMScreen()
	CM_DynamicSync
	Dim a_GetCurrentScreenName
	
	Common_CMGetCMScreen = ""
	
	DisableRecoveryScenario
	On error resume next
	Err.clear
	'Gets current screen name
	a_GetCurrentScreenName = split(replace(replace(replace(JavaWindow("wndCM").JavaObject("objBreadCrumbTrail").Object.toString, ",,","~|~"),",","~|~"),":","~|~"),"~|~")
	Common_CMGetCMScreen =  a_GetCurrentScreenName(ubound(a_GetCurrentScreenName))
	
	If err.number <> 0 then
		Common_Report "Error while getting Screen Name|Common_CMGetCMScreen|Fail"
	Else
		Common_Report "CM Screen "& Common_CMGetCMScreen &" is found|Common_CMGetCMScreen|Pass"
	End if
	
	EnableRecoveryScenario
	On error goto 0
	
End Function




'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'! Function To return the whole breadcrumb trail of CM JFE 
'!
'!	Example Usage:	s_ScriptVariable = Common_CMGetBreadCrumbTrail()
'! 	@Param None
'!	@Return Returns  the whole breadcrumb trail of CM JFE 
'!	@Author sanjeeth.nayak@amadeus.com
'!	@Date Created: 17Mar18 | Last Updated:
'! 	@See
Public Function Common_CMGetBreadCrumbTrail()

	Common_CMGetBreadCrumbTrail = ""
	
	DisableRecoveryScenario
	On error resume next
	Err.clear
	'Gets current screen name
	Common_CMGetBreadCrumbTrail = JavaWindow("wndCM").JavaObject("objBreadCrumbTrail").Object.toString

	
	If err.number <> 0 then
		Common_Report "Error while getting Screen Name|Common_CMGetBreadCrumbTrail|Fail"
	Else
		Common_Report "CM Screen "& Common_CMGetCMScreen &" is found|Common_CMGetBreadCrumbTrail|Pass"
	End if
	
	EnableRecoveryScenario
	On error goto 0
	
End Function


'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'! Function To return the information about a seat number
'!
'!	Example Usage:	s_ScriptVariable = Common_CMGetCharacteristics("19A")
'! 	@Param s_SeatNumber - Seat number
'!	@Return  Seat information e.g., “7A_Background=eco.gif&7A_Occupancy=ACCEPTED_ALL_LEGS”
'!	@Author  sanjeeth.nayak@amadeus.com
'!	@Date Created: 26Mar18 | Last Updated:26Mar18
'! 	@See
Public Function Common_CMGetCharacteristics(byVal s_SeatNumber)
	'Get the error handler
	DisableRecoveryScenario
	On error resume next
	err.clear
	'Initialise the return value to NULL
	Common_CMGetCharacteristics = ""
	'Get the icon details/Seat charecteristics using getSeatIconDetails method
	Execute "Common_CMGetCharacteristics = JavaWindow(" & chr(34) & "wndCM" & chr(34) &").JavaObject(" & chr(34) & "objSeatmapDisplayPanel" & chr(34) & ").object.getSeatIconDetails(" & chr(34) & s_SeatNumber & chr(34) & ")"
	'If unexpected error occures, catch it and mark as failure
	If err.number <> 0 Then
		Common_Report "Error while Getting Seat charecteristics|Common_CMGetCharacteristics|Fail"
	End If
	'Disable error handling
	EnableRecoveryScenario
	On error goto 0
	'Check if seat charecteristics is not NULL
	If Common_CMGetCharacteristics <> "" Then
		Common_Report "Seat charecteristics fetch is successful: "& chr(13) & Common_CMGetCharacteristics &"|Common_CMGetCharacteristics|Pass"
	Else
		Common_Report "No charecteristics Found for the input seat: "& s_SeatNumber &"|Common_CMGetCharacteristics|Warning"
	End If
End Function



'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'! Function To write data on TTY/RES screen in CM
'!
'!	Example Usage:	Common_CMWriteTE "RTRTUOI9E|2|2"						-> To Write from the start position 2,2 (NOTE that it will not press ENTER key) unless ## is present
'!
'!					Common_CMWriteTE "RTUOI9E" 								-> To Write on active cursor (NOTE that it will not press ENTER key) unless ## is present
'!
'!					Common_CMWriteTE "Firstline##SecondLine##ThirdLine##" 	-> Here ## denotes ENTER key(return) 
'!
'! 	@Param s_Input - "ALL": When we want to fetch all data in RES/TTY screen. or "<Row>|<Column>|Line" to fetch entire line from the start position. Or "<Row>|<Column>|<Number of characters>" to fetch specic data from the start position
'!	@Return  true - If CMWriteTE is successfull,Else returns false
'!	@Author  sanjeeth.nayak@amadeus.com
'!	@Date reated: 19Feb2018 | Last Updated: 12Mar2018
'! 	@See
Public Function Common_CMWriteTE(byref s_Input)
	'Initialise
	Dim a_Input,sData,aData,i_MaxCol,i_MaxRow,i_CommandIdx,i_Sync
	'Split the input to get row, col, and data
	a_Input = split(s_Input, "|")
	sData = a_Input(0)
	sData = replace(sData,"##","~##~")
	aData = split(sData,"~")
	CM_DynamicSync
	wait 2
	'Check if row and column index are specified
	If ubound(a_Input) = 2 Then
		i_Row = cint(a_Input(1)) - 1
		i_Col = cint(a_Input(2)) - 1
		'Check if row and col are not negative
		If i_Row < 0 or i_Col < 0 Then
			Common_Report "Index cannot be negative||Fail"
			ExitTest
		End If
	End If
	'Get max range for row and col
	i_MaxCol = JavaWindow("wndCM").JavaObject("objTE").Object.getcore.getcolcount
	i_MaxRow = JavaWindow("wndCM").JavaObject("objTE").Object.getcore.getRowcount
	'Check if row and col index is not out of range
	If i_Row < i_MaxRow and  i_Col < i_MaxCol Then
		'Check if RES/TTY screen exists
		If JavaWindow("wndCM").JavaStaticText("txtLockedFlag").exist(1) Then
			'Iterate through Each command
			For i_CommandIdx = 0 To ubound(aData) Step 1
				For i_Sync = 1 To 60 Step 1
					'Check if TE or TTY is not locked for editing
					If JavaWindow("wndCM").JavaStaticText("txtLockedFlag").GetROProperty("attached text") = "EDIT" Then
						'If we need to press Enter
						If instr(aData(i_CommandIdx),"##")>0 Then
							JavaWindow("wndCM").JavaObject("objTE").Object.getCore.sendenter
							'Once Enter is sent, ignore the pointer
							ReDim a_Input(0)
						Else
							'If Row and col index not specified just write on active pointer
							If ubound(a_Input) = 0 Then	
								JavaWindow("wndCM").JavaObject("objTE").Type(aData(i_CommandIdx))
							'Else, set data on particular index
							Else
								 JavaWindow("wndCM").JavaObject("objTE").Object.getcore.settext i_Row,i_Col,aData(i_CommandIdx)
							End If
						End If
						Exit For
					End If
					'Sync wait
					Wait 1
				Next
			Next
		End If						
	End If
End Function

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'! Function To read data from TTY/RES screen in CM
'!
'!	Example Usage:	s_ScriptVariable = Common_CMReadTE("2|2|LINE")  -> Starting from position (2,2) entire line of data will be fetched
'!
'!					s_ScriptVariable = Common_CMReadTE("2|1|LINE")	-> Starting from position (2,2) entire line of data will be fetched
'!
'!					s_ScriptVariable = Common_CMReadTE("2|32|6")	-> Starting from position (2,32) , 6 Characters of data will be fetched
'!
'!					s_ScriptVariable = Common_CMReadTE("ALL")		-> Starting from position (1,1) entire screen data will be fetched (Takes more than 3 min to fetch)
'!
'! 	@Param s_Input - "ALL": When we want to fetch all data in RES/TTY screen. or "<Row>|<Column>|Line" to fetch entire line from the start position. Or "<Row>|<Column>|<Number of characters>" to fetch specic data from the start position
'!	@Return Data fetched as per input criteria
'!	@Author  sanjeeth.nayak@amadeus.com
'!	@Date reated: 19Feb2018 | Last Updated: 12Mar2018
'! 	@See
Public Function Common_CMReadTE(byref s_Input)
	DisableReporting
	i_MaxCol = JavaWindow("wndCM").JavaObject("objTE").Object.getcore.getcolcount
	i_MaxRow = JavaWindow("wndCM").JavaObject("objTE").Object.getcore.getrowcount
	s_OutData = ""
	b_Sync = False
	i_TempSysTimeOut = Setting("DefaultTimeOut")
	
	CM_DynamicSync
	wait 1
	Setting("DefaultTimeOut") = 0
	
	For i_Sync = 1 To 60 Step 1
		'Check if it is non RES or TTY screen
		if JavaWindow("wndCM").JavaObject("objBreadCrumbTrail").exist(1) then
			i_Sync = 60
			b_Sync = true		
			'continue
		else
			'Check if TE or TTY is not locked for editing
			if JavaWindow("wndCM").JavaStaticText("txtLockedFlag").exist(1) then
				If JavaWindow("wndCM").JavaStaticText("txtLockedFlag").GetROProperty("attached text") = "EDIT" Then
					'Continue
					i_Sync = 60
					b_Sync = true
				End If
			End if
		End if
		wait 1
	Next
	
	Setting("DefaultTimeOut") = i_TempSysTimeOut
	EnableReporting
	If b_Sync = False Then
		Common_CMReadTE = ""
		Common_Report "Common_CMReadTE|Page Sync for RES or TTY window failed|FAIL"
		EnableReporting
		Exit function
	End If
	DisableReporting
	If ucase(s_Input)="ALL" Then
		For i_RowIterator = 0 To (i_MaxRow-1) Step 1
			For i_ColIterator = 0 To (i_MaxCol-1) Step 1
				s_OutData =  s_OutData & JavaWindow("wndCM").JavaObject("objTE").Object.getcore.getchar(i_RowIterator,i_ColIterator)
			Next
			s_OutData = s_OutData & chr(13)
		Next
		Common_CMReadTE = s_OutData		
	Else
		a_Input = split(s_Input, "|")
		If ubound(a_Input) = 2 Then
			i_Row = cint(a_Input(0)) - 1
			i_Col = cint(a_Input(1)) - 1
			
			If i_Row < 0 or i_Col < 0 Then
				EnableReporting
				Common_Report "Index cannot be negative or zero|Common_CMReadTE Index check|Fail"
				ExitTest
			Else
				if ucase(a_Input(2)) = "LINE" Then
					i_NumberofChar = i_MaxCol + i_Col
				else
					i_NumberofChar = i_Col + cint(a_Input(2))
				End If
				s_OutData = ""
				For i_Iterator = i_Col To i_NumberofChar Step 1
					s_OutData =  s_OutData & JavaWindow("wndCM").JavaObject("objTE").Object.getcore.getchar(i_Row,i_Iterator)
				Next
				Common_CMReadTE = s_OutData
			End If
		Else	
			EnableReporting
			Common_Report "Check Input|Common_CMReadTE|Fail"
			ExitTest
		End If
	End If
	EnableReporting
	Common_Report s_OutData
End Function



'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'! Function To validate the content in CM JFE customer history screen
'!
'!	Example Common_CMHistoryCheck "<Transaction>", "<ValidationText>"
'!		Common_CMHistoryCheck "FLIGHTDISRUPTION","Mass Deboarded: Yes|Deboard Reason: Flight disruption - FLIX-FX applied|Disruption Reason - Flight Suspended (FLIX): No -> Yes"
'!		Common_CMHistoryCheck "FLIGHTDISRUPTION|2","Disruption Reason - Flight Suspended (FLIX): Yes -> No"
'!		s_ScriptVar = Common_CMHistoryCheck("FLIGHTDISRUPTION|2","~FETCH~") <---------Used to get whole transaction
'! 	@Param s_Transaction - Transaction name, s_ValidationText - Validation String
'!	@Return None. Marks test step as Success : If validation text is found, Failure : If any ValidationText is not found 
'!	@Author Nayak.RATNAKARAJANTH@amadeus.com
'!	@Date reated: 19Feb2018 | Last Updated: 12Mar2018
'! 	@See
Public Function Common_CMHistoryCheck(byVal s_Transaction,byVal s_ValidationText)

	if Common_EnvVarReplace("TestEnv_Connection") <> "DEV" then

		
		If s_ValidationText = "~FETCH~" Then
			b_Extract = true
		Else
			b_Extract = False
		End If
		
		
		Dim RegEx,s_TempVal, d_MaxWait, myMatches, myMatch,objRegex,objRegM, s_Occurance
		s_Occurance = 0
	 	Set RegEx = CreateObject("vbscript.regexp")  
	 	
		Common_CMHistoryCheck = false
		
		a_Occurance= Split(s_Transaction,"|")
		If ubound(a_Occurance)> 0 Then
			If isnumeric(a_Occurance(1)) Then
				s_Occurance = a_Occurance(1)-1
			Else 
				Common_Report "Occurance must be an integer!|Common_CMHistoryCheck|Fail"
				Exittest 'Hard fail
			End If	
		End if 
		
		s_Args = Split(s_ValidationText,"|")
		s_lengthofargs = ubound(s_Args)
		
		DisableRecoveryScenario
		On error resume next
		Err.clear
		i_retry = 1
		Do
			wait 2
			s_TempVal = JavaWindow("wndCM").JavaStaticText("stsCustomerHistory").GetROProperty("attached text") 'Get History HTML Content
	  		i_retry = i_retry + 1
	  	Loop while (instr(s_TempVal,"Transaction") = 0) and (i_retry < 5)
	  		
			
			With RegEx  
	   			.Global = True  
	   			.IgnoreCase = True  
	   			.MultiLine = True  
				.Pattern = "(&raquo;)|(&nbsp;)|(<[^>]+>)" 'Regular Expression to Remove HTML Tags.  
	 		End With  
	 		sOut1 = RegEx.Replace(s_TempVal, "")     
	 		
	 		sOut2 = sOut1+"####"
	 		
	 		
			With RegEx  
	   			.Global = True  
	   			.IgnoreCase = True  
	   			.MultiLine = True  
				.Pattern = "Transaction:" 'Regular Expression to Remove HTML Tags.  
	 		End With  
	 		sOut = RegEx.Replace(sOut2, "####Transaction:")  
	
	'Replace all Tags mentioned in the pattern
	 		
		
	    
	    Set objRegex = CreateObject("vbscript.regexp")
	    	With objRegex
	    	.Global = True 
	        .ignorecase = True
	        .MultiLine = True  
	        .Pattern = "Transaction: "&a_Occurance(0)&"([\S\s]+?)####"  'Regular Expression to extract data for the transaction requested(If it is followed by or preceeds other transactions).
	        
	        If .test(sOut) Then
	            Set objRegM = .Execute(sOut)
	            ExtractText = objRegM.Item(s_Occurance).Value    'Selecting appropriate SubMatch
	            Reporter.ReportEvent micPass, "Common_CMHistoryCheck - Transaction", "||| Transaction Found ||| "& ExtractText
	            
	            
	        else
	        
	         	ExtractText = "No match"
	           	Reporter.ReportEvent micFail, "Common_CMHistoryCheck - Transaction",s_Transaction & " ||| Transaction Not Found ||| "
	           	Common_CMHistoryCheck = false
	           	EnableRecoveryScenario
				On error goto 0
	           	Exit function
	        End If
	        End With
	
	        FoundFlag = 0
	        
	        If b_Extract Then
	        	Common_CMHistoryCheck = ExtractText
	        	Reporter.ReportEvent micPass, "Common_CMHistoryCheck - Fetch Text",ExtractText & vbcr &"||| Fetched from the Transaction : " & s_Transaction
		    Else   
		        For J  = 0 To s_lengthofargs
		        
			        If Err.number = 0 and instr(ExtractText,s_Args(J)) > 0 Then 'Validate data in the transaction requested.
	
			        
						Reporter.ReportEvent micPass, "Common_CMHistoryCheck - Validation Text"," |||Search String ||| "& s_Args(J) &" ||| Found in Transaction : "&s_Transaction&" ||| "
	
						
						FoundFlag = FoundFlag +1  'Set the function flag ONLY on Success of Both Transaction and Validation Text.
	
						
					else
	
	
					
						Reporter.ReportEvent micFail, "Common_CMHistoryCheck  - Validation Text"," |||Search String ||| "& s_Args(J) &" ||| Not Found in Transaction : "&s_Transaction&" ||| "
						
					End if
				
				Next	
				
				If FoundFlag = s_lengthofargs+1  Then
					Reporter.ReportEvent micPass, "Common_CMHistoryCheck  - All Strings Match"," ||| All Search strings found in Transaction : "&s_Transaction&" ||| "
				End If
				
			End If
		''already defined..**rupa
	
		EnableRecoveryScenario
		On error goto 0
	Else
		Common_Report "On DEV test run, History Check is ignored temporarorily|HistoryCheck|Done"
	End If
	EnableRecoveryScenario
	On error goto 0
End Function


'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'! Function To validate the content in Boarding Passes and Bag Tags
'!
'!	Example Usage:	Common_CM_BT_BP_Validation "<TagType>", "<ValidationText>", "<Mode>"
'! 	@Param s_TagType - "ATB" or "BTP", s_ValidationText - Validation Text, s_Mode -  "Single" or "ALL"
'!	@Return None. Marks test step as Success : Depends on mode, Failure : If any ValidationText is not found 
'!	@Author  Nayak.RATNAKARAJANTH@amadeus.com
'!	@Date reated: 19Feb2018 | Last Updated: 12Mar2018
'! 	@See 
Public Function Common_CM_BT_BP_Validation(byVal s_TagType,byVal s_ValidationText,byval s_Mode)
	
		Dim s_TempVal, s_TempVal1
		s_Args = Split(s_ValidationText,"|")
		s_lengthofargs = ubound(s_Args)
		
		If Instr(Ucase(s_Mode),"COUNTER")>0 Then
			s_Arguments = Split(s_Mode,"~")
			s_count = s_Arguments(1)
			s_Mode_Count = s_Arguments(0)
		End If
	   SetTimeOutToZero
		wincount = 0
		For i = 0 To 100
			if JavaWindow("to_class:=JavaWindow","title:="&Ucase(s_TagType)&".*","index:=" & i).JavaObject("toolkit class:=amadeus.aeaviewer.gui."&Lcase(s_TagType)&".*").Exist(10) = false then									
				Exit for
			else
				MaxWindowIndex = MaxWindowIndex + 1			
			End If																													
		Next
	ResetDefaultTimeOut
		Reporter.ReportEvent micPass, "Common_CM_BT_BP_Validation", " Count of "&s_TagType&" Windows Found is: "& MaxWindowIndex 

		Counter = 0

		For Iterator = 0 To (MaxWindowIndex - 1)
		
			FoundFlag = 0
			
			On error resume next
			DisableRecoveryScenario
			s_TempVal = JavaWindow("to_class:=JavaWindow","title:="&Ucase(s_TagType)&".*","index:=" & Iterator).JavaObject("toolkit class:=amadeus.aeaviewer.gui."&Lcase(s_TagType)&".*").object.getAEA
			
			If err.number = 0 Then
				
			
				s_Tempval1 = JavaWindow("to_class:=JavaWindow","title:="&Ucase(s_TagType)&".*","index:=" & Iterator).GetROProperty("title")
	
				
				Reporter.ReportEvent micPass, "Common_CM_BT_BP_Validation", "||| Current Window : "& s_Tempval1&" ||| ....Starting String Search||| "
			
				For j  = 0 To s_lengthofargs
			
					If instr(s_TempVal,s_Args(J)) > 0 Then
						
						If ucase(s_Mode) = "ALL" Then
							Reporter.ReportEvent micPass, "Common_CM_BT_BP_Validation", "||| Search String Found : "& s_Args(J)&" ||| "
						End If
							FoundFlag = FoundFlag +1
					Else
						
						If ucase(s_Mode) = "ALL" Then      'Warning for single
							Reporter.ReportEvent micFail, "Common_CM_BT_BP_Validation", "||| Search String Not Found : "& s_Args(J)&" ||| "	
						End If
					End if
				
				Next
				
				If FoundFlag = s_lengthofargs+1  Then
			
						Counter = Counter +1
						
					If ucase(s_Mode) = "SINGLE" Then
						Reporter.ReportEvent micPass, "Common_CM_BT_BP_Validation", "||| All Search Strings Found in Window : "& s_Tempval1&" ||| "
						Exit for
					End If		
						
				End If

			End If	
			
			On error goto 0
			EnableRecoveryScenario
		Next
		
		If Instr(Ucase(s_Mode),"COUNTER")>0 Then
			
			If Counter>0 and Cstr(Counter) = s_count Then
	
				Reporter.ReportEvent micPass, "Common_CM_BT_BP_Validation", "||| Search String Found As expected in : "& Counter&" Windows ||| "
			'Else
			'	Reporter.ReportEvent micFail, "Common_CM_BT_BP_Validation", "||| Search String Found in "& Counter& " Windows Instead of "&s_count&" as Expected |||"
			End If	
		
	End If
	
	If Counter = 0 Then
		Reporter.ReportEvent micFail, "Common_CM_BT_BP_Validation", "||| No Matches Found in any of the Windows||| "
	End If
	On error goto 0
	EnableRecoveryScenario
End Function


'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'! Function To validate if the given icon name is present in a particular cell in a table
'!
'!	Example Usage:	Common_ValidateIcons "wndCM","tblCPTable","ROW(1)","Accept","Accepted_ic_16.png"
'!
'!					Common_ValidateIcons "wndCM","tblCPTable","ROW(1)","Accept","~Accepted_ic_16.png|icon2.jpg"   | is used if multiple icons needs to be validated and ~ for negative testing
'!
'! 	@Param param1 - Main window object name, param2 - table object name,Param3 - Search criteria Param4 - Icon Name/s for validation
'!	@Return True or False based on validations
'!	@Author  Rupawathi.BOKKA@amadeus.com
'!	@Date  Created: 14jun2018 | Last Updated:
'! 	@See 
Public Function Common_ValidateIcons(byval s_window,byval s_tableName,byval s_search,byval s_colName,byval s_IconName)
	Dim l_rowNo,s_table,a_WindowSep,icon_Rendered,l_colNo
	'Moving it to third level to get the icons.
	s_table=s_tableName+"-Info"
	
	Common_ValidateIcons=True
	
	If (JavaWindow(s_window).JavaObject(s_table).Exist(20)) Then
		l_rowNo=Common_GetRowNo(s_window,s_tableName,s_search)
		l_colNo=Common_ColumnIndex(s_window,s_tableName,s_colName)
		If Instr(s_window,":")>0 Then
			a_WindowSep=Split(s_window,":")
			s_windowName=a_WindowSep(0)
			s_dialogName=a_WindowSep(1)
			'Get the row count
			DisableRecoveryScenario
			On error resume next
			Err.clear
			icon_Rendered= JavaWindow(s_windowName).JavaDialog(s_dialogName).JavaTable(s_table).Object.getCellIconNames(l_rowNo,l_colNo,",")
		Else
			DisableRecoveryScenario
			On error resume next
			Err.clear
			icon_Rendered= JavaWindow(s_window).JavaObject(s_table).Object.getCellIconNames(l_rowNo,l_colNo,",")
		End if
		If err.number <> 0 Then
			Common_Report "There are some invalid inputs given,Please check||Fail"
			Common_ValidateIcons=false
			EnableRecoveryScenario
			On error goto 0
			'ExitTest  
		End if
		''already defined **rupa
		EnableRecoveryScenario
		On error goto 0
		'multi icon check
		a_IconName = split(s_IconName,"|")
		
		For i_IconsIterator = 0 To ubound(a_IconName) Step 1
			b_IconFound = false
			s_CurrentIcon = a_IconName(i_IconsIterator)
			If InStr(UCASE(icon_Rendered),UCASE(mid(s_CurrentIcon,(instr(s_CurrentIcon,"~")+1)))) > 0  Then
				b_IconFound = true
			End if	
			If (mid(s_CurrentIcon,1,1) = "~") and (b_IconFound = true) Then
				Common_Report "Negative Validation -" & replace(s_CurrentIcon,"~","") &" Icon Exists.Icon/s found are:"&icon_Rendered&"|Common_ValidateIcons|Fail"
				Common_ValidateIcons=false
			ElseIf (mid(s_CurrentIcon,1,1) = "~") and (b_IconFound = false) Then	
				Common_Report "Negative Validation -" & replace(s_CurrentIcon,"~","") &" Icon does not Exist.Icon/s found are:"&icon_Rendered&"|Common_ValidateIcons|Pass"
			ElseIf (b_IconFound = true) Then
				Common_Report s_CurrentIcon &" Icon Exists. Icon/s found are:"&icon_Rendered&"|Common_ValidateIcons|Pass"
			Else
				Common_Report s_CurrentIcon &" Icon does not exist. Icon/s found are:"&icon_Rendered&"|Common_ValidateIcons|Fail"
				Common_ValidateIcons=false
			End If
		Next
	Else
		Common_ValidateIcons=false
		Common_Report s_CurrentIcon &" Input table does not exist. Icon/s found are:"&icon_Rendered&"||Fail"
	End if
	On error goto 0
	EnableRecoveryScenario	
End Function



'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'! Function To Fetch Icons a particular cell in a table
'!
'!	Example Usage:	Common_FetchCellIcons "wndCM","tblCPTable","ROW(1)","Accept"
'!
'! 	@Param param1 - Main window object name, param2 - table object name,Param3 - Search criteria
'!	@Return Icon Names separated by comma, Blank when there are no Icons and False when there is a critical failure while fetching the icon
'!	@Author Rupawathi.BOKKA@amadeus.com
'!	@Date Created: 27jun2018 | Last Updated:
'! 	@See 
Public Function Common_FetchCellIcons(byval s_window,byval s_tableName,byval s_search,byval s_colName)
	Dim l_rowNo,s_table,a_WindowSep,icon_Rendered,l_colNo
	'Moving it to third level to get the icons.
	s_table=s_tableName+"-Info"
	
	Common_FetchCellIcons=""
	
	If (JavaWindow(s_window).JavaObject(s_table).Exist) Then
		l_rowNo=Common_GetRowNo(s_window,s_tableName,s_search)
		l_colNo=Common_ColumnIndex(s_window,s_tableName,s_colName)
		If Instr(s_window,":")>0 Then
			a_WindowSep=Split(s_window,":")
			s_windowName=a_WindowSep(0)
			s_dialogName=a_WindowSep(1)
			'Get the row count
			DisableRecoveryScenario
			On error resume next
			Err.clear
			icon_Rendered= JavaWindow(s_windowName).JavaDialog(s_dialogName).JavaTable(s_table).Object.getCellIconNames(l_rowNo,l_colNo,",")
		Else
			DisableRecoveryScenario
			On error resume next
			Err.clear
			icon_Rendered = JavaWindow(s_window).JavaObject(s_table).Object.getCellIconNames(l_rowNo,l_colNo,",")
		End if
		If err.number <> 0 Then
			Common_Report "Invalid Input,Please check||Fail"
			Common_FetchCellIcons=false
			EnableRecoveryScenario
			On error goto 0
			'ExitTest  
		End if
		''already defined ..**rupa
		EnableRecoveryScenario
		On error goto 0
		Common_FetchCellIcons = icon_Rendered 
	Else
		Common_FetchCellIcons = false
		Common_Report "Input table does not exist|Common_FetchCellIcons|Fail"
	End if
	EnableRecoveryScenario
	On error goto 0		
End Function



'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'! Function To validate if the given icon name is present in a particular object
'!
'!	Example Usage:s_ScriptVariable = Common_CM_ValidateObjectIcons("WndCm","objDisruptionStatus","Disruption.jpg")
'!
'!				Common_CM_ValidateObjectIcons "WndCm","objDisruptionStatus","Disruption.jpg"
'!
'! 	@Param param1 - Main window object name, param2 - object name,Param3 - Icon Name for validation
'!	@Return True or False based on validations
'!	@Author  Rupawathi.BOKKA@amadeus.com
'!	@Date  Created: 14jun2018 | Last Updated:
'! 	@See 
Public Function Common_CM_ValidateObjectIcons(byval s_window,byval objFlightIcon,byval s_IconName)
	Common_CM_ValidateObjectIcons=False
	On error resume next
	Err.clear
	If InStr(UCASE(objFlightIcon),"STS") > 0  Then
		s_IconNameRend=JavaWindow(s_window).JavaStaticText(objFlightIcon).Object.getIcon().toString()
	Else
		s_IconNameRend=JavaWindow(s_window).JavaObject(objFlightIcon).Object.getIcon().toString()
	End If
	If InStr(UCASE(s_IconNameRend),UCASE(s_IconName)) > 0  Then
		Common_Report "Icon is successfully validated|Common_CM_ValidateObjectIcons|Pass"
		Common_CM_ValidateObjectIcons=True
	Else
		Common_Report " Expected Icon is  "&s_IconName& "and Actual Icon is "&s_IconNameRend&"|Common_CM_ValidateObjectIcons|Fail "
	End If
	If err.number <> 0 Then
		Common_Report "Please check input parameters||Fail"
	End if

	EnableRecoveryScenario
	On error goto 0
End Function
 
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'! Function To return column Index for particular Column Name in a table
'!
'!	Example Usage:s_ScriptVariable = Common_ColumnIndex("WndCm","tblFlightActivityList","Accept")
'!
'! 	@Param param1 - Main window object name, param2 - table object name,Param3 - Column Name
'!	@Return 
'!	@Author  Rupawathi.BOKKA@amadeus.com
'!	@Date  Created: 16Mar18 | Last Updated:
'! 	@See 
Function  Common_ColumnIndex(byval s_window,byval s_tableName,byval s_colName)
	Dim a_Split1,a_Split2,a_ColumnName,counter,l_getParamater,a_GetPar,a_flag
	a_flag=false
	
  		If InStr(1,UCASE(s_colName),"COL(") = 1 Then
      		a_Split1=Split(s_colName,"(")
      		a_Split2=Split(a_Split1(1),")")
	  		Common_ColumnIndex=a_Split2(0)	
    	Else 
     		DisableRecoveryScenario
			On error resume next
	 		Err.clear
			a_ColumnName=JavaWindow(s_window).JavaTable(s_tableName).GetROProperty("columns_names")
			
			If err.number <> 0 Then
	     		Common_Report "There are some invalid inputs given,Please check,Failure in Common_ColumnIndex||Fail"
	     		EnableRecoveryScenario
				On error goto 0
	     		Exit Function 
    		End if
			
			EnableRecoveryScenario
			On error goto 0
			
			a_GetPar=Split(a_ColumnName,";")
			
			For l_getParamater=0 to ubound(a_GetPar)
		    	if InStr(1,a_GetPar(l_getParamater),s_colName)=1 Then
		       		Common_Report "The Column Index is "&l_getParamater&"||Pass"
		       		Common_ColumnIndex=l_getParamater
		       		a_flag=true
		       		Exit For 
		     	End If
		    Next
		   
  		End If
  		EnableRecoveryScenario
		On error goto 0
 End Function
 


'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'! Function To extract background color or foreground color of a particular cell in a table
'!
'!	Example Usage:s_ScriptVariable =  Common_GetColor("WindCm","tblFlightActivityList","Row(1)","Col(3)","background")
'!
'! 	@Param param1 - Main window object name, param2 - table object name, param3 - ROW(<row number>),Param4 - COL(<col number>), param4 = "background" or "foreground" (case insensitive)
'!	@Return Color in the form of RGB ,for example -R255G217B145
'!	@Author  Rupawathi.BOKKA@amadeus.com
'!	@Date  Created: 16Mar18 | Last Updated:
'! 	@See 
 Public Function Common_GetColor(byval s_window,byval s_tableName,byval s_rowNum,byval s_colName,byval s_backGroundOrForeground)
 	Dim l_rowNo,l_colNo,o_RenederedValue,cellRender,lpos1,lpores2,s_Midstring,o_outvalueofColor
 
   	If (JavaWindow(s_window).JavaTable(s_tableName).Exist) Then
       	'Error handling
        l_rowNo=Common_GetRowNo(s_window,s_tableName,s_rowNum)
        l_colNo=Common_ColumnIndex(s_window,s_tableName,s_colName)
        DisableRecoveryScenario
		On error resume next
	    Err.clear
	    Set cellRender = JavaWindow(s_window).JavaTable(s_tableName).Object.getCellRenderer(l_rowNo,l_colNo)
	    If InStr(lcase(s_backGroundOrForeground),"background")>0 Then
	    	o_RenederedValue=cellRender.getBackground().toString() 
	    ElseIf InStr(lcase(s_backGroundOrForeground),"foreground")>0  Then
	    	o_RenederedValue=cellRender.getForeground().toString() 
	    ELSE
            Common_Report "The value passed " & s_backGroundOrForeground &"for  doesn't exist either it should be either background or foreground||Fail"
	    End If
	    If err.number <> 0 Then
	    	Common_Report "There are some invalid inputs given,Please check,Failure in getCellRenderer ||Fail"
	        EnableRecoveryScenario
			On error goto 0
	        Exit Function 
        End if
        EnableRecoveryScenario
		On error goto 0
       'In order to do clean up for exepected output expected-For example the value returned is in java.awt.Color[r=255,g=217,b=145] format .Want output as R255G217B145
        lpos1=Instr(1, o_RenederedValue , "[")
        lpos2=Instr(1, o_RenederedValue , "]")
        s_Midstring=Mid(o_RenederedValue,lpos1+1,lpos2-lPos1 -1)
        o_outvalueofColor=UCase(Replace(Replace(s_Midstring,",",""),"=",""))
        Common_Report "The color rendered from the cell is " &o_outvalueofColor& "||pass"
	   'Returning a value
        Common_GetColor=o_outvalueofColor
	 ELSE
	 	Common_Report "The Window or Table doesn't exist|Common_GetColor|Fail"
     END IF
 	EnableRecoveryScenario
	On error goto 0
End Function




'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'! Function To extract a zip file from a location to given folder Location
'!
'!	Example Usage:Common_UnzipFile "C:\CWDdownloads\CDW_file.zip","C:\CWDdownloads\Test"
'!
'! 	@Param param1 - zip file full path, param2 - destination folder path
'!	@Return None
'!	@Author  Rupawathi.BOKKA@amadeus.com
'!	@Date  Created: 19Mar18 | Last Updated:
'! 	@See 
Public Function Common_UnzipFile(ByVal ZipFile,ByVal ExtractTo) 
	Dim fso,objShell,FilesInZip
	Set fso = CreateObject("Scripting.FileSystemObject")
	 If NOT fso.FolderExists(ExtractTo) Then
	    fso.CreateFolder(ExtractTo)
	 End If
	
	'Extract the contants of the zip file.
	set objShell = CreateObject("Shell.Application")
	DisableRecoveryScenario
	On error resume next
	err.clear
	set FilesInZip=objShell.NameSpace(ZipFile).items
	objShell.NameSpace(ExtractTo).CopyHere(FilesInZip)
	Set fso = Nothing
	Set objShell = Nothing
	If err.number <> 0 Then


	    Common_Report "Error while unziping! please check the input/zip file|Common_UnzipFile|Fail"

	ELSE
		Common_Report "File unzip successful|Common_UnzipFile|Pass"	
	End If
	EnableRecoveryScenario
	On error goto 0
End Function


'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'! Function To upload the any file to particular run in ALM
'!
'!	Example Usage:Common_AttachToCurrentRun or Common_AttachToCurrentRun()
'!
'! 	@Param None
'!	@Return Provides the filename with Date&stamp, there are any errors it will return "" (null)
'!	@Author jayadev.budiboyina@amadeus.com, ravi.kumar@amadeus.com
'!	@Date  Created: 19Mar18 | Last Updated: 23Mar18
'! 	@See 
Public Function Common_ExtractCMJFElogs()
	Dim o_objFSO,o_ObjFolder,i_fileSrch,s_LogFileNm,Counter,WshShell,i_counter
	Common_ExtractCMJFElogs = ""
	Set WshShell = CreateObject("WScript.Shell")
	If JavaWindow("wndCM").JavaMenu("mnuHelp").Exist(5)  Then
		
		Counter=0
		'Delete the existing logs
	    Common_FolderCleanUp(s_JFELogsFolderPath)
		'Create a folder if it's not there
	    Common_FolderCreate s_JFELogsFolderPath
		'Saving the JFE logs from EdiFact tab in JFE
		Do While JavaWindow("wndCM").GetROProperty("enabled")=0
			Common_CaptureScreenshot "Pop-up Screenshot"&Counter,1
			
			WshShell.SendKeys "{ESC}"
			Counter=Counter+1
			if Counter>=10 then
'				Common_AttachToCurrentRun "C:\CMLogs\alteaDCCM1_CHOOSE_0.log"
'				Common_AttachToCurrentRun "C:\CMLogs\alteaDCCM1_CHOOSE_1.log"
				Common_KillGUIApp "1A-Launcher.exe"
				Reporter.ReportEvent micfail, "Common_ExtractCMJFElogs", "Unwanted error has Occurred .Closing the Application"
				Exit Function
			end if
			
		Loop 
		
		JavaWindow("wndCM").JavaMenu("mnuHelp").Highlight
		JavaWindow("wndCM").JavaMenu("mnuHelp").Select
		JavaWindow("wndCM").JavaMenu("mnuHelp").JavaMenu("mnuViewLog").Select
		
		JavaWindow("wndCM").JavaDialog("dlgLogViewer").JavaTab("tabFind").Select "Edifact"
	
     
       JavaWindow("wndCM").JavaDialog("dlgLogViewer").Activate
        For  i_counter= 1 To 6   ' Set up counting loop. 
          CreateObject("WScript.Shell").SendKeys "{PGDN 14}" ' Send keystrokes down 
         next
         wait 3
         Common_CaptureScreenshot "Capture screenshots for logs",0  
       
		'JavaWindow("wndCM").JavaDialog("dlgLogViewer").JavaButton("btnSave").Click
	
'		If JavaWindow("wndCM").JavaDialog("dlgLogViewer").JavaDialog("dlgSave").JavaEdit("txtFileName").Exist(60) Then
'			s_LogFileNm = JavaWindow("wndCM").JavaDialog("dlgLogViewer").JavaDialog("dlgSave").JavaEdit("txtFileName").GetROProperty("text")
'		    JavaWindow("wndCM").JavaDialog("dlgLogViewer").JavaDialog("dlgSave").JavaEdit("txtFileName").Set s_JFELogsFolderPath&s_LogFileNm
'		    JavaWindow("wndCM").JavaDialog("dlgLogViewer").JavaDialog("dlgSave").JavaButton("btnSave").Click
'		End If
	
		JavaWindow("wndCM").JavaDialog("dlgLogViewer").JavaButton("btnExit").Click
		Set WshShell = Nothing
		'check the saved JFE logs
'		Set o_objFSO = CreateObject("Scripting.FileSystemObject")
'		Set o_ObjFolder = o_objFSO.GetFolder(s_JFELogsFolderPath)
'		
'		For i_fileSrch = 1 To 60 Step 1
'			If o_objFSO.FileExists(s_JFELogsFolderPath&s_LogFileNm) Then
'				Common_ExtractCMJFElogs=s_LogFileNm
'				Exit function
'			End If
'		Next
'		
		Common_Report "Function exportJFElogs: Log not Found||Warning"
    
    Else
    	
    	Common_Report "Function exportJFElogs: CM JFE Help menu not Found||Warning"
    	
    End If
    
End Function



'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'! Function To upload the any file to particular run in ALM
'!
'!	Example Usage:Common_AttachToCurrentRun or Common_AttachToCurrentRun()
'!
'! 	@Param strFileName file full path with file name and extension
'!	@Return None
'!	@Author  Rupawathi.BOKKA@amadeus.com
'!	@Date  Created: 20Mar18 | Last Updated:
'! 	@See 
Public Function Common_AttachToCurrentRun(byval strFileName)
 	Dim o_CurrentRun, o_Attachment,o_attlist,o_att
 	If QCUtil.IsConnected Then
 		
 		DisableRecoveryScenario
		On error resume next
 		
 		Set o_CurrentRun =QCUtil.CurrentRun
   		
   		If Err.Number <> 0 Then
    		Common_Report "UnExpected error|Common_AttachToCurrentRun|Warning"
    		EnableRecoveryScenario
			On error goto 0 
    		Exit function
   		Else


   			Set o_attachment = o_CurrentRun.Attachments
    		Set o_attlist = o_attachment.NewList("")
			Set o_att = o_attachment.AddItem(Null) 
			o_att.FileName = strFileName 
			o_att.Type = 1
			o_att.Post
			o_att.Save False
			If Err.Number <> 0 Then
    			Common_Report "UnExpected error during save to the run|Common_AttachToCurrentRun|Warning"
    			EnableRecoveryScenario
				On error goto 0
    			Exit function
    		End If
    		''already defined**rupa
    		EnableRecoveryScenario
			On error goto 0
			Common_Report "Attachment Saved to QC run data|Common_AttachToCurrentRun|Passed"
		End If
	Else 
		Common_Report "No ALM connection|Common_AttachToCurrentRun|Warning"
	End If
    EnableRecoveryScenario
	On error goto 0
End Function

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function to extract the logs from CM JFE and upload that log file to particular run in ALM
'!
'!	Example Usage:Common_CMJFELogAttachToRun or Common_CMJFELogAttachToRun()
'!
'! 	@Param None
'!	@Return None
'!	@Author  Rupawathi.BOKKA@amadeus.com
'!	@Date  Created: 20Mar18 | Last Updated:
'! 	@See 
Public Function Common_CMJFELogAttachToRun()
	Dim s_fileName,s_fileNameWithPath
	s_fileName=Common_ExtractCMJFElogs()
	If s_fileName="" Then
		Common_Report "File name is not fetched from function Common_ExtractCMJFElogs||Warning"
	Else
		s_fileNameWithPath=s_LocalResourceFolder&"\Logs\"&s_fileName
		Common_AttachToCurrentRun s_fileNameWithPath
	End If
End Function

 
'----------------------------------------------------------------------------------------------------------------------------------------------------
'	# Public Function Common_Sync()
'
' 		~ This function will retry operation used in any action. Caution: This function is called automatically by UFT if we register any actions like click and object type
'		~ Usage	 : RegisterUserFunc "JavaButton", "Click", "Common_Sync"
' 		~ Input  : o_Object (Gui object data), s_Attribute
'		~ Output : None
'
'
'	@author		:   Sanjeeth Nayak
'	@copyright	:  	2018 Amadeus Services Limited. All rights reserved.
'	@Author	:   sanjeeth.nayak@amadeus.com
'	@Date  Created: 13Dec2017 | Last Updated: 29Dec2017
'----------------------------------------------------------------------------------------------------------------------------------------------------

'To Do: Done only for Click and set edit box. Needs extention for all other sync

Public Function Common_Sync(byVal o_GUIObject,byVal s_Attribute)

	Dim d_NewTime
	Dim b_ErrorFlag
	Dim a_GUIAttribute
	Dim s_Action
	Dim s_Exec
	
	d_NewTime = dateadd("s",i_MaxObjSynTime,Now)
	b_ErrorFlag = True
	
	a_GUIAttribute = split(o_GUIObject.ToString()," ")

	Select Case ucase(a_GUIAttribute(ubound(a_GUIAttribute)))
		Case "BUTTON"
			If cstr(s_Attribute) = "-9999" Then  						'when there is no second param we get -9999. Just Click needs to be peerformed
				s_Attribute = ""
				s_Action = "Click"  
			else
				s_Action = "Click "& s_Attribute   						'TODO: Test when there is actually some attributes are passed like x,y coordinates
			End If
		Case "OBJECT"
			If mid(Ucase(a_GUIAttribute(0)),1,3) = "INS" Then
				s_Action = "Click"
			End If
		Case "BOX"
			s_Action = "Set " &  chr(34) & cstr(s_Attribute) & chr(34) 
	End Select
	s_Exec = "o_GUIObject." & s_Action 
	
	'Disable UFT Error Handler
	DisableRecoveryScenario
	On error resume next
	err.clear
	'Wait till action such as click,edit has returned no error
	Do	
		execute s_Exec
		'Check for Error numbers
		If err.number = 0 Then
			b_ErrorFlag = False
			If a_GUIAttribute(0) = "InsightObject" Then 				'Specific to insight obj (wait after click)
				wait(2)
			End If
			Exit Do
		Else
			wait 5
		End If
	Loop while d_NewTime > Now
	EnableRecoveryScenario
	On error goto 0
	
	'In Case of Failure, Initiate clean up
	If b_ErrorFlag <> False Then
		reporter.ReportEvent micFail, s_Action ,o_GUIObject.ToString() & "Object issue!!! Tried for " & i_MaxObjSynTime & "s"
		'ToDo: Discuss regarding clean up activities
'		------------------------
		
		
'		------------------------

		ExitActionIteration
	End If
	
End Function 

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function to download and load the recovery Scenarios needed for CM apps in to the script
'!
'!	Example Usage:Common_CMAddRecoveryScenerio or Common_CMAddRecoveryScenerio()
'!
'! 	@Param None
'!	@Return None, Adds recovery scenario to the action
'!	@Author  Ravi.kumar@amadeus.com
'!	@Date  Created: 24Mar18 | Last Updated:
'! 	@See 
public Function Common_CMAddRecoveryScenerio()
		
	Dim o_qtApp,o_qtTestRecovery,s_RecoveryFolder,i_Index
	s_RecoveryFolder="C:\TESTRESOURCES\Recovery"
	'Environment variables RSEnabled and Pop_upHandler are default values required by Recovery Scenarios
	Environment.Value("RSEnabled")= true

	Common_FolderCreate s_RecoveryFolder
	
	Set o_qtApp = CreateObject("QuickTest.Application")
	' Return the Recovery object for the current test
	Set o_qtTestRecovery = o_qtApp.Test.Settings.Recovery
	
	Common_DownloadTestResource "CMJFELaunchRetry.qrs",s_RecoveryFolder
	Common_DownloadTestResource "ApplicationCrash.qrs",s_RecoveryFolder
	Common_DownloadTestResource "MessagerPopup.qrs",s_RecoveryFolder
	Common_DownloadTestResource "GlobalError.qrs",s_RecoveryFolder
	Common_DownloadTestResource "ObjectNotFound.qrs",s_RecoveryFolder
	Common_DownloadTestResource "ObjectNotFound.qrs",s_RecoveryFolder
	Common_DownloadTestResource "MenuNotFound.qrs",s_RecoveryFolder
	' Below is to prioritize the Recovery Scenario.
	
	o_qtTestRecovery.Add s_RecoveryFolder&"\CMJFELaunchRetry.qrs", "JFELaunchRetry",1
	o_qtTestRecovery.Add s_RecoveryFolder&"\MessagerPopup.qrs", "MessagerPopup",2
	o_qtTestRecovery.Add s_RecoveryFolder&"\ApplicationCrash.qrs", "ApplicationCrash",3
	o_qtTestRecovery.Add s_RecoveryFolder&"\GlobalError.qrs", "GlobalError",4
	o_qtTestRecovery.Add s_RecoveryFolder&"\ObjectNotFound.qrs", "ObjectNotFound",5
	o_qtTestRecovery.Add s_RecoveryFolder&"\MenuNotFound.qrs", "MenuNotFound",6
	' Iterate the scenarios
	For i_Index = 1 To o_qtTestRecovery.Count
		' Enable each Recovery Scenario (Note: the 'Item' property is default and can be omitted)
		o_qtTestRecovery.Item(i_Index).Enabled = True
	Next
	' Enable the recovery mechanism (with default, on errors, setting)
	o_qtTestRecovery.Enabled = true
	
	'Recovery mechanism is set to be activated only after errors
	o_qtTestRecovery.SetActivationMode "OnError"
	
	Set o_qtApp = Nothing ' Release the Application object
	Set o_qtTestRecovery = Nothing ' Release the Recovery object
	
End Function

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function to Enable recovery scenario
'!
'!	Example Usage:EnableRecoveryScenario or EnableRecoveryScenario()
'!
'! 	@Param None
'!	@Return None
'!	@Author sanjeeth.nayak@amadeus.com
'!	@Date  Created: 02May18 | Last Updated:
'! 	@See 
Public Function EnableRecoveryScenario()
	On error goto 0
	Environment.Value("RSEnabled")= true
End Function

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function to Disable recovery scenario
'!
'!	Example Usage:DisableRecoveryScenario or DisableRecoveryScenario()
'!
'! 	@Param None
'!	@Return None
'!	@Author sanjeeth.nayak@amadeus.com
'!	@Date  Created: 02May18 | Last Updated:
'! 	@See  
Public Function DisableRecoveryScenario()
	Environment.Value("RSEnabled")= False
End Function


'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function to Enable reporting 
'!
'!	Example Usage:EnableReporting or EnableReporting()
'!
'! 	@Param None
'!	@Return None
'!	@Author sanjeeth.nayak@amadeus.com
'!	@Date  Created: 02May18 | Last Updated:
'! 	@See 
Public Function EnableReporting()
	Reporter.Filter = rfEnableAll
End Function



'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function to Enable reporting 
'!
'!	Example Usage:EnableReporting or EnableReporting()
'!
'! 	@Param None
'!	@Return None
'!	@Author sanjeeth.nayak@amadeus.com
'!	@Date  Created: 02May18 | Last Updated:
'! 	@See 
Public Function DisableReporting()
	Reporter.Filter = rfDisableAll
End Function


'!TODO: It is in design phase. Test and confirm
Public Function LoadLocalVDDP()
	b_RunPON = false
	Common_ImportData "LOCAL",s_PONFolderPath & "\VDDP.xls",1,"PONData"
	Common_DynamicEnvVarCreate "PONData", "PON"
End Function


'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function to Check the Existence of required breadcrumb in Kiosk.
'!
'!	Example Usage:Common_KioskScreenCheck "Passport"
'!
'! 	@Param s_ScreenName - Screen name like "Passport"
'!	@Return True/False based on validation
'!	@Author ravi.kumar@amadeus.com
'!	@Date  Created: 02May18 | Last Updated:
'! 	@See  TODO: documentation
Public Function Common_KioskScreenCheck(byVal s_ScreenName)
	Dim a_ScreenName,d_MaxWait,s_ScreenNameTemp,s_BreadCrumpVal, i_WaitTimeReporting,i_counter
	s_ScreenNameTemp = s_ScreenName
	Common_KioskScreenCheck = false
	a_ScreenName = Split(s_ScreenNameTemp,"|")
	
	If ubound(a_ScreenName)> 0 Then
		If isnumeric(a_ScreenName(1)) Then
			d_MaxWait = DateAdd("s", int(a_ScreenName(1)) , Now)
			s_ScreenNameTemp = a_ScreenName(0)
			i_WaitTimeReporting = int(a_ScreenName(1))
		Else 
			Common_Report "Wait time must be an integer!|Common_KioskScreenCheck|Fail"
			Exittest 'Hard fail
		End If
	else
		d_MaxWait = DateAdd("s",60, Now)
		i_WaitTimeReporting = 60
	End If
	
	DisableRecoveryScenario
	On error resume next
	Err.clear
	
	i_counter=0
	Do
		s_BreadCrumpVal=Browser("brwKioskCheckIn").Page("pgeKIOSK").WebElement("wbeBreadcrumb").GetROProperty ("innertext")	
		if Instr(s_BreadCrumpVal,s_ScreenNameTemp)>0 then
			Common_KioskScreenCheck = true
			Exit do		
		End if
		wait 1
	Loop While Now < d_MaxWait
	EnableRecoveryScenario
	On error goto 0
	
	If Common_KioskScreenCheck Then
		Common_Report "Screen (" & s_ScreenNameTemp & ") Found!" & "|Common_KioskScreenCheck|Pass"
	Else
		Common_Report "Screen (" & s_ScreenNameTemp & ") Not Found! Even after waiting for " & i_WaitTimeReporting & " seconds|Common_KioskScreenCheck|Fail"
		Common_KioskScreenCheck = False
	End If
	EnableRecoveryScenario
	On error goto 0	
End Function



'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'! Function to Run TTS play scripts (Currently PDT for RES command configuration is supported)
'!
'! PreRequesite : 
'!
'!				1. TTS is installed in the machine where the UFT script is running
'!
'!				2. Play file has to be error free and tested manually from TTS
'!
'!				3. TTS play file (FORMAT: TTSInjector_ANYFILENAME.play) is attached to a test either test lab or test plan (lab attachment will be looked first)
'!
'!	Example Usage: Common_CallTTSPlay or Common_CallTTSPlay()
'!
'! 	@Param None
'!	@Return Creates Environment variables with prefix TTS_(Eg., Environment("TTS_PNR")) and a data sheet in UFT by the name TTS will be created.All the variables defined in play file in initialize section. Also, parsed data such as PNR, ETKT, EMD, BOOKINGREF values will be automatically be created.
'!	@Author sanjeeth.nayak@amadeus.com
'!	@Date Created:21st May 2018  | Last Updated: 14th Jan 2019
'! 	@See  TODO: documentation
Public function Common_CallTTSPlay()
'Set Function return as failed	
	Common_CallTTSPlay = false
	
	s_TTSFolderPath = "C:\TESTRESOURCES\DirectTTSInjector\"	
	s_TTSRegExFile = "RegExDict.txt"
	If Common_EnvVarReplace("e_SpecificTTS")="e_SpecificTTS" Then 
		s_InjectorFile=	"TTSInjector" 
		s_TTSBatFile = "DirectTTSInjector.bat"
		s_TTSPyFile = "TTSConfig.py"
		s_TTSLogFile = "DirectTTSInjector.play.log"
	else
		s_InjectorFile=	Environment.Value("e_SpecificTTS")
		s_TTSBatFile = "DirectTTSInjector"&Split(s_InjectorFile,"TTSInjector")(1)&".bat"
		s_TTSPyFile = "TTSConfig"&Split(s_InjectorFile,"TTSInjector")(1)&".py"
		s_TTSLogFile = "Direct"&s_InjectorFile&".play.log"
		s_InjectorFile=s_InjectorFile&".play"
	End If
	
	'Create sheet to store values returned from TTS
	DataTable.AddSheet "TTSParams"
	
	'disabling the option to clean up. Not sure why this is used. As we need clean folder to begin no checks will be perforemd for folder creation and clearing
	'If Common_EnvVarReplace("e_CleanUp")="e_CleanUp" Then             
		Common_FolderCreate s_TTSFolderPath
	    Common_FolderCleanUp s_TTSFolderPath
	    Environment.Value("e_CleanUp")="0"
	'End If
	'Downlaod TTScyberark lib to tts installation folder
	Common_DownloadTestResource "CyberArk_PS.py","D:\Devsup\TTServer\lib"
	Common_DownloadTestResource "CyberArk_PS.py","C:\TTServerAAF\lib"
	'end of download
	If Common_EnvVarReplace("e_SpecificTTS")="e_SpecificTTS" Then  
		Common_DownloadWithPreferance s_TTSRegExFile,s_TTSFolderPath
		Common_DownloadWithPreferance s_TTSBatFile,s_TTSFolderPath
	else
		Common_DownloadWithPreferance s_TTSRegExFile,s_TTSFolderPath
		s_extention=Split(Split(s_TTSBatFile,"DirectTTSInjector")(1),".")(0) ' Create Specific BAT File
		Set objFSO = CreateObject("Scripting.FileSystemObject")
		Set objFile = objFSO.CreateTextFile(s_TTSFolderPath&s_TTSBatFile)
		objFile.WriteLine "@echo on"&vbCrLf&"set TTSERVER_HOME=""D:\Devsup\TTServer\TTServer"""&vbCrLf&"set TESTPATH=""C:\TESTRESOURCES\DirectTTSInjector\TTSConfig"&s_extention&".py"""&vbCrLf&"echo +----------------------------------------------------------------------+"&vbCrLf&"echo + input"&vbCrLf&"echo +----------------------------------------------------------------------+"&vbCrLf&"call %TTSERVER_HOME% -s %TESTPATH%"
		Set objFile = nothing
		Set objFSO = nothing
	End if
	
	
	if not Common_DownloadAttachment("LAB-TEST","TTSConfig.py",s_TTSFolderPath) then
		if not Common_DownloadAttachment("PLAN-TEST","TTSConfig.py",s_TTSFolderPath) then
			if not Common_DownloadTestResource("TTSConfig.py",s_TTSFolderPath) then
				Reporter.ReportEvent micFail, "Common_CallTTSPlay", "TTSConfig File attachment not found for the test case either in test lab, test plan or resources"
				ExitTest
			End if
		End if
	End If
	
	If Common_EnvVarReplace("e_SpecificTTS")<>"e_SpecificTTS" Then 
		Set o_Fso = CreateObject("Scripting.FileSystemObject")
		o_Fso.MoveFile "C:\TESTRESOURCES\DirectTTSInjector\TTSConfig.py", "C:\TESTRESOURCES\DirectTTSInjector\"&s_TTSPyFile  
		s_Filepath="C:\TESTRESOURCES\DirectTTSInjector\"&s_TTSPyFile
		s_Text = Common_ReadFileContent("C:\TESTRESOURCES\DirectTTSInjector\"&s_TTSPyFile)
		s_Text=Replace(s_Text,"TTSINJECTOR.play",s_InjectorFile )
		s_Text=Replace(s_Text,"TTSInjector.play",s_InjectorFile )
		Set o_File = o_Fso.OpenTextFile(s_Filepath, 2)
		o_File.Write s_Text
		Set o_File = Nothing
	End if
	
	if not Common_DownloadAttachment("LAB-TEST",s_InjectorFile,s_TTSFolderPath) then
		if not Common_DownloadAttachment("PLAN-TEST",s_InjectorFile,s_TTSFolderPath) then
			Reporter.ReportEvent micFail, "Common_CallTTSPlay", "TTSInjector File attachment not found for the test case either in test lab and test plan"
			ExitTest
		End if
	End If
	
	
	If Common_EnvVarReplace("e_TTSFileModify")<>"e_TTSFileModify"  Then 
		If (Environment.Value("e_TTSFileModify")&".play" = s_InjectorFile) or (Environment.Value("e_TTSFileModify")&".play" = s_InjectorFile & ".play") Then
			If instr(ucase(s_InjectorFile),".PLAY") = 0 Then
				
				s_InjectorFile = s_InjectorFile & ".play"
			End If
			
			s_Filepath="C:\TESTRESOURCES\DirectTTSInjector\"&s_InjectorFile 
			
			
		
			
			s_Text = Common_ReadFileContent(s_Filepath)
			Set o_re = New RegExp
		    With o_re
		        .Pattern    = "(~.*?~)"
		        .IgnoreCase = False
		        .Global     = True
		    End With
			Set o_Matches = o_re.Execute(s_Text)
			For Each o_Match In o_Matches
				s_Text=Replace(s_Text,o_Match,Common_EnvVarReplace(Replace(o_Match,"~","")))
			Next
			Set o_FSO = CreateObject("Scripting.FileSystemObject")
			Set objFile = o_FSO.OpenTextFile(s_Filepath, 2)
			objFile.Write s_Text
			Set objFile = Nothing
		End If	
	End If
	
	Common_RunBatch s_TTSFolderPath & s_TTSBatFile
	
	if Common_FileExistance(s_TTSBatFile & s_TTSLogFile) then
		Reporter.ReportEvent micFail,"Could not find " & s_TTSLogFile & " In " & s_TTSFolderPath,"Common_FileExistance"
		ExitTest
	End if
	
	s_TTSLog = Replace(Replace(replace(Common_ReadFileContent(s_TTSFolderPath & s_TTSLogFile),"="," = "),"="," ="),"=","= ")
	s_TTSParseRegEx = Common_ReadFileContent(s_TTSFolderPath & s_TTSRegExFile)
	
	a_TTSParseRegEx = split(s_TTSParseRegEx, "######")
	For i_Iterator = 0 To ubound(a_TTSParseRegEx) Step 1
		a_RegExItems = split(a_TTSParseRegEx(i_Iterator),"-->")
		If ubound(a_RegExItems) = 1 Then
			s_EnVarName = a_RegExItems(0)
			s_EnvVarRegex = a_RegExItems(1)
			Set o_PostRegEx = Common_RegExecution(s_TTSLog,s_EnvVarRegex,true)
			
			For i_EnvIterator = 1 To o_PostRegEx.count Step 1
				s_Value = o_PostRegEx(i_EnvIterator-1).SubMatches(0)
				
				If not (ucase(s_EnVarName) = "ALLVAR") Then
					If not (instr(s_AllValue,s_Value)>0) Then
						DataTable.GetSheet("TTSParams").AddParameter s_EnVarName,s_Value
						s_AllValue = s_AllValue & s_Value
					End If

				Else
					DataTable.GetSheet("TTSParams").AddParameter mid(s_Value,1,instr(s_Value,"=")-1),mid(s_Value,instr(s_Value,"="))
				End If
			Next		
		Else
			Common_CallTTSPlay = false
			Reporter.ReportEvent micFail,"Issue with "& s_TTSRegExFile,s_TTSRegExFile &" parsing"
		End If
	Next
	Common_DynamicEnvVarCreate "TTSParams","TTS"
	reporter.ReportEvent micPass,"Play file successfully run and environment variables have been created","Common_CallTTSPlay"
	Common_CallTTSPlay = true
	Environment.Value("e_TTSFileModify")=nothing
	Environment.Value("e_SpecificTTS")=nothing
End Function

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'! Function to execute regular expression and returning matched values in a dictionary array. 
'!@Param s_MainString - Main string with which the string to be compared, s_RegExString - Regular expression string (like "[a-z][0-9].*"),s_ReturnType - True if we need to get all the matches, False if we need first match to be extracted
'!	Example Usage: 	

'!     Var1 = "CUSTOMER PAX AND BAG DETAILS FOR WEIGHT AND BALANCE             FLIGHT INFO  744       REG   14P   50J  315Y                PW  6X6047   21AUG  GOV STD1830           BOARD 1800          AO               *** ACCEPTANCE NOT FINALISED ***                   DEST    CABIN    A    M    F    C    I   HOLD BAGS HAND BAGS    CNS                                                              Transit P      0    0    0    0    0     0@0         0                  J      0    0   0    0    0     0@0         0                  Y      0    0    0    0    0    0@0         0                                  RUSH BAGS  -     0@0                                           CREW BAGS  -     0@0                   Joining  P      0    0    0    0    0     0@0         0                  J      0   0    0    0    0     0@0         0                  Y      0    00    0    0   0     0@0         0                                  RUSH BAGS  -     0@0                                           CREW BAGS  -     0@0                 ----------------------------------------------------------------TOTAL(CNS)      0    0    0    0    0     0@0         0        ----------------------------------------------------------------GRAND TOTAL      0    0    0    0    0     0@0         0        (EX GOV)                                                       TOTAL PASSENGERS 0 PLUS INFANTS 0                               ----------------------------------------------------------------AREA             A    M   F    C    I                 ROWS     ----------------------------------------------------------------TOTAL            0    0    0    0    0                        ----------------------------------------------------------------"

'!      set var2 =  Common_RegExecution(Var1,"Joi[\s\S]*?Y[\s]*[\d|\d\d][\s]*(\d\d|\d)", true)
'!      
'! 	'How to extract the found string?
'! 
'! 		foundstring1 = var2.item(0)       '(To get full match, First occurance)
'! 		foundstring2 = var2.item(1)		'(To get full match, Second occurance and so on)
'! 
'! 	'How to extract the Sub Match string?
'! 
'! 		submatchstring1 = var2.item(0).Submatches(0)       '(To get first sub match in the First occurance)
'! 		submatchstring1 = var2.item(0).Submatches(1)       '(To get second sub match in the First occurance)
'! 		submatchstring1 = var2.item(1).Submatches(0)       '(To get first sub match in the Second occurance)
'! 		submatchstring1 = var2.item(1).Submatches(1)       '(To get Second sub match in the Second occurance)
'! 
'! 
'! 	'How to extract the count of matches?
'! 
'! 		MatchCount = var2.Count()
'! 
'! 	'How to extract the count of sub matches within a match?
'! 
'! 		MatchCount = var2.item(0).Count()    ' to get number of submatches found in the item 1
'!
'! 	
'!	@Return File content as a string. If any error while reading content it will reported and Boolean value False will be returned
'!	@Author sanjeeth.nayak@amadeus.com
'!	@Date  Created:21st May 2018  | Last Updated: 
'! 	@See
Public Function Common_RegExecution(byval s_MainString,byval s_RegExString,byval s_ReturnType)
	Set o_RegEx = New RegExp
		With o_RegEx
			'Regular expression for search row (or condition for each cell value)
      		.Pattern  = s_RegExString
      		.IgnoreCase = True
      		'Return all the match
      		If s_ReturnType = true Then
      			.Global     = true
      		else
      			.Global     = false
      		End If      		
  		End With
		'Test method returns TRUE if a match is found
		 set Common_RegExecution = o_RegEx.execute(s_MainString)
End Function

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'! Function to read file content and return to a variable
'!
'!	Example Usage: 	S_ScriptVar = Common_ReadFileContent("C:\TESTRESOURCES\CMJFESync\ServerPath.txt")
'!
'! 	@Param s_FileFullPath - Need to pass path + filename with extention
'!	@Return File content as a string. If any error while reading content it will reported and Boolean value False will be returned
'!	@Author sanjeeth.nayak@amadeus.com
'!	@Date  Created:21st May 2018  | Last Updated: 
'! 	@See
Public Function Common_ReadFileContent(ByVal s_FileFullPath) 'Need to pass path+filename with extention
	'Read file CONTENT
	Set o_FSO = createobject("Scripting.FileSystemObject")
	DisableRecoveryScenario
	On Error Resume Next
	err.clear
	Set o_BatchFile = o_FSO.OpenTextFile(s_FileFullPath)
	If err.number <> 0 Then
		Reporter.ReportEvent micWarning, "Common_ReadFileContent", "Error in File Path: " & s_FileFullPath
		Common_ReadFIleContent = False
		On Error Goto 0
		EnableRecoveryScenario
		Exit Function
	Else
		Common_ReadFIleContent = o_BatchFile.ReadAll
		If err.number = 62 Then 'that means we have blank file
			Common_ReadFIleContent = ""
			Reporter.ReportEvent micDone,"Common_ReadFileContent","File Content is null"
		Else
			If err.number <> 0 Then
				Reporter.ReportEvent micWarning, "Common_ReadFileContent","Error while Reading data from " & s_FileFullPath
				Common_ReadFIleContent = False
			Else
				Reporter.ReportEvent micPass,"Common_ReadFileContent","File Content: " & Common_ReadFIleContent
			End If
		End If
	End If
	Set o_BatchFile = Nothing
	
	On Error Goto 0
    EnableRecoveryScenario
End Function

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'! Function that Inhibits the Regulatory through CM Jfe
'!
'!	Example Usage: 	Common_CMInhibitRegulatory "KOR"
'!
'!			   		Common_CMInhibitRegulatory "ALL"  -> For inhibiting all regulatory checks
'! 	@Param s_Regulation - Regulation name such as "KOR" or "USA" to specifically inhibit one regulation. To inhibit all the regulations, Use "ALL"
'!	@Return Marks Step as Pass or Fail and returns True or False based on the 
'!	@Author Ravi.kumarA@amadeus.com
'!	@Date  Created:21st May 2018  | Last Updated: 
'! 	@See
Public Function Common_CMInhibitRegulatory(ByVal s_Regulation)

	Dim s_Rows,Iterator,s_Message
	
	Common_CMInhibitRegulatory=False
	
	If Common_CMScreenCheck("Flight Information") then
		JavaWindow("wndCM").JavaButton("btnFlightUpdate").Click
		Common_CMScreenCheck("Flight Update")
		JavaWindow("wndCM").JavaButton("btnRegulatory").Click
		If JavaWindow("wndCM").JavaDialog("wndWarning").Exist(10) Then
			s_Message=JavaWindow("wndCM").JavaDialog("wndWarning").JavaStaticText("stsMessageOne").GetROProperty("attached text")
			If Instr(s_Message,"No regulatory programme")>0 Then
				Reporter.ReportEvent micPass,"Commom_InhibitRegulatory","No Regulatory Exist for this flight"
			Else
				Reporter.ReportEvent micWarning,"Commom_InhibitRegulatory","Some error Pop-up exist"
			End If
			JavaWindow("wndCM").JavaDialog("wndWarning").JavaButton("btnOK").Click	
			Exit Function
		End If

		Common_CMScreenCheck("Flight Regulatory Update")
		s_Rows=JavaWindow("wndCM").JavaTable("tblRegulatory").GetROProperty("rows")	
		
		Select Case ucase(s_Regulation)
			Case "ALL"
				For Iterator = 0 To s_Rows-1
					Common_GetTableValue "wndCM","tblRegulatory","Row("&Iterator&")","Inhibit|Inhibit_Val"
					If environment.Value("Inhibit_Val")="No" Then
						JavaWindow("wndCM").JavaTable("tblRegulatory").SelectRow Iterator
						JavaWindow("wndCM").JavaButton("btnUpdate").Click
						Common_CMMessageAreaCheck "changed to Inhibited Yes"
						Common_CMInhibitRegulatory=True
						Reporter.ReportEvent micPass,"Commom_InhibitRegulatory","Regulatory inhibited"
					End If
				Next
			Case Else
				Common_GetTableValue "wndCM","tblRegulatory","Regulation|"& ucase(s_Regulation),"Inhibit|Inhibit_Val"
				if environment.Value("Inhibit_Val")="No" then
					Common_SelectRow "wndCM","tblRegulatory","Regulation|"& ucase(s_Regulation)
					JavaWindow("wndCM").JavaButton("btnUpdate").Click
					Common_CMMessageAreaCheck "changed to Inhibited Yes"
					Common_CMInhibitRegulatory=True
					Reporter.ReportEvent micPass,"Commom_InhibitRegulatory","Regulatory"& s_Regulation & "inhibited"
					set s_Regulation=Nothing
				End if
		  End Select		
	
	Else
	 	Common_CaptureScreenshot "Current Screen is not a Flight Information screen",0
	End if
End Function


'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'! Function to Load TTS variables from a play log file (To be Used only during scripting and debugging)
'!
'! This function to be used only during scripting to avoid multiple PNR creation. Used to load the variables. (This function will not run TTS script but it will use already run log file for parsing the data and creationg env variables and TTS data sheet in to UFT)
'!
'! PreRequesite : Common_CallTTSPlay is run previously and TTS log file is present in C:\TESTRESOURCES\DirectTTSInjector\
'!
'!	Example Usage: Common_CallTTSPlay or Common_CallTTSPlay()
'!
'! 	@Param None
'!	@Return Creates Environment variables with prefix TTS_(Eg., Environment("TTS_PNR")) and a data sheet in UFT by the name TTS will be created.All the variables defined in play file in initialize section. Also, parsed data such as PNR, ETKT, EMD, BOOKINGREF values will be automatically be created.
'!	@Author sanjeeth.nayak@amadeus.com
'!	@Date Created:21st May 2018  | Last Updated: 
'! 	@See  TODO: documentation
Public function Common_LoadTTSParam()
	'Set Function return as failed	
	Common_LoadTTSParam = false
	
	s_TTSFolderPath = "C:\TESTRESOURCES\DirectTTSInjector\"	
	s_TTSBatFile = "DirectTTSInjector.bat"
	s_TTSPyFile = "DirectTTSInjector.py"
	s_TTSRegExFile = "RegExDict.txt"
	s_TTSLogFile = "DirectTTSInjector.play.log"
	'Create sheet to store values returned from TTS
	DataTable.AddSheet "TTSParams"
	
	'Common_FolderCreate s_TTSFolderPath
	
	'Common_FolderCleanUp s_TTSFolderPath
	
	'Common_DownloadTestResource s_TTSBatFile,s_TTSFolderPath
	'Common_DownloadTestResource s_TTSPyFile,s_TTSFolderPath
	'Common_DownloadTestResource s_TTSRegExFile,s_TTSFolderPath
	
'	if not Common_DownloadAttachment("LAB-TEST","TTSInjector",s_TTSFolderPath) then
'		if not Common_DownloadAttachment("PLAN-TEST","TTSInjector",s_TTSFolderPath) then
'			Reporter.ReportEvent micFail, "Common_CallPON", "TTSInjector File attachment not found for the test case either in test lab and test plan"
'			ExitTest
'		End if
'	End If
	
	'Common_RunBatch s_TTSFolderPath & s_TTSBatFile
	
	if Common_FileExistance(s_TTSBatFile & s_TTSLogFile) then
		Reporter.ReportEvent micFail,"Could not find " & s_TTSLogFile & " In " & s_TTSFolderPath,"Common_FileExistance"
		ExitTest
	End if
	
	s_TTSLog = Replace(Replace(replace(Common_ReadFileContent(s_TTSFolderPath & s_TTSLogFile),"="," = "),"="," ="),"=","= ")
	s_TTSParseRegEx = Common_ReadFileContent(s_TTSFolderPath & s_TTSRegExFile)
	
	a_TTSParseRegEx = split(s_TTSParseRegEx, "######")
	For i_Iterator = 0 To ubound(a_TTSParseRegEx) Step 1
		a_RegExItems = split(a_TTSParseRegEx(i_Iterator),"-->")
		If ubound(a_RegExItems) = 1 Then
			s_EnVarName = a_RegExItems(0)
			s_EnvVarRegex = a_RegExItems(1)
			Set o_PostRegEx = Common_RegExecution(s_TTSLog,s_EnvVarRegex,true)
			
			For i_EnvIterator = 1 To o_PostRegEx.count Step 1
				s_Value = o_PostRegEx(i_EnvIterator-1).SubMatches(0)
				
				If not (ucase(s_EnVarName) = "ALLVAR") Then
					If not (instr(s_AllValue,s_Value)>0) Then
						DataTable.GetSheet("TTSParams").AddParameter s_EnVarName,s_Value
						s_AllValue = s_AllValue & s_Value
					End If

				Else
					DataTable.GetSheet("TTSParams").AddParameter mid(s_Value,1,instr(s_Value,"=")-1),mid(s_Value,instr(s_Value,"="))
				End If
			Next		
		Else
			Reporter.ReportEvent micFail,"Issue with "& s_TTSRegExFile,s_TTSRegExFile &" parsing"
		End If
	Next
	Common_DynamicEnvVarCreate "TTSParams","TTS"
	reporter.ReportEvent micPass,"Play file successfully run and environment variables have been created","Common_CallTTSPlay"
	Common_LoadTTSParam = true
End Function

Public Function Common_GetTableText(byval s_window,byval s_tableName,byval s_search,byval s_colName)

	Common_GetTableText= Common_ValidateTableText(s_window,s_tableName,s_search,s_colName,"CALLEDFROM GETTABLETEXT FUNCTION")

End Function

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'! Function to validate if the given Text is there in  particular cell in a table
'!
'!	Example Usage: Common_ValidateTableText "wndCM","tblCPTable","ROW(1)","Info","BLND|VIP|CIP"
'! 	@Param WindCm,tableName,rowvalue,columnName,Text To be Validated separated by | 
'!	@Return Marks Step as Pass or Fail based on the validation
'!	@Author Ravi.kumarA@amadeus.com
'!	@Date Created: 07June2018 
'! 	@See
Public Function Common_ValidateTableText(byval s_window,byval s_tableName,byval s_search,byval s_colName,byval s_TextName)
	Dim l_rowNo,s_table,a_WindowSep,s_text_Rendered,l_colNo,a_TextName
	'Moving it to third level to get the icons.
	s_table=s_tableName+"-Info"
	Common_ValidateTableText = True
	If (JavaWindow(s_window).JavaObject(s_table).Exist) Then
		l_rowNo=Common_GetRowNo(s_window,s_tableName,s_search)
		l_colNo=Common_ColumnIndex(s_window,s_tableName,s_colName)
		If Instr(s_window,":")>0 Then
			a_WindowSep=Split(s_window,":")
			s_windowName=a_WindowSep(0)
			s_dialogName=a_WindowSep(1)
			'Get the row count
			DisableRecoveryScenario
			On error resume next
			Err.clear
			s_text_Rendered= JavaWindow(s_windowName).JavaDialog(s_dialogName).JavaObject(s_table).Object.getCellText(l_rowNo,l_colNo,",")
		Else
			DisableRecoveryScenario
			On error resume next
			Err.clear
			s_text_Rendered= JavaWindow(s_window).JavaObject(s_table).Object.getCellText(l_rowNo,l_colNo,",")
		End if
		
		If err.number <> 0 Then
			Common_Report "Invalid Input Parameter,Please check||Fail"
			Common_ValidateTableText = false



		End if
		EnableRecoveryScenario
		On error goto 0
		'Validation part
		If s_TextName = "CALLEDFROM GETTABLETEXT FUNCTION" Then
			Common_ValidateTableText = s_text_Rendered
			Exit function
		End If
		
		
		a_TextName=Split(s_TextName,"|")
		For i_TextIterator = 0 To ubound(a_TextName) Step 1
			b_TextFound = false
			s_CurrentText = a_TextName(i_TextIterator)
			If InStr(UCASE(s_text_Rendered),UCASE(mid(s_CurrentText,(instr(s_CurrentText,"~")+1)))) > 0  Then
				b_TextFound = true
			End if
			If (mid(s_CurrentText,1,1) = "~") and (b_TextFound = true) Then
				Common_Report "Negative Validation -(" & replace(s_CurrentText,"~","") &") String Exists" &vbcr&"Text rendered:"& s_text_Rendered &"|Common_ValidateTableText|Fail"
				Common_ValidateTableText=false
			ElseIf (mid(s_CurrentText,1,1) = "~") and (b_TextFound = false) Then	
				Common_Report "Negative Validation -(" & replace(s_CurrentText,"~","") &") String does not Exist" &vbcr&"Text rendered:"& s_text_Rendered &"|Common_ValidateTableText|Pass"
			ElseIf (b_TextFound = true) Then
				Common_Report "(" & s_CurrentText &") String Exists" &vbcr&"Text rendered:"& s_text_Rendered &"|Common_ValidateTableText|Pass"
			Else
				Common_Report "(" & s_CurrentText &") String does not exist" &vbcr&"Text rendered:"& s_text_Rendered &"|Common_ValidateTableText|Fail"
				Common_ValidateTableText=false
			End If
		Next
	
	Else
		Common_Report "The Window or Table doesn't exist" &vbcr&"Text rendered:"& s_text_Rendered &"|Common_ValidateTableText|Fail"
	End If
	EnableRecoveryScenario
	On error goto 0	
End Function



'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function to update the flight status. Like Acceptance status, Boarding Status,Disruption Status
'!
'!  Example Usage : Common_CM_FlightUpdate "Acceptance Status","OPEN"
'! 	@Param  s_TypeOfStatus - Type of Status we want to modify Eg., Acceptance Status/Disruption Status,s_Status - Desired Status
'!	@Return None
'!	@author	rupawathi.Bokka@amadeus.com
'!	@Date  Created: 13July2018 
'! 	@See
Public Function Common_CM_FlightUpdate(byVal s_TypeOfStatus,byVal s_Status)

	Common_CMScreenCheck("Flight Information")
	JavaWindow("wndCM").JavaButton("btnFlightUpdate").Click
	
	
	if Common_CMScreenCheck("Flight Update") then
		Select Case s_TypeOfStatus
			Case "Baggage Status"
				lstname="lstBaggageStatus"
				If not JavaWindow("wndCM").JavaList(lstname).Exist(10) Then
					Reporter.ReportEvent micWarning,"Baggae open JavaList","Change Baggage status drop down doesn't exists. This Flight doesn't require BAG status to be open"
					JavaWindow("wndCM").JavaButton("btnExit").Click
					Exit function
				End If
			Case "Acceptance Status"
				lstname="lstAcceptanceStatus"
			Case "Disruption Status"
				lstname="lstDisruptionStatus"
			Case "General Flight Status"
				lstname="lstGeneralFlightStatus"
			Case else
				Common_Report "Please Select the appropriate weblist|Common_CM_FlightUpdate|Fail"
		End select
		

			strSelected=JavaWindow("wndCM").JavaList(lstname).GetROProperty("value")
			if strSelected=Ucase(s_Status) THEN
				Common_Report "Skipping Flight Update as Flight Status (" & s_TypeOfStatus &") is already " & s_Status
				JavaWindow("wndCM").JavaButton("btnExit").Click
			else
				JavaWindow("wndCM").JavaList(lstname).Select Ucase(s_Status)
				JavaWindow("wndCM").JavaButton("btnUpdate").Click
				strSelectedN=JavaWindow("wndCM").JavaList(lstname).GetROProperty("value")
				If strSelectedN=Ucase(s_Status) Then
					Common_Report "The status is updated"
				Else
					Common_Report "The status is not updated"
				End If
			   
				Common_Report "The status is updated"
			End If 
	
	Else
		Common_Report "Unable to Update Flight Status as Flight Update screen did not appear|Common_CM_FlightUpdate|Fail"
	End If


End Function




'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function to compare two values based on condition such as Equal to, Substring, Greater/Less than etc
'!
'!Following condtions are allowed:
'!									=,<>,IN,NOTIN,<,>
'!  Example Usage : 
'!Positive tests
'!
'!Common_SimpleCompare "ABC","=","ABC"
'!
'!Common_SimpleCompare ABC,"=","32165468"
'!
'!Common_SimpleCompare "ABC","<>","ABc"
'!
'!Common_SimpleCompare "ABC"&"~Data fetched from CP Table~","NOTIN","ACc"&"~Data to be validated~"
'!
'!Common_SimpleCompare "ABC","IN","ABCc"
'!
'!Common_SimpleCompare 9879846546,">",111113
'!
'!Common_SimpleCompare "9879846546",">","111113"
'!
'!Common_SimpleCompare 987,"<",1113
'!
'!Negative tests
'!
'!Common_SimpleCompare "ABC","<>","ABC
'!
'!Common_SimpleCompare "ABC","=","ABc"
'!
'!Common_SimpleCompare "ABC","NOTIN","ABCc"
'!
'!Common_SimpleCompare 9879846546,"<",111113
'!
'!Common_SimpleCompare "9879846546","<","111113"
'!
'!-------------------------------------------------------------------------------------------------------
'! Parameter info can be specified between two ~ that needs to be Mentioned in UFT report (Optional)
'! Syntax: Common_SimpleCompare  Param1String &"~Info of Param 1~","IN",scriptvar &  Param2String &"~Info of Param 2~"
'! E.g, Common_SimpleCompare  pondata &"~Customer Name PNR~","IN",scriptvar &"~Data from CP Table~" 
'! Report:
'! Parameter 1 value: [ABC] is found in Parameter 2 value: [ABCc] As expected. 
'! Parameter 1 Info: Customer Name PNR
'! Parameter 2 Info: Data from CP Table
'!-------------------------------------------------------------------------------------------------------
'!Common_SimpleCompare ScriptVariable,"<",Environment("Environment")
'!'Common_SimpleCompare 987,">",1113
'! 	@Param  s_Param1 & s_Param2 input to be compared,  s_Condition is the condion for the validation
'!	@Return True - When comparison result is Passed, False -When comparison result is Failed
'!	@author	sanjeeth.nayak@amadeus.com
'! 	@See
Public Function Common_SimpleCompare(byVal s_Param1,byVal s_Condition, byVal s_Param2)
    Common_SimpleCompare = true   
    
    a_Param1 = Common_FetchVars(s_Param1)
    a_Param2 = Common_FetchVars(s_Param2)

	'Info Reporting string formation:
    If True Then
    	
    End If
    If a_Param1(1) <> "" Then
    	
    	s_Param1 = a_Param1(0)
    	s_Info1 = vbcr & "Parameter 1 Info:" & a_Param1(1)
    
    End If
    
    If a_Param2(1) <> "" Then

		s_Param2 = a_Param2(0)
    	s_Info2 =  vbcr & "Parameter 2 Info:" & a_Param2(1)    	
    	''If second parameter is string or with info change data type of first parameter to string type--- Done by Ashwini on 7/10/2019
    	s_Param1 = cstr(a_Param1(0))
    End If
    

    
    If instr("~=~<~>~NOTIN~<>~IN~","~" & ucase(s_Condition) & "~") > 0 Then
    	s_ScreenshotPath=s_ScreenshotFolderPath&"\" & Replace(Replace(cstr(Now())&".png","/","-"),":","-")
    	'Capture screenshot and store at Location "C:\TESTRESOURCES\Screenshot"
		Desktop.CaptureBitmap s_ScreenshotPath, True  	
    	
        Select Case ucase(s_Condition)
        	'Could have been done using eval but it makes the logic and function look complex. Todo: See if logic can be modified to reduce number of lines of code
            Case "IN"
    			If (s_Param1 = "") or (s_Param2 = "") Then
    				Reporter.ReportEvent micFail,"Common_SimpleCompare","Blank Parameter detected!!! : Parameter 1 value: [" & s_Param1 & "] Parameter 2 value: [" & s_Param2 & "]" & s_Info1 & s_Info2 , s_ScreenshotPath
    				Exit function
    			End If
                If Instr(s_Param2,s_Param1) > 0 Then
                	s_ReportString = "is found in Parameter 2 value:"
					Reporter.ReportEvent micPass,"Common_SimpleCompare","Parameter 1 value: [" & s_Param1 & "] "& s_ReportString &" [" & s_Param2 & "] As expected." & s_Info1 & s_Info2 , s_ScreenshotPath
                Else
                    Common_SimpleCompare = false
                	s_ReportString = "is not found in Parameter 2 value:"
                	Reporter.ReportEvent micFail,"Common_SimpleCompare","Parameter 1 value: [" & s_Param1 & "] "& s_ReportString &" [" & s_Param2 & "]" & s_Info1 & s_Info2, s_ScreenshotPath
                End If
            Case "NOTIN"
            	If (s_Param1 = "") or (s_Param2 = "")   Then
    				Reporter.ReportEvent micFail,"Common_SimpleCompare","Blank Parameter detected!!! : Parameter 1 value: [" & s_Param1 & "] Parameter 2 value: [" & s_Param2 & "]" & s_Info1 & s_Info2 , s_ScreenshotPath
    				Exit function
    			End If
                If Instr(s_Param2,s_Param1) = 0 Then
                	s_ReportString = "is not found in Parameter 2 value:"
					Reporter.ReportEvent micPass,"Common_SimpleCompare","Negative Testing: Parameter 1 value: [" & s_Param1 & "] "& s_ReportString &" [" & s_Param2 & "] As expected." & s_Info1 & s_Info2, s_ScreenshotPath					
                Else
                    Common_SimpleCompare = false
                	s_ReportString = "not to be in Parameter 2 value:"
					Reporter.ReportEvent micFail,"Common_SimpleCompare","Negative Testing: Expected Parameter 1 value: [" & s_Param1 & "] "& s_ReportString &" [" & s_Param2 & "]. But, String found." & s_Info1 & s_Info2, s_ScreenshotPath                	
                End If         
           	Case "="
            	If s_Param1 = s_Param2 Then
                    s_ReportString = "is equal to"
                    Reporter.ReportEvent micPass,"Common_SimpleCompare","Parameter 1 value:[" & s_Param1 & "] "& s_ReportString &" Parameter 2 value:[" & s_Param2 & "] As expected." & s_Info1 & s_Info2, s_ScreenshotPath
                Else
                    Common_SimpleCompare = false
                	s_ReportString = "to be equal to"
                	Reporter.ReportEvent micFail,"Common_SimpleCompare","Expected Parameter 1 value: [" & s_Param1 & "] "& s_ReportString &" Parameter 2 value: [" & s_Param2 & "]. But, data doens't match" & s_Info1 & s_Info2, s_ScreenshotPath
                End If
			Case "<>"
					s_Negetive = "Negative Testing:"
	            	If s_Param1 <> s_Param2 Then
	   					s_ReportString = "is not Equal to"
	   					Reporter.ReportEvent micPass,"Common_SimpleCompare","Negative Testing:- Parameter 1 value: [" & s_Param1 & "] "& s_ReportString &" Parameter 2 value:[" & s_Param2 & "] as expected." & s_Info1 & s_Info2 , s_ScreenshotPath
	                Else
	                    s_ReportString = "not to be equal to"
	                    Common_SimpleCompare = false
	                    Reporter.ReportEvent micFail,"Common_SimpleCompare","Negative Testing:- Expected value of Parameter 1 value: [" & s_Param1 & "] "& s_ReportString &" Parameter 2 value:[" & s_Param2 & "]. But, the data matched" & s_Info1 & s_Info2, s_ScreenshotPath
	                End If
	       	Case Else
                	If s_Condition = "<" or s_Condition = ">" Then
                    	If (isnumeric(s_Param1) and isnumeric(s_Param2)) Then
                    		execute "b_ResultFlag = " & s_Param1 & s_Condition & s_Param2
                    		s_ReportString = s_Condition 
                    	    If b_ResultFlag Then
	                	    	Common_SimpleCompare = false
	                	    	Reporter.ReportEvent micPass,"Common_SimpleCompare","Parameter 1 value:[" & s_Param1 & "] is "& s_ReportString &" than Parameter 2 value [" & s_Param2 & "]  As expected." & s_Info1 & s_Info2, s_ScreenshotPath
	                	    Else
	                	    	Reporter.ReportEvent micFail,"Common_SimpleCompare","Following Condition check Failed:- Parameter 1 value: [" & s_Param1 & "] "& s_ReportString &" Parameter 2 value: [" & s_Param2 & "]" & s_Info1 & s_Info2 , s_ScreenshotPath
                    	    End If
						Else
							reporter.ReportEvent micFail,"Common_SimpleCompare","Please check input parameters!. Either Parameter 1 value: [" & s_Param1 & "] or Parameter 2 value: [" & s_Param1 & "] or both Values are not Numeric" & s_Info1 & s_Info2, s_ScreenshotPath
                    	End If
                	End If
		End Select

    Else
   		Reporter.ReportEvent micFail, "Common_SimpleCompare", "Check the Second parameter. Supported Compare conditions are =(Exact match),<>(Not equal), IN (substring), < (Less than), >(Greater than)", s_ScreenshotPath
    End If
End Function





'TODO: Delete Commom_InhibitRegulatory 

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function to Inhibit the Regulatory through CM Jfe. Pass input as "ALL" if you need to inhibit all else pass only the the required one.
'!
'!	Example Usage: Commom_InhibitRegulatory "KOR" to inhibit KOR or Commom_InhibitRegulatory "ALL" for inhibiting all regulatory
'! 	@Param  App name. s_Regulation - Specific regulatory such as "USA". Set "ALL" when all regulations are to be inhibited
'!	@Return None
'!	@Author ravi.kumar@amadeus.com
'! 	@See 
'!	@Date Created: 7Jul2018 | Last Updated: 
Public Function Commom_InhibitRegulatory(ByVal s_Regulation)

	Dim s_Rows,Iterator,s_Message
	
	If Common_CMScreenCheck("Flight Information") then
		JavaWindow("wndCM").JavaButton("btnFlightUpdate").Click
		Common_CMScreenCheck("Flight Update")
		JavaWindow("wndCM").JavaButton("btnRegulatory").Click
		If JavaWindow("wndCM").JavaDialog("wndWarning").Exist(10) Then
			s_Message=JavaWindow("wndCM").JavaDialog("wndWarning").JavaStaticText("stsMessageOne").GetROProperty("attached text")
			If Instr(s_Message,"No regulatory programme")>0 Then
				Reporter.ReportEvent micPass,"Commom_InhibitRegulatory","No Regulatory Exist for this flight"
			Else
				Reporter.ReportEvent micWarning,"Commom_InhibitRegulatory","Some error Pop-up exist"
			End If
		JavaWindow("wndCM").JavaDialog("wndWarning").JavaButton("btnOK").Click	
		Exit Function
		End If

		Common_CMScreenCheck("Flight Regulatory Update")
		s_Rows=JavaWindow("wndCM").JavaTable("tblRegulatory").GetROProperty("rows")	
		
		Select Case ucase(s_Regulation)
			Case "ALL"
				For Iterator = 0 To s_Rows-1
					Common_GetTableValue "wndCM","tblRegulatory","Row("&Iterator&")","Inhibit|Inhibit_Val"
					If environment.Value("Inhibit_Val")="No" Then
						JavaWindow("wndCM").JavaTable("tblRegulatory").SelectRow Iterator
						wait 1
						JavaWindow("wndCM").JavaButton("btnUpdate").Click
						wait 1
						Common_CMMessageAreaCheck "changed to Inhibited Yes"
						Common_GetTableValue "wndCM","tblRegulatory","Row("&Iterator&")","Inhibit|Inhibit_FinalVal"
						Common_SimpleCompare environment.Value("Inhibit_FinalVal"),"=","Yes"
						Commom_InhibitRegulatory="Pass"
						Reporter.ReportEvent micPass,"Commom_InhibitRegulatory","Regulatory inhibited"
					End If
				Next
			Case Else
				Common_GetTableValue "wndCM","tblRegulatory","Regulation|"& ucase(s_Regulation),"Inhibit|Inhibit_Val"
				if environment.Value("Inhibit_Val")="No" then
					Common_SelectRow "wndCM","tblRegulatory","Regulation|"& ucase(s_Regulation)
					JavaWindow("wndCM").JavaButton("btnUpdate").Click
					Common_CMMessageAreaCheck "changed to Inhibited Yes"
					Common_GetTableValue "wndCM","tblRegulatory","Regulation|"& ucase(s_Regulation),"Inhibit|Inhibit_FinalVal"
					Common_SimpleCompare environment.Value("Inhibit_FinalVal"),"=","Yes"
					Commom_InhibitRegulatory="Pass"
					Reporter.ReportEvent micPass,"Commom_InhibitRegulatory","Regulatory"& s_Regulation & "inhibited"
				End if
		  End Select		
	
	Else
	 	Common_CaptureScreenshot "We are not in Flight Information screen ",0
	 	Commom_InhibitRegulatory="False"
	End if
End Function




'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function to launch Altea applications
'!
'!	Example Usage: Common_AppLaunch "FM" or Common_AppLaunch "CM" or Common_AppLaunch "ADMIN" or Common_AppLaunch "TECHGUI"
'! 	@Param  App name. Currently Supports only FM
'!	@Return None
'!	@Author sanjeeth.nayak@amadeus.com
'! 	@See 
'!	@Date Created: 7Jul2018 | Last Updated:24AUG2018 by ravi.kumar@amadeus.com
Public Function Common_AppLaunch (byval s_Param)
	'FM Params
	s_FMAppPath = "D:\Altea JFE\TST\FlightManagement"
	s_FMAppName =  "1A-Launcher.exe"
	s_FMProperty = " --conf.file=cfg/cfg.ini --workstationID=1A/C/LON/B/ASL/LCO//* --airlineCode=1A --airlineNumericID=001 --platform=NATIVE  --forceHandlingCarrier=AF --fmConfig=TST --win.env.resetList=deactivated"
	
	'Admin Params
	s_AdminAppPath = "C:\Program Files (x86)\Amadeus Applications\Altea Admin PDT"
	s_AdminAppName =  "1A-Launcher.exe"
	s_AdminProperty =" --conf.file=cfg/cfg.ini --win.env.resetList=deactivated"
	
	'TechGUI Params
	s_TechAppPath = "C:\Program Files (x86)\Amadeus Applications\Altea DCS - FM Flight Technical Data"
	s_TechAppName="FM_FLIGHT_TECHNICAL_DATA.jar"
	s_TechProperty = "--win.env.resetList=deactivated"
	
    'Inventory Params
	s_InvAppPath = "C:\Program Files (x86)\Altea Inventory TST"
	s_InvAppName= "AlteaPlanLauncher.exe"
	s_InvProperty = "--win.env.resetList=deactivated"
	
	DisableRecoveryScenario
	On Error Resume Next
	err.clear
	Select Case trim(ucase(s_Param))
		Case "FM"
			SystemUtil.Run s_FMAppName, s_FMProperty, s_FMAppPath
		Case "CM"
			'TODO: CM
		Case "ADMIN"
			SystemUtil.Run s_AdminAppName, s_AdminProperty, s_AdminAppPath
		Case "INVENTORY"
			Common_KillGUIApp "AlteaPlanLauncher.exe"  'Kill the process before the Inventory App launch
			wait 2
			SystemUtil.Run s_InvAppName, s_InvProperty,s_InvAppPath
			If JavaWindow("wndInventory").exist(10) Then
				'do nothing
			else
				SystemUtil.Run s_InvAppName, s_InvProperty,s_InvAppPath
			End If
		Case "TECHGUI"
			SystemUtil.Run s_TechAppName, s_TechProperty,s_TechAppPath
		Case Else
			
			Reporter.ReportEvent micFail, "Common_AppLaunch", "AppLaunch function is not yet supported for " & s_Param & " App"

			On Error Goto 0
			EnableRecoveryScenario
			Exit function
	End Select
	
	If Err.Number <> 0 then
		Reporter.ReportEvent micFail, "Common_AppLaunch", "There seems to be an issue while launching " & s_Param & " App"
	Else
		Reporter.ReportEvent micDone, "Common_AppLaunch", s_Param & " App Launch is successful"
	End If
	On Error Goto 0
	EnableRecoveryScenario
End Function




'TODO: Common_SpecificCallPON function is not yet completed
Public Function Common_SpecificCallPON(byval s_PONFileName)
	s_PONFileName = replace(replace(lcase(s_PONFileName),".xlsx",""),"xls","")
	'Run PON only when it is a first iteration
	If environment("TestIteration") = 1 Then
		
		'Reporter.ReportEvent micDone, "Common_CallPON", "Start of PON Utility run"
		
		'Initialise Common_CallPON to return False by default
		Common_CallPON = False
	
		'Ponstart file downloaded from Test Lab or Test Plan (First preference being Test Lab)
		if not Common_DownloadAttachment("LAB-TEST",s_PONFileName,s_PONFolderPath) then
			if not Common_DownloadAttachment("PLAN-TEST",s_PONFileName,s_PONFolderPath) then
				Reporter.ReportEvent micFail, "Common_CallPON", "PONStart File attachment not found for the test case either in test lab and test plan"
				ExitTest
			End if
		End If
		'Run CallPON.bat file
		Common_RunBatch "\\lonjfe3.lon.amadeus.net\windmill\windmillproject\TTServerAAF\psg\bin\callpon.bat "& replace(s_PONFolderPath,":","#") &" " & s_DefaultTestEnvFile & s_PONFileName &".xls > "& s_PONFolderPath &"\PONExecution.log"
		
		'Check if PON activity is complete
		If Common_FileExistance(s_PONFolderPath & "\PONComplete.txt") Then
			Reporter.ReportEvent micDone, "PON Run", "Success"
			'Importing VDDP in to PONData data sheet
			Common_ImportData "LOCAL",s_PONFolderPath & "\VDDP.xls",1,"PONData"
			Common_DynamicEnvVarCreate "PONData", "PON"
		'Else, Save the PON folder in to an Archive
		else	
			Common_FolderCreate s_PONFolderPath & "Archive"
			Common_FolderBackup s_PONFolderPath,s_PONFolderPath & "Archive"
			Reporter.ReportEvent micFail, "Common_CallPON", "Failed! Logs Archived here: " &  s_PONFolderPath & "Archive"
			ExitTest
		End IF
	End If
	
	'Reporter.ReportEvent micDone, "Common_CallPON", "End of PON Utility run"	
End Function 


'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function to Search for a Seat in inventory Seat map and fetch Seat characteristics
'!
'!	Example Usage: 	s_Scriptvar = Common_INVGetSeatCharacteristics(s_SeatInfo,s_SeatChar)                       			<- Template
'!					s_Scriptvar = Common_INVGetSeatCharacteristics("J:6B","Seat Occupation and Customer Characteristics") 	<- Search for J cabin Seatmap table and the seat 6B. Fetch Seat Occupation and Customer Characteristics
'!					s_Scriptvar = Common_INVGetSeatCharacteristics("Y:37K","Seatmap Statistics")							<- Search for Y cabin Seatmap table and the seat 37K. Fetch Seatmap Statistics
'!					s_Scriptvar = Common_INVGetSeatCharacteristics("J:6B",2)												<- Search for J cabin Seatmap table and the seat 37K. Fetch Seat Occupation and Customer Characteristics
'!					s_Scriptvar = Common_INVGetSeatCharacteristics("Y:38K","")
'!					s_Scriptvar = Common_INVGetSeatCharacteristics("Y:36K",4)
'!					s_Scriptvar = Common_INVGetSeatCharacteristics("Y:33K",5)
'!					s_Scriptvar = Common_INVGetSeatCharacteristics("M:33K",3)
'!
'! 	@Param s_SeatInfo,s_SeatChar
'!	@Return 
'!	@Author sanjeeth.nayak@amadeus.com
'!	@Date  Created: 26Jun18 | Last Updated:
'! 	@See 
Public Function Common_INVGetSeatCharacteristics(ByVal s_SeatInfo, ByVal s_SeatChar)
	
	Common_INVGetSeatCharacteristics = true
	
	b_JustSelectSeat = False
	
	s_Charecteristics = "~~1~2~3~4~Seat Characteristics~Seat Occupation and Customer Characteristics~Seatmap Statistics~Seatmap Information~"
	
	If instr("~"& ucase(replace(s_Charecteristics," ","")) &"~",Ucase(replace(s_SeatChar," ",""))) = 0 Then
		Reporter.ReportEvent micFail,"Common_INVGetSeatCharacteristics", "Invalid Seat characteristics requested"
		Exit function
	End If
	
	Select case cstr(s_SeatChar)
		Case "1"
			s_SeatChar = "Seat Characteristics"
		Case "2"
			s_SeatChar = "Seat Occupation and Customer Characteristics"
		Case "3"
			s_SeatChar = "Seatmap Statistics"
		Case "4"
			s_SeatChar = "Seatmap Information"
		Case Else
		'Do nothing
	End Select
	
	If ("~"& s_SeatChar &"~") = "~~" Then
		Reporter.ReportEvent micDone,"Common_INVGetSeatCharacteristics", "Seat characteristics not requested. Function will try to just click on the searched seat based on the criterian" 
		b_JustSelectSeat = True
	End If
	
	a_SeatInfo = split(s_SeatInfo,":")
	
	'Check if param 1 has exacty two elements
	If ubound(a_SeatInfo) <> 1 Then
		Reporter.ReportEvent micFail,"Common_INVGetSeatCharacteristics", "Function will take exactly one cabin and one seat number. Separated by one ':', E.g., J:11D" 
		Common_INVGetSeatCharacteristics = False
	Else
		s_CabinInfo = a_SeatInfo(0)
		s_SeatInfo = a_SeatInfo(1)
		'Check if s_CabinInfo is not numeric and length is 1
		If isnumeric(s_CabinInfo) or len(s_CabinInfo) <> 1 Then
			Reporter.ReportEvent micFail,"Common_INVGetSeatCharacteristics", "Invalid Cabin code"
			Common_INVGetSeatCharacteristics = False
		End If
		'Check if seat number length is > 2
		If len(s_SeatInfo) < 2 Then
			Reporter.ReportEvent micFail,"Common_INVGetSeatCharacteristics", "Invalid Seat Seat Number"
			Common_INVGetSeatCharacteristics = False
		End If

		DisableRecoveryScenario

		On error resume next
		err.clear
		
		s_SeatCol = mid(s_SeatInfo,len(s_SeatInfo),1)
		
		If isnumeric(s_SeatCol) Then
	
			Reporter.ReportEvent micFail,"Common_INVGetSeatCharacteristics", "Invalid Seat Seat Number: Last letter must be a Column Letter Eg., 12B"
			Common_INVGetSeatCharacteristics = False
	
		End If
		
		s_SeatRow = mid(s_SeatInfo,1,len(s_SeatInfo)-1)
		
		If not isnumeric(s_SeatRow) Then
	
			Reporter.ReportEvent micFail,"Common_INVGetSeatCharacteristics", "Invalid Seat Seat Number: Seat number must start with row number Eg., 12B"
			Common_INVGetSeatCharacteristics = False
	
		End If




		
		if err.number <> 0 then
	
			Common_INVGetSeatCharacteristics = False
		
			Reporter.ReportEvent micFail,"Common_INVGetSeatCharacteristics", "Unexpected error! Please check input"
		End If	

		On Error goto 0
		EnableRecoveryScenario
		If Common_INVGetSeatCharacteristics = False Then

			Exit function
		End If	

	End If

	b_TableFound = false
	b_RowFound = false
	b_ColFound = false
	
	Set o_Gettables = JavaWindow("wndInventory").JavaInternalFrame("dlgFlightDateSeatmap").JavaObject("objSeatMapPanel").ChildObjects
	Reporter.Filter = rfDisableAll
	For i_Iterator = 0 To o_Gettables.count - 1 Step 1
		If instr(ucase(o_Gettables(i_Iterator).tostring()),"TABLE")>0 Then
			'Target particular cabin table
			if Ucase(o_Gettables(i_Iterator).GetCellData(0,0)) = ucase(s_CabinInfo) then
				b_TableFound = true
				i_Index = i_Iterator
				Exit for
			End if
		End If 
	Next
	Reporter.Filter = rfEnableAll
	If b_TableFound Then
		
		i_Rows = o_Gettables(i_Index).GetROProperty("rows")
		i_Cols = o_Gettables(i_Index).GetROProperty("cols")
		
		s_ColNames = o_Gettables(i_Index).GetROProperty("columns_names")
		
		If instr(ucase(s_ColNames),ucase(s_SeatCol)) > 0  Then
			Reporter.Filter = rfDisableAll
			For i_ColIterator = 1 To i_Cols - 1 Step 1
				if Ucase(o_Gettables(i_Index).GetCellData(0,i_ColIterator)) = ucase(s_SeatCol) Then
					i_Col = i_ColIterator 
					b_ColFound = true
					Exit for
				End if	
			Next
			For i_RowIterator = 1 To i_Rows - 1  Step 1
				if Ucase(o_Gettables(i_Index).GetCellData(i_RowIterator,0)) = ucase(s_SeatRow) Then
					i_Row = i_RowIterator 
					b_RowFound = true
					Exit for
				End if	
			Next
			Reporter.Filter = rfEnableAll
			If not b_ColFound Then
				Common_report "Column not found:[" & s_SeatCol & "] is not found|Common_INVGetSeatCharacteristics|FAIL"
				Common_INVGetSeatCharacteristics = false				
			End If
	
			If not b_RowFound Then
				Common_report "Row not found:[" & s_SeatRow & "] is not found|Common_INVGetSeatCharacteristics|FAIL"
				Common_INVGetSeatCharacteristics = false				
			End If
			If Common_INVGetSeatCharacteristics = False Then
				On error goto 0
				EnableRecoveryScenario
				Exit function
			End If	
			
			DisableRecoveryScenario
			On error resume next
			err.clear
			o_Gettables(i_Index).SelectCell i_Row,i_Col
			'Select the cell based on Search




		
			if err.number <> 0 then
	
				Common_INVGetSeatCharacteristics = False
		
				Reporter.ReportEvent micFail,"Common_INVGetSeatCharacteristics", "Unexpected error while cell selection! Please check input"
			
			Else
				
				Common_Report s_SeatInfo & " Selection is done successfully|Common_INVGetSeatCharacteristics|Pass"
			
			End If	

			On Error goto 0
			EnableRecoveryScenario
		Else
			Common_report "Column not found:[" & s_SeatCol & "] is not found |Common_INVGetSeatCharacteristics|FAIL"
		End If
	Else
		Common_report "Seat Map Table for the cabin:[" &s_CabinInfo& "] is not found|Common_INVGetSeatCharacteristics|FAIL"
		On error goto 0
		EnableRecoveryScenario
		Exit Function
	End If
	
	set o_GetCkbox = JavaWindow("wndInventory").JavaInternalFrame("dlgFlightDateSeatmap").JavaObject("objSeatCharacteristics").ChildObjects
	
	If not b_JustSelectSeat Then
		'Set return value as null	
		Common_INVGetSeatCharacteristics = ""
		b_ListFound = false
		
		For i_Iterator = 0 To o_GetCkbox.count - 1 Step 1
		
			s_ObjType = ucase(o_GetCkbox(i_Iterator).tostring())
			
			if (instr(s_ObjType,"CHECK") > 0) then
				if (o_GetCkbox(i_Iterator).GetROProperty("value") <> "1") then
					o_GetCkbox(i_Iterator).Set "ON"
				End if
			End if
		Next
		
		For i_Iterator = 0 To o_GetCkbox.count - 1 Step 1
		
			s_ObjType = ucase(o_GetCkbox(i_Iterator).tostring())
			
			If instr(s_ObjType,"LIST") > 0 then
				'Target particular Dropdown
				s_SeatChar = replace(ucase(s_SeatChar)," ","")
				If replace((ucase(o_GetCkbox(i_Iterator).GetROProperty("attached text")))," ","") = s_SeatChar Then
										
					i_ItemCount = o_GetCkbox(i_Iterator).GetROProperty("items count")
					Reporter.Filter = rfDisableAll
					
					For Iterator = 0 To i_ItemCount - 1 Step 1
						s_Chars = s_Chars & "," & o_GetCkbox(i_Iterator).GetItem(Iterator)
					Next
					
					Reporter.Filter = rfEnableAll
					
					b_ListFound = true
					
					s_Chars = mid(s_Chars,2)
					Exit for
				End If
			End If 
		Next
		'Some Chars comes as an HTML data so we strip it using Common_StripeHTML and return it	
		Common_INVGetSeatCharacteristics = Common_StripeHTML(s_Chars)
		Reporter.ReportEvent micPass, "Common_INVGetSeatCharacteristics","Fetched Info:[" & Common_StripeHTML(s_Chars) & " ]"
		
	End If
	EnableRecoveryScenario
	On error goto 0		
End Function

Public Function CM_Recursive_Check_Requirement()
	wait 2
	Environment("Recursive_Check_Requirement_counter") = Environment("Recursive_Check_Requirement_counter") + 1
	If  Environment("Recursive_Check_Requirement_max_counter") >= Environment("Recursive_Check_Requirement_counter") Then
		if Common_CMGetCMScreen = "Check Requirements" Then
			if JavaWindow("wndCM").JavaEdit("txtEscortsurname1").Exist(1) Then
				JavaWindow("wndCM").JavaEdit("txtEscortsurname1").Set "Y"
				JavaWindow("wndCM").JavaButton("btnConfirm").Click
			else
				Exit function			
			End If
		else
			Exit function
		End If
	else
		Exit function
	End If
	CM_Recursive_Check_Requirement
End Function



Public Function Register_Click(byval o_Object)
	'SystemUtil.BlockInput
	If o_Object.ToString() = "btnAccept button" Then
		DisableRecoveryScenario
		If JavaWindow("wndCM").JavaButton("btnProceed").exist(1) Then
			JavaWindow("wndCM").JavaButton("btnProceed").Click
		End  If
		CM_Recursive_Check_Requirement
		EnableRecoveryScenario
	End if

	o_Object.Click
	'SystemUtil.UnblockInput
End Function

'RegisterFunctions for menu, checkbox,Edit box
Public Function Register_Menu(byval o_Object)
	'SystemUtil.BlockInput
	o_Object.select
	'SystemUtil.UnblockInput
End Function
Public Function Register_Set(byval o_Object,byVal s_Data)
	'SystemUtil.BlockInput
	o_Object.set Ucase(s_Data)
	'SystemUtil.UnblockInput
End Function
Public Function Register_Edit(byval o_Object,byVal s_Data)
	'SystemUtil.BlockInput
	
	If (o_Object.ToString() = "txtHoldBaggage edit box") or (o_Object.ToString() = "txtBaggageHoldWeight  edit box""txtHoldBaggage edit box") Then
		DisableRecoveryScenario
		If JavaWindow("wndCM").JavaButton("btnProceed").exist(1) Then
			JavaWindow("wndCM").JavaButton("btnProceed").Click
		End  If
		CM_Recursive_Check_Requirement
		EnableRecoveryScenario
	End if
	
	
	o_Object.set s_Data
	DisableRecoveryScenario
	On error resume next
	err.clear
	
	For i_Iterator = 1 To 3 Step 1
		DisableReporting
		if ucase(o_Object.GetROProperty("text")) = ucase(s_Data) Then
			i_Iterator = 5
		ElseIf (ucase(o_Object.GetROProperty("attached text")) = ucase(s_Data)) or (ucase(o_Object.GetROProperty("value")) = ucase(s_Data)) Then
			i_Iterator = 5
		Else
			o_Object.set s_Data		
		End if
	Next
	
	EnableReporting
	EnableRecoveryScenario
	On error goto 0
	'SystemUtil.UnblockInput
End Function



'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function to Close all tabs in Inventory application
'!
'!	Example Usage: Common_INVCloseAllTabs
'! 	@Param  None
'!	@Return None
'!	@Author sanjeeth.nayak@amadeus.com
'! 	@See 
'!	@Date Created: 10Jul2018 | Last Updated: 
public function Common_INVCloseAllTabs()
	
	DisableRecoveryScenario
	On error resume next
	err.clear
	JavaWindow("wndInventory").JavaMenu("mnuFile").highlight
	JavaWindow("wndInventory").JavaMenu("mnuFile").JavaMenu("mnuCloseFiles").Select
	JavaWindow("wndInventory").JavaDialog("dlgCloseFiles").JavaButton("btnSelectAll").Click
	JavaWindow("wndInventory").JavaDialog("dlgCloseFiles").JavaButton("btnOK").Click
	
	If Err.Number <> 0 Then
		Common_Report "Error while closing Inventory tabs|Common_INVCloseAllTabs|WARNING"
	Else
		Common_Report "All Inventory tabs closed|Common_INVCloseAllTabs|Done"
	End If
	
	On error goto 0
	EnableRecoveryScenario
End function




'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function to Close all tabs in CM application
'!
'!	Example Usage: Common_CMCloseAllTabs
'! 	@Param  None
'!	@Return None
'!	@Author ravi.kumar@amadeus.com
'! 	@See 
'!	@Date Created: 31JUL2018 | Last Updated: 
public function Common_CMCloseAllTabs()
	
	DisableRecoveryScenario
	On error resume next
	err.clear
	
	JavaWindow("wndCM").JavaMenu("mnuNavigation").JavaMenu("mnuCloseFiles").Select
	JavaWindow("wndCM").JavaDialog("dlgCloseFiles").JavaButton("btnSelectAll").Click
	JavaWindow("wndCM").JavaDialog("dlgCloseFiles").JavaCheckBox("chkMessenger").Set "OFF"
	JavaWindow("wndCM").JavaDialog("dlgCloseFiles").JavaButton("btnOK").Click

	If Err.Number <> 0 Then
		Common_Report "Error while closing CM tabs|Common_CMCloseAllTabs|WARNING"
	Else
		Common_Report "All CM tabs closed|Common_CMCloseAllTabs|Done"
	End If
	
	On error goto 0
	EnableRecoveryScenario
End function




'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function to quickly Check proceed with the customer selection when select customer screen which might appear during IDC
'!
'!	Example Usage: Common_CMProceedOnCustomerSelection
'! 	@Param  None
'!	@Return None
'!	@Author sanjeeth.nayak@amadeus.com
'! 	@See 
'!	@Date Created: 18Jul2018 | Last Updated: 
Public Function Common_CMProceedOnCustomerSelection()
	'Todo = accept some parameters to select from the table the correct pax and proceed with the selection
	SetTimeOutToZero
	DisableRecoveryScenario
	
	On error resume next
	err.clear
	
	If JavaWindow("wndCM").JavaButton("btnSelect").Exist(2) Then
		
		JavaWindow("wndCM").JavaButton("btnSelect").click
		
	End If
	
	If err.Number <> 0 Then
	
		Common_Report "Common_CMProceedOnCustomerSelection|Error while clicking on Select button on Select Customer Screen|Warning"
	
	End If
	
	On error goto 0
	ResetDefaultTimeOut
	EnableRecoveryScenario
	
End Function



Public Function Common_CMValidateRecord(byval s_TableName,byval s_RowColData,byval s_Validation)
	
	CM_DynamicSync
	
	Common_CMValidateRecord = true
	s_Data = Common_CMFetchRecord(s_TableName,s_RowColData)
	If (s_Data = false) or (s_Data = "") Then
		Common_CMValidateRecord = false
		Exit function	'reporting would have done from CMFetchRecord
	End If
		
	a_Validation = split(s_Validation,"|")
		
	For i_Iterator = 0 To Ubound(a_Validation) Step 1
		If mid(a_Validation(i_Iterator),1,1) = "~" Then
			'Negative testing
			If len(a_Validation(i_Iterator)) < 2 Then
				Reporter.ReportEvent micFail, "Common_CMValidateRecord", "Validation string must be of lenght = 1 atleast"
				Common_CMValidateRecord = false
				Exit function
			End If
			
			b_Error = Common_SimpleCompare(mid(a_Validation(i_Iterator),2),"NOTIN",s_Data)
		Else
			b_Error = Common_SimpleCompare(a_Validation(i_Iterator),"IN",s_Data)
		End If
		If b_Error = false Then
			Common_CMValidateRecord = false
		End If	
	Next
	
End Function


public function Common_CMFetchRecord(byval s_TableName,byval s_RowColData)
	
	CM_DynamicSync
	
	'Set return value as blank
	Common_CMFetchRecord = ""
	
	b_Tablefound = false
	
	'check row and col input
	a_RowColData = split(s_RowColData,"|")
	
	If ubound(a_RowColData) <> 1 Then
		Common_CMFetchRecord = false
		Common_Report "Please check input " &s_RowColData& " must have row and col information refer user doc| Common_CMFetchRecord|FAIL"
		Exit function
	End If
	
	i_row =  a_RowColData(0)
	i_col =  a_RowColData(1)
	
		
	If not (isnumeric(i_row) and isnumeric(i_col)) Then
		Common_CMFetchRecord = false
		Common_Report "Row and Col parameters must be numeric| Common_CMFetchRecord|FAIL"
		Exit function
	Else
		i_row = cint(i_row)
		i_col = cint(i_col)
	End If
	
	s_CurrentScreen =  Common_CMGetCMScreen()
	if ("Bag Record Display" = s_CurrentScreen) or ("Customer Record" = s_CurrentScreen) Then
	
		Set o_ChildObjects = JavaWindow("wndCM").JavaObject("objRecordPanel").ChildObjects
					
		Reporter.Filter = rfDisableAll

		For i_Iterator = 0 To o_ChildObjects.count - 1 Step 1
			If  o_ChildObjects(i_Iterator).getroproperty("Class Name") = "JavaTable" then
								
				if trim(Ucase(Common_StripeHTML(o_ChildObjects(i_Iterator).getroproperty("text")))) = trim(ucase(s_TableName)) then
					b_Tablefound = true

					i_maxrows = cint(o_ChildObjects(i_Iterator).getroproperty("rows")) - 1
					i_maxcols = cint(o_ChildObjects(i_Iterator).getroproperty("cols")) - 1
					
					If (i_row <= i_maxrows) and (i_col <= i_maxcols) Then
						DisableRecoveryScenario
						On error resume next
						err.clear
						s_data = Common_StripeHTML(o_ChildObjects(i_Iterator).getcelldata(i_row,i_col))
						if err.number <> 0 then
							Common_CMFetchRecord = false
							Common_Report "Please check input/Screensot! Error while fetching value for the row :"& i_row &" and the column :"& cstr(i_col) & "|Common_CMFetchRecord|FAIL"						
							On error goto 0
							EnableRecoveryScenario
							Exit function
						Else
							Common_CMFetchRecord = s_data
							Common_Report "Value fetched for the row :"& i_row &" and the column :"& cstr(i_col) & "is ["& s_data &"]|Common_CMFetchRecord|Done"
							
							On error goto 0
							EnableRecoveryScenario
							Exit function
						End if
						'already defined

					End If					
									
				End if
			End If	
		Next
		
		If b_Tablefound = false Then
			Common_Report "Please check input " &s_TableName& " is not found| Common_CMFetchRecord|FAIL"
			Common_CMFetchRecord = false
			On error goto 0
			EnableRecoveryScenario
			Exit function
		End If
		
		Reporter.Filter = rfEnableAll
		
	Else
		Common_CMFetchRecord = false
		Common_Report "Entry screen Must be either [Baggage Record Display] or [Customer Record] | Common_CMFetchRecord|FAIL"
		
	End If
	On error goto 0
	EnableRecoveryScenario	
	
End Function



'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'! Function to fetch email ID for a ALM/windows user id. Prerequisite: UserIdEmail.txt has to be updated with the email id 
'!
'!	Example Usage: 	s_ScriptVar = Common_GetEmailID("") 			'<--- Gets email id of current ALM/windows user 
'!					s_ScriptVar = Common_GetEmailID("cURRENT")		'<--- Gets email id of current ALM/windows user 
'!					s_ScriptVar = Common_GetEmailID("RBOKKA") 		'<--- Gets email id of Specific ALM user 
'!
'!			   	
'! 	@Param s_UserId - "" or "CURRENT" <- When current user's email needs to be fetched. <SpecificUserID> <- When Email ID of specific user needs to be fetched
'!	@Return Email ID when if present in UserIdEmail.txt attached in ALM resources. False -  When there are any errors
'!	@Author sanjeeth.nayak@amadeus.com
'!	@Date  Created:28th SEP 2018  | Last Updated: 
Public Function Common_GetEmailID(byVal s_UserId)

	Common_GetEmailID = ""
	
	If (s_UserId = "") or (ucase(s_UserId) = "CURRENT") Then
		s_UserId = ucase(Environment("UserName"))
	Else
		s_UserId = ucase(s_UserId)
	End If
	
	Common_DownloadTestResource "UserIdEmail.txt", "C:\TESTRESOURCES\"
	
	s_FileContent = ucase(Common_ReadFileContent("C:\TESTRESOURCES\UserIdEmail.txt"))
	
	On error resume next
	DisableRecoveryScenario
	err.clear
	
	set o_Match = Common_RegExecution(s_FileContent, s_UserId & ":(.*);", false)
	
	 s_EmailID = o_Match.item(0).submatches(0)
	
	If err.number <> 0 Then
		Reporter.ReportEvent micFail,"Common_GetEmailID", "Error while Evaluating Email Id"
		Common_GetEmailID  = False
	ElseIf (s_EmailID = "") or (instr(s_EmailID,"@")) < 1 or (instrrev(s_EmailID,".COM") <> (len(s_EmailID) - 3)) Then
		Reporter.ReportEvent micFail,"Common_GetEmailID", "Evaluated Email ID:[" & s_EmailID & "] is Either null or not valid"
		Common_GetEmailID  = False
	Else
		Common_GetEmailID = s_EmailID
		Reporter.ReportEvent micDone,"Common_GetEmailID", "Evaluated Email ID:[" & s_EmailID & "]"
	End If

	EnableRecoveryScenario
	On error goto 0
	
End Function


'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Common_CMLogExtract is a function to extract CM JFE logs by giving certain search criteria such as message name and message content for the given time interval 
'!
'!This function accepts two parameters one being the time and other being filter criteria 
'!
'!The function will automatically download at the gsv file from CM log page, it will parse the content of gsv start timer trollsbased on the time interval specified by the user and the search criteria. The carf ID and the full log for the searched carf ID is returned
'!
'!
'!	Example Usage: ScriptVariable = Common_CMJFELogExtract("TIME:-10m|SEARCH:CCPRCR;SANJEETH;7X")
'! 	@Param  TIME:<Time interval>|SEARCH:<Search Criteria 1>;<Search Criteria 2>;<Search Criteria n>                   <-Time interval ideally a negative number with suffix m , s for minute and second unit respectiviely
'!	@Return CARF ID and Searched Log based on Search critier (In one string)
'!	@Author sanjeeth.nayak@amadeus.com
'! 	@See 
'!	@Date Created: 11Sep2018 | Last Updated:
Public Function Common_CMJFELogExtract(byVal s_SearchCrit)

	CM_DynamicSync
	
	s_CMJFELogExtractPath = "C:\TESTRESOURCES\CMJFELogExtract"
	Common_CMJFELogExtract = ""
	'Parse Search Criteria
	'Options: TIME:<-10m>|SEARCH:<messageID>;<Anycontent>
	
	a_SearchCrit = split(s_SearchCrit,"|")
	
	For i_Iterator = 0 To ubound(a_SearchCrit) Step 1
		
		s_SpecificSearch = ucase(mid(a_SearchCrit(i_Iterator),1,instr(a_SearchCrit(i_Iterator),":") - 1))
	
		s_SpecificCrit = mid(a_SearchCrit(i_Iterator),instr(a_SearchCrit(i_Iterator),":")+1)
		
		Select Case s_SpecificSearch
			
			Case "SEARCH"
				s_SearchCrit = s_SpecificCrit
				a_SearchCrit = split(s_SpecificCrit,";")
			Case "TIME"
				
				
				If JavaWindow("wndCM").JavaStaticText("stsJFETime").exist(1) Then
					d_JFEDateTime = JavaWindow("wndCM").JavaStaticText("stsJFETime").GetROProperty("label") 'Todo Error handling
					d_JFEDateTime = cdate(mid(d_JFEDateTime,1,2) & "/" & mid(d_JFEDateTime,3,3) & "/" &  mid(d_JFEDateTime,6,2) & " " &  mid(d_JFEDateTime,9,5))
					d_TimeTo = d_JFEDateTime
					d_TimeFrom = DateAdd(mid(s_SpecificCrit,len(s_SpecificCrit)), cint(mid(s_SpecificCrit,1,(len(s_SpecificCrit)-1))), d_TimeTo)
					
'					GMT adjustment
'					If d_JFEDateTime < now Then
'						d_GMTAdjustment = datediff("s",now,d_JFEDateTime)
'					else
'						d_GMTAdjustment = datediff("s",d_JFEDateTime,now)
'					End If
					
				Else
					Common_Report "Could not find stsJFETime object!|Common_CMJFELogExtract|FAIL"
					
					Exit Function
					
				End If
'				d_TimeTo = dateadd("s",d_GMTAdjustment,d_TimeTo)
'				d_TimeFrom = dateadd("s",d_GMTAdjustment,d_TimeFrom)
			Case Else
				reporter.ReportEvent micFail, "Common_CMJFELogExtract","Please check the Input parameter. Only following options are allowed:-TIME:<-10m>|SEARCH:<messageID>;<Any other search criteria such as flight number, record locator etc>"
				Common_CMJFELogExtract = false
				Exit function
		End Select
		
	Next

	
	'Clean up Folder if exists
	Common_FolderCleanUp s_CMJFELogExtractPath
	
	'Create Folder
	Common_FolderCreate s_CMJFELogExtractPath
		
	'Save GSV
	If JavaWindow("wndCM").JavaMenu("mnuHelp").Exist(5) Then
		d_JFEDateTime = JavaWindow("wndCM").JavaStaticText("stsJFETime").GetROProperty("label")

		JavaWindow("wndCM").JavaMenu("mnuHelp").JavaMenu("mnuViewLog").Select
		JavaWindow("wndCM").JavaDialog("dlgLogViewer").JavaTab("tabFind").Select "Edifact"
		JavaWindow("wndCM").JavaDialog("dlgLogViewer").JavaButton("btnSaveGSV").Click
		s_GSV = s_CMJFELogExtractPath &"/"& (replace(replace(replace(cstr(now),"/","")," ",""),":","")) & ".gsv"
		JavaWindow("wndCM").JavaDialog("dlgLogViewer").JavaDialog("dlgSave").JavaEdit("txtFileName").Set s_GSV
		JavaWindow("wndCM").JavaDialog("dlgLogViewer").JavaDialog("dlgSave").JavaButton("btnSave").Click
		JavaWindow("wndCM").JavaDialog("dlgLogViewer").JavaButton("btnExit").Click
	Else
		Common_Report "Unable to Find mnuHelp|Common_CMJFELogExtract|FAIL"
		Common_CMJFELogExtract = False
		Exit Function
	End If
	
	'Read content of GSV
	s_GSVData = Common_ReadFileContent(s_GSV) & chr(10) & "'==="
	
	'Run Regex
	Set o_PostRegex = Common_RegExecution(s_GSVData,"Time stamp: (.*)\n.+: (.*)\n.*\n.*\n([\w|\W]*?)'===",True)
	
	Set o_DataDict_time = CreateObject("Scripting.Dictionary")
	'Set o_DataDict_Carf = CreateObject("Scripting.Dictionary")
	
	For i_Dictionary = 0 To o_PostRegex.Count - 1 Step 1
		a_submaches = o_PostRegex.item(i_Dictionary).submatches(1)
		d_Key_time = replace(o_PostRegex.item(i_Dictionary).submatches(0)," : ","")
		d_Key_time = cdate(mid(d_Key_time,1,2) &"/"& mid(d_Key_time,3,2) &"/"& mid(d_Key_time,5,2) &" "& mid(d_Key_time,7,2) &":"& mid(d_Key_time,9,2))
		print cstr(d_Key_time) & " for debug"
		
		
		s_Key_carf = o_PostRegex.item(i_Dictionary).submatches(1) 

		
		s_Value = o_PostRegex.item(i_Dictionary).submatches(2)
		
		
		If ((i_TimeFrom <= d_Key_time) and (d_TimeTo >= d_Key_time)) Then
				If not s_SearchCrit = "" Then
					s_SearchTrack = s_SearchCrit
					For i_Search = 0 To ubound(a_SearchCrit) Step 1
						If instr(s_Value,a_SearchCrit(i_Search))>0 Then
							
							s_SearchTrack = replace(s_SearchTrack,a_SearchCrit(i_Search),"")
							
						End If
					Next
				
					s_SearchTrack = replace(s_SearchTrack,";","")
					
					If s_SearchTrack = "" Then
						'That means, all search critiria is found
						b_Searched = True
						Common_CMJFELogExtract = "CARF:" & s_Key_carf & vbcr & s_Value
						Reporter.ReportEvent micPass,"Common_CMJFELogExtract", "Log Successfully extracted:" &vbcr& Common_CMJFELogExtract
						Exit for						
					End If
				End If	

		End If
		
	Next
	
	if b_Searched <> True then
	
		Reporter.ReportEvent micfail,"Common_CMJFELogExtract", "Log could not be extracted for the search criteria:" &vbcr& s_SearchCrit
		Common_CMJFELogExtract= false
		
	End if
	
	
End Function

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Simple Function to Set Default time out to 2000 seconds
'!
'!	Example Usage: SetTimeOutToZero
'! 	@Param  None
'!	@Return None
'!	@Author sanjeeth.nayak@amadeus.com
'! 	@See 
'!	@Date Created: 19Jul2018 | Last Updated:
Public Function SetTimeOutToZero()
	Environment("DefaultTimeOut") = Setting("DefaultTimeOut")
	Setting("DefaultTimeOut") = 1000 'Zero was causing sudden trigger of recovery scenario
End Function


'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function to Reset Default time out to 2000 seconds
'!
'!	Example Usage: ResetDefaultTimeOut
'! 	@Param  None
'!	@Return None
'!	@Author sanjeeth.nayak@amadeus.com
'! 	@See 
'!	@Date Created: 19Jul2018 | Last Updated:
Public Function ResetDefaultTimeOut()
	DisableRecoveryScenario
	On error Resume next
	err.clear	
	Setting("DefaultTimeOut") = Environment("DefaultTimeOut")
	If err.number <> 0 Then
		Reporter.ReportEvent micWarning, "ReSetTimeOut", "SetTimeOutToZero function must be called before ReSetTimeOut"
	End If
	On error Goto 0
	EnableRecoveryScenario
End Function

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function to Common_GetGroupHeaderIndex
'!
'!	Example Usage: Common_GetGroupHeaderIndex ("WndCM","tblCPtable", "Config:Y")
'! 	@Param  None
'!	@Return None
'!	@Author sanjeeth.nayak@amadeus.com
'! 	@See 
'!	@Date Created: 05Nov2018 | Last Updated:

Public Function Common_GetGroupHeaderIndex (byval s_MainWnd,byval s_table, byval s_GrouppedHeader)
    
    On error Resume next
    DisableRecoveryScenario
    err.clear
    
    
    actual_cols = JavaWindow(s_MainWnd).JavaObject(s_table&"-Info").Object.getModel().getColumnCount

	cols_as_seen_byUFT = JavaWindow(s_MainWnd).Javatable(s_table).GetROProperty("cols")
    
    If actual_cols=cols_as_seen_byUFT Then
    	do_adjustment = false
    else
    	do_adjustment = true
    End If
    
    
    i_IDX = JavaWindow(s_MainWnd).JavaObject(s_table&"-Info").Object.getALMIndexOfColumnInMultipleHeaderTable(s_GrouppedHeader,":",do_adjustment)
    
    If err.number <> 0 Then
        reporter.ReportEvent micFail, "Common_GetGroupHeaderIndex","Error while fetching Groupped header column index"
        Common_GetGroupHeaderIndex = false
    Else
        reporter.ReportEvent MicDone, "Common_GetGroupHeaderIndex","Column Index is :["& i_IDX &"] for the input:  [" &s_GrouppedHeader&"]"
        Common_GetGroupHeaderIndex = i_IDX
    End If
    
    On error goto 0
    EnableRecoveryScenario
End Function

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!  Common Function to Fetch name of the active tab in CM
'!
'!	Example Usage: 
'Common_CMGetCurrentTabName() 
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Public Function Common_CMGetCurrentTabName()
	Common_CMGetCurrentTabName = False
	CM_DynamicSync
	Set o_Description = Description.Create()
	o_Description("Class Name").value = "JavaButton"
	Set o_tabBar = JavaWindow("wndCM").JavaObject("objTabsPanel").ChildObjects(o_Description)
	i_NoOfChildObjs = o_tabBar.Count - 1
	For Iterator = 0 To i_NoOfChildObjs Step 1
		if o_tabBar(Iterator).GetROProperty("background") = "fbf7eb" then 
			Common_CMGetCurrentTabName = o_tabBar(Iterator).GetROProperty("attached text")
			Exit for
		end if
	Next
	If Common_CMGetCurrentTabName = False Then
		Common_Report "Common_CMGetCurrentTabName: Error while fetching Tab name|Tab name fetching|FAIL"
	End If
End Function


'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

'!  Common Function to switch tabs
'!
'!	Example Usage: Below are the modes
'!
'!	Common_CMChangeTab("<TabName>|<index>") 
'!	Common_CMChangeTab("Baggage|2") <- Navigates to the second Baggage Tab from the left
'!
'!	Common_CMChangeTab(<TabName>)
'!	Common_CMChangeTab("Boarding") <- Navigates to the lasest (ie. rightmost) Boarding tab.
'!
'!  Common_CMChangeTab("P")		   <- Navigates to the Previous tab that the user was on. NOTE: You CANNOT use this option while making the FIRST CALL to this function.
'!  Common_CMChangeTab("L")		   <- Navigates to the Latest tab
'!	@Param s_TabDescription        - TabName to navigate to (String)
'!	@Return 	       				True if the desired tab is found and navigated to
'!	@Date Created: 29SEP18 
'!	@Author 
Public Function Common_CMChangeTab(byVal s_TabDescription)

	CM_DynamicSync
	Dim b_special, i_PositionTab
	i_PositionTab=0
	b_special=false
	Common_CMChangeTab=false
	s_TabDescription=Split(s_TabDescription,"|")
	
	Set MyDescription = Description.Create()
	MyDescription("Class Name").value = "JavaButton"
	Set tabBar = JavaWindow("wndCM").JavaObject("objTabsPanel").ChildObjects(MyDescription)
	NoOfChildObjs = tabBar.Count
	
	i_FoundCounter=0
	If (ubound(s_TabDescription)+1)<2 and StrComp(s_TabDescription(0),"L",1)=0 Then   			'<L> format
		tabBar(NoOfChildObjs-1).Click
		Common_CMChangeTab=true
	
	ElseIf (ubound(s_TabDescription)+1)<2 and StrComp(s_TabDescription(0),"P",1)=0 Then   		'<P> format
		
		if Common_EnvVarReplace("e_PreviousTab") <>"" then
		
			On error resume next
			DisableRecoveryScenario
			err.clear
			tabBar(Environment.value("e_PreviousTab")).Click			
			if err.number <> 0 then
				Common_Report "Click on Tab (" & s_TabDescription(0) & ") failed"
				On error goto 0
				EnableRecoveryScenario
				Exit function
			End if
			On error goto 0
			EnableRecoveryScenario
			
			i_temp=Environment.value("e_PreviousTab")
			Environment.value("e_PreviousTab")=Environment.value("e_CurrentTab")
			Environment.value("e_CurrentTab")=i_temp
			Common_CMChangeTab=true
			
		Else
			Common_Report "Cannot use P while making the first call to the function|Common_CMChangeTab|FAIL"
			Exit Function 
			
		End if
	Else																						'Name of the tab is given
		For Counter=0 to NoOfChildObjs-1
			If InStr(tabBar(Counter).Object.text,s_TabDescription(0))<>0 Then
				i_FoundCounter=i_FoundCounter+1	
		
		   		If (ubound(s_TabDescription)+1)=2 Then  										'<TabName>|<index> format   
					If CInt(s_TabDescription(1))>NoOfChildObjs  Then      						'Make sure Index is not greater than the number of Tabs present
						Common_Report "Index cannot be greater than the number of Tabs open|Common_CMChangeTab|FAIL"
						Exit function
					End If
			 		If i_FoundCounter=CInt(s_TabDescription(1)) Then
			 		
			 			On error resume next
						DisableRecoveryScenario
						err.clear
						tabBar(Counter).Click
						
						if err.number <> 0 then
							'Common_Report "Click on Tab (" & s_TabDescription(0) & ") failed"
							On error goto 0
							EnableRecoveryScenario
							Exit function
						End if
						'already defined **rupa
						On error goto 0
						EnableRecoveryScenario
						
						if Common_EnvVarReplace("e_PreviousTab") <>"" then      				'To check if the function is called the first time
							Environment.value("e_PreviousTab")=NoOfChildObjs-1
						else
							Environment.value("e_PreviousTab")=Environment.value("e_CurrentTab")
						End if
						Environment.value("e_CurrentTab")=Counter
						Common_CMChangeTab=true
						Exit for
			 		End If		 		
		  		ElseIf (ubound(s_TabDescription)+1)<2 Then   									'<TabName> format find index
				i_PositionTab=Counter
				b_special=true
		   		End if	
			End If	
		Next
		
		
	if (b_special) then																		'<TabName> format click on latest tab of that name
		
		On error resume next
		DisableRecoveryScenario
		err.clear
		tabBar(i_PositionTab).Click
		if err.number <> 0 then
			Common_Report "Click on Tab (" & s_TabDescription(0) & ") failed|Common_CMChangeTab|FAIL"
			On error goto 0
			EnableRecoveryScenario
			Exit function
		End if
		''already defined rupa
		On error goto 0
		EnableRecoveryScenario
		
		Common_CMChangeTab=true
		if Common_EnvVarReplace("e_PreviousTab") <>"" then									'To check if the function is called the first time
			Environment.value("e_PreviousTab")=NoOfChildObjs-1
		else
			Environment.value("e_PreviousTab")=Environment.value("e_CurrentTab")
		End if
		Environment.value("e_CurrentTab")=i_PositionTab
		End if
		
	
	End if
	
	If Common_CMChangeTab Then
		Common_Report "Tab (" & s_TabDescription(0) & ") Found!" & "|Common_CMChangeTab|Pass"
	
	else
		Common_Report "Tab (" & s_TabDescription(0) & ") Not Found!|Common_CMChangeTab|Fail"
	End If
	On error goto 0
	EnableRecoveryScenario
End function





'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function to validate the Highlighted seat on the seatmap
'!
'!             Example Usage: Common_CMIsSeatSelected("16E")
'Common_CMIsSeatSelected s_Seat
'!             @Param  "16E" or s_Seat
'!             @Return None
'!             @Author sanjeeth.nayak@amadeus.com
'!             @See 
'!             @Date Created: 05Nov2018 | Last Updated:
Public Function Common_CMIsSeatSelected(s_InputSeatNb)
	CM_DynamicSync
	s_SeatRow = mid(s_InputSeatNb,len(s_InputSeatNb),1)
	s_SeatCol = mid(s_InputSeatNb,1, len(s_InputSeatNb)-1)
	
	Common_CMIsSeatSelected = False
	b_SeatRowFound = false
	b_SeatColFound = false
	
	Reporter.Filter = rfEnableErrorsAndWarnings
	
	Set o_ChildObjects = JavaWindow("wndCM").JavaObject("objSeatPanel").ChildObjects
	
	For i_Iterator = 0 To o_ChildObjects.count - 1 Step 1
	
	      If o_ChildObjects(i_Iterator).getroproperty("Class Name") = "JavaTable" then
	         'Get number of rows and columns
		        i_Rows = o_ChildObjects(i_Iterator).GetROProperty("rows")
		        i_Cols = o_ChildObjects(i_Iterator).GetROProperty("cols")
				
		         For i_RowIterator = 1 To (i_Rows -1) Step 1
		         	
		         	If s_SeatRow = o_ChildObjects(i_Iterator).GetCellData(i_RowIterator,0) Then
		         		i_SeatRow = i_RowIterator
		         		b_SeatRowFound = true
		         		Exit For
		         	End If 
		         
		         Next
		         For i_ColIterator = 1 To (i_Cols - 1) Step 1
		
		         	If s_SeatCol = cstr(o_ChildObjects(i_Iterator).GetCellData(0,i_ColIterator)) Then
		         		i_SeatCol = i_ColIterator
		         		b_SeatColFound = true
		         		Exit For
		         	Elseif cstr(o_ChildObjects(i_Iterator).GetCellData(0,i_ColIterator)) = "" Then
		         	
		            	
		         		if instr(o_ChildObjects(i_Iterator).Object.PrepareRenderer(o_ChildObjects(i_Iterator).Object.getCellRenderer(0,i_ColIterator),0,i_ColIterator).tostring,"exit_up.gif")>0 then
		         			If instr(JavaWindow("wndCM").JavaEdit("txtSelectSeats").GetROProperty("text"),cstr(s_SeatCol))>0 Then
		         				
		         				DisableRecoveryScenario
								On error resume Next
								err.clear
								s_SeatChar = o_ChildObjects(i_Iterator).Object.PrepareRenderer(o_ChildObjects(i_Iterator).Object.getCellRenderer(i_SeatRow,i_ColIterator),i_SeatRow,i_ColIterator).tostring
					       		If err.number <> 0 Then
				               		Common_Report "ERROR while fetching Number of Rows/Cols|Common_CMSearchSeat|Common_CMSearchSeat|Fail"               
				               		EnableRecoveryScenario
				              		On error goto 0
				              		Reporter.Filter = rfEnableAll
				               		Exit Function
				          		End If
				          		''already defined **Rupa
								EnableRecoveryScenario
				            	On error goto 0
		         				
		         				 				
		         				if instr(s_SeatChar,"avax.swing.border.CompoundBorder@") then
		         				
		         					i_SeatCol = i_ColIterator
		         					b_SeatColFound = true
		         					Exit For
		         				End If
		         				
		         			End If
		         		End If
		         	End If 
				Next
				Reporter.Filter = rfEnableAll
			If (b_SeatColFound = True) and (b_SeatRowFound = true) Then
				
				DisableRecoveryScenario
				On error resume Next
				err.clear
				s_SeatChar = o_ChildObjects(i_Iterator).Object.PrepareRenderer(o_ChildObjects(i_Iterator).Object.getCellRenderer(i_SeatRow,i_SeatCol),i_SeatRow,i_SeatCol).tostring
		        If err.number <> 0 Then
	                  Common_Report "ERROR while fetching Number of Rows/Cols|Common_CMSearchSeat|Common_CMSearchSeat|Fail"               
	                  EnableRecoveryScenario
	                  On error goto 0
	                  Reporter.Filter = rfEnableAll
	                  Exit Function
	           	End If
	           	''aleady defined **rupa
'				EnableRecoveryScenario
'	            On error goto 0
				
				If instr(s_SeatChar,"avax.swing.border.CompoundBorder@") > 0  Then
					Common_Report "Input seat ["&s_InputSeatNb&"] is Selected|Common_CMIsSeatSelected|PASS"	
					Common_CMIsSeatSelected = True
				End If
		
			End If
			
			If (b_SeatColFound = True) and (b_SeatRowFound = true) Then
			
				Exit For
				
			End If
		End If	
	Next
	
	If (Common_CMIsSeatSelected = False) then			
		Common_Report "Input seat ["&s_InputSeatNb&"] is Not Selected|Common_CMIsSeatSelected|FAIL"	
	End If
	Reporter.Filter = rfEnableAll
	On error goto 0
	EnableRecoveryScenario
End Function
















Public Function Common_DateCleanup(ByVal s_Date)
	s_Date=Replace(s_Date,"-","") 'Removes the extra - that comes into the date while using PON
	If Len(s_Date)=4 Then
		s_Date="0"&s_Date
	End If 
	Common_DateCleanup= s_Date
End function

'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!Function to to Set Itemisation/Activation value through CM JFE
'!
'!             Example Usage: call Common_SetItemisationJfe("6X","Itemisation","AAS_Seat","*","*","N")
'!              Common_SetItemisationJfe(byval s_Airline,byval s_Activationtype,byval s_ActivationnName,byval s_HandlingCarrier,byval s_OperatingCarrier,byval i_Value)             
'!              
'!             @Param  s_Airline=Current Handling carrier, s_Activationtype=Activation or Itemisation type, s_ActivationnName=Activation or Itemisation Value
'!                     s_HandlingCarrier=Handling Carrier on pop-up, s_OperatingCarrier=Operating Carrier on pop-up, i_Value= Value (Y or N)
'!             @Return None
'!             @Author ravi.kumar@amadeus.com
'!             @See 
'!             @Date Created: 06Dec2018 | Last Updated:

Function Common_SetItemisationJfe(byval s_Airline,byval s_Activationtype,byval s_ActivationnName,byval s_HandlingCarrier,byval s_OperatingCarrier,byval i_Value)
	CM_DynamicSync
    s_Airline=Ucase(s_Airline)
	If JavaWindow("wndCM").Exist Then
	   JavaWindow("wndCM").JavaMenu("mnuHelp").highlight
	   JavaWindow("wndCM").JavaMenu("mnuHelp").JavaMenu("mnuSetPreferences").Select
	   JavaWindow("wndCM").JavaDialog("dlgOverridePreferences").WaitProperty "text","Override Preferences",100000
	   JavaWindow("wndCM").JavaDialog("dlgOverridePreferences").JavaList("lstCurrentHandlingCarrier").Select s_Airline
       JavaWindow("wndCM").JavaDialog("dlgOverridePreferences").JavaTab("tabCurrentHandlingCarrier").Select "<html><b><font color='#0066AA'>"&s_Activationtype&"</font></b></html>"
       JavaWindow("wndCM").JavaDialog("dlgOverridePreferences").JavaEdit("txtItemName").Set s_ActivationnName
       
        DisableRecoveryScenario
		On error resume next
		Err.clear
             JavaWindow("wndCM").JavaDialog("dlgOverridePreferences").JavaObject("objPreferenceRowPanel").DblClick "1","1","LEFT"
		If err.number <> 0 Then
			Common_Report "No row found for "&s_Activationtype&" : "&s_ActivationnName&"|Common_SetItemisationJfe|FAIL"
			On error goto 0
			EnableRecoveryScenario
			ExitTest
		End If
		EnableRecoveryScenario
		On error goto 0
       
		Common_Report "Row found for "&s_Activationtype&" : "&s_ActivationnName&"|Common_SetItemisationJfe|PASS"
		If JavaWindow("wndCM").JavaDialog("dlgUpdatePopupItemisation").Exist(10) Then
		     Common_Report "Dialog Update Popup Itemisation has appeared||Pass"
		     
		     'Entering Handling carrier Value
		     If s_HandlingCarrier<>"" or s_HandlingCarrier<>NULL Then
		     	if JavaWindow("wndCM").JavaDialog("dlgUpdatePopupItemisation").JavaList("lstHandlingCarrier").GetROProperty("enabled") then
		     	   JavaWindow("wndCM").JavaDialog("dlgUpdatePopupItemisation").JavaList("lstHandlingCarrier").Select s_HandlingCarrier
		     	Else
                   Common_Report "Handling carrier is disabled||Done"
                End if 
             Else
                 Common_Report "Handling carrier value is either empty or NULL|SetItemisationJfe|Done"	             
		     End If
		     
		     'Entering Operating carrier Value
 		     If s_OperatingCarrier<>"" or s_HandlingCarrier<>NULL Then
		     	if JavaWindow("wndCM").JavaDialog("dlgUpdatePopupItemisation").JavaList("lstOperatingCarrier").GetROProperty("enabled") then
		     	   JavaWindow("wndCM").JavaDialog("dlgUpdatePopupItemisation").JavaList("lstOperatingCarrier").Select s_OperatingCarrier
		     	Else
                   Common_Report "Operating carrier is disabled|SetItemisationJfe|Done"
                 End if
             Else
                 Common_Report "Operating carrier value is either empty or NULL|SetItemisationJfe|Done"             
		     End If
			
			JavaWindow("wndCM").JavaDialog("dlgUpdatePopupItemisation").JavaList("lstValue").Select i_Value
			Common_Report "Values entered in Update Popup Itemisation dialog|SetItemisationJfe|Done"
			if JavaWindow("wndCM").JavaDialog("dlgUpdatePopupItemisation").JavaButton("btnOK").GetROProperty("enabled") then
				JavaWindow("wndCM").JavaDialog("dlgUpdatePopupItemisation").JavaButton("btnOK").Click
			else
			   Common_Report "button ok is disabled|SetItemisationJfe|FAIL" 
			   ExitTest
			End if
			JavaWindow("wndCM").JavaDialog("dlgOverridePreferences").JavaButton("btnSavealltabsandexit").Click
		else
           Common_Report "Dialog Update Popup Itemisation did not appeared|SetItemisationJfe|FAIL"	
		End If
	else
       Common_Report "Jfe is either not open or Could not be recognised|SetItemisationJfe|FAIL"
	End If
	On error goto 0
	EnableRecoveryScenario
End Function

'Todo: Disabling this function for now as we are facing lock issue on VMs
Function Common_ScriptingModeOn()
	Environment("Global_RS") = False
	'Environment("Global_RS") = True
End Function



Public Function Common_CurrentResolution()
	Set ie = CreateObject("internetexplorer.application")
	ie.fullscreen = True
	width = ie.width
	height = ie.height
	ie.Quit
	Common_CurrentResolution = cstr(width) & "X" & cstr(height)
End  function



Public Function Common_ChangeScreenResolution(i_Width,i_Height)
	
	Common_FolderCreate "C:\TESTRESOURCES\Resolution"
	Common_DownloadWithPreferance "ChangeScreenResolution.ps1", "C:\TESTRESOURCES\Resolution"
	s_FileContent = Common_ReadFileContent("C:\TESTRESOURCES\Resolution\ChangeScreenResolution.ps1")
	s_FileContent = replace(replace(s_FileContent,"%HEIGHT%",i_Height),"%WIDTH%",i_Width)
	Common_LogDump "C:\TESTRESOURCES\Resolution", "ChangeScreenResolution.ps1", s_FileContent
	Common_RunBatch "powershell -noprofile -executionpolicy bypass -file C:\TESTRESOURCES\Resolution\ChangeScreenResolution.ps1"
End Function



'CM_DynamicSync can be used to wait for jfe to sync till some background operations are completed
Public Function CM_DynamicSync()
	Reporter.Filter=rfEnableErrorsAndWarnings
	SetTimeOutToZero
	Do while (javawindow("wndCM").JavaObject("objReadyToUse").Exist(2) = false)	
		If (i_Loop > 20) Then																		
			Exit do																									
		End If																											
		wait 1																										
		i_Loop = i_Loop + 1																								
	Loop
	ResetDefaultTimeOut
	Reporter.Filter=rfEnableAll
End Function







'Todo: Common_ValidateDBStuff function to be made more generic
Public Function Common_ValidateDBStuff(byVal s_Peak, byVal s_Schema, byval s_Environment, byVal s_UCI, byVal s_ValidationColumnandValue)


	SystemUtil.Run "iexplore", "http://lonlnx48.lon.amadeus.net/~clement.poupard/dbstuff/Product.php?appli=CM&region="&s_Environment&"&peak="&s_Peak&"&schema="&s_Schema&"&upi=&mid=&uci="&s_UCI&"&tktn=&mcarr=&mflightn=&mflights=@&locdeptime=&name=&boardp=&locdeptime2=&recloc=&submit=submit&user=SDESODT&login_db=&password_db=&connec_string=&schemas=&displayBy=Auto&displayDirectQueryUrl=No&displayOciDebugOutput=No&displayDbmsOutput=No&displayExecPlan=No", , ,3
	
	
	s_Args = Split(s_ValidationColumnandValue,"|")
	s_lengthofargs = ubound(s_Args)
	
	For J  = 0 To s_lengthofargs
		s_ColumnsandValues = Split(s_Args(J),";")
		
		x = Browser("DB Stuff").Page("Product on CM-PDT-3-ALL_SCHEMA").WebTable("T_CM_CUSTOMER_ID").GetRowWithCellText(s_ColumnsandValues(0))
	
		z = Browser("DB Stuff").Page("Product on CM-PDT-3-ALL_SCHEMA").WebTable("T_CM_CUSTOMER_ID").GetCellData(x,"2")
	
		Common_SimpleCompare s_ColumnsandValues(1),"=",z
	next
	
	Browser("DB Stuff").Close


End Function




'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
' Start of CM Specific Functions-------------------->
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------


'----------------------------------------------------------------------------------------------------------------------------------------------------
'	# Reusable Action CM_Login
'
' 		~ This Action performs launching of CM JFE using .bat file,Then Enter WID and then using login credential it logs to Application.
'			* It login based on the Airline passed.

'		~ Usage	 : Direct run or RunAction "Action1 [CM_Login]", oneIteration 
' 		~ Input  : Airline,Environment(PDT,UAT etc)
'		~ Output : e_LoginStatus true or false
'
'	@author		:   Ravi kumar
'	@copyright	:  	2017 Amadeus Services Limited. All rights reserved.
'	@contact	:   ravi.kumar@amadeus.com
'	@deffield	:   Created:14/12/2017  | Last Updated: 
'Mandatory env variable that should be defined before calling this function 
'environment.Value("e_LoginAirLine")
'----------------------------------------------------------------------------------------------------------------------------------------------------


Public Function CM_Login()
	
	Common_FetchLoginProperties environment.Value("e_LoginAirLine")

	if Common_EnvVarReplace("e_CustomAirportORCityCode") <> "e_CustomAirportORCityCode" then
		environment.Value("login_AirportORCityCode") = Common_EnvVarReplace("e_CustomAirportORCityCode") 
	End If
	if Common_EnvVarReplace("e_CustomAirportORCity") <> "e_CustomAirportORCity" then
		environment.Value("login_CityORAirport") = Common_EnvVarReplace("e_CustomAirportORCity") 
	End If
	if Common_EnvVarReplace("e_CustomCategory") <> "e_CustomCategory" then
		environment.Value("login_Category") = Common_EnvVarReplace("e_CustomCategory") 
	End If
	
	if Common_EnvVarReplace("e_CustomDutyCode") <> "e_CustomDutyCode" then
		environment.Value("login_DutyCode") = Common_EnvVarReplace("e_CustomDutyCode") 
	End If
	
	if Common_EnvVarReplace("e_LastLoginAirLine") <> environment.Value("e_LoginAirLine") then' This is to check if the previous login is of the same airline
		
		s_Connection=environment.Value("TestEnv_Connection")
		s_AirlineCode=environment.Value("login_Airline")
		s_Provider=environment.Value("login_Provider")
		s_CityORAirport=environment.Value("login_CityORAirport")
		s_AirportORCityCode=environment.Value("login_AirportORCityCode")
		s_BuildingORTerminalType=environment.Value("login_BuildingORTerminalType")
		s_BuildingORTerminalNo=environment.Value("login_BuildingORTerminalNo")
		s_Category=environment.Value("login_Category")
		s_Index=environment.Value("login_Index")
		'i_LocalID=environment.Value("login_LocalID")
		i_LocalID= Common_RandomData(1,5)
		s_UserID=environment.Value("login_UserID")
		s_Password=environment.Value("login_Password")
		s_DutyCode=environment.Value("login_DutyCode")
		s_RemoteOffice=environment.Value("login_RemoteOffice")
		s_lstAuthentication=environment.Value("login_lstAuthentication")
		
	
		If JavaWindow("wndCM").JavaDialog("dlgSignIn").Exist(10) Then
			If Ucase(JavaWindow("wndCM").JavaDialog("dlgSignIn").JavaEdit("txtOrganization").GetROProperty("text")) = environment.Value("e_LoginAirLine") then 
				CM_SignIn
				On error goto 0
				EnableRecoveryScenario
			   	Exit function 
			Else
			   CM_AppClose
			End If
			
		End If
		
		If JavaWindow("wndCM").exist(1) Then
		 	CM_AppClose
		End If
	
		Common_JFEAutoDownload
		
		JavaWindow("dlgWIDChooser").WaitProperty "text","Workstation ID Chooser",900000
		
		If JavaWindow("dlgWIDChooser").Exist(60) then
			Print "CM JFE Launch OK!"
		Else
			Print "Retrying CM JFE Launch"
			Common_JFEAutoDownload
		End If
		
		If JavaWindow("dlgWIDChooser").Exist(60) then
			Reporter.ReportEvent micPass, "Jfe Launch", " Successful."
			JavaWindow("dlgWIDChooser").JavaEdit("txtAirline").Set s_AirlineCode
			JavaWindow("dlgWIDChooser").JavaList("lstProvider").Select s_Provider
			JavaWindow("dlgWIDChooser").JavaList("lstCityAirport").Select s_CityORAirport
			JavaWindow("dlgWIDChooser").JavaEdit("txtAirport").Set s_AirportORCityCode
			JavaWindow("dlgWIDChooser").JavaList("lstBuildingTerminal").Select s_BuildingORTerminalType
			JavaWindow("dlgWIDChooser").JavaEdit("txtTerminal").Set s_BuildingORTerminalNo
			JavaWindow("dlgWIDChooser").JavaList("lstCategory").Select s_Category
			JavaWindow("dlgWIDChooser").JavaEdit("txtIndex").Set s_Index
			JavaWindow("dlgWIDChooser").JavaEdit("txtLocalID").Set i_LocalID
			JavaWindow("dlgWIDChooser").JavaButton("btnOK").Click
			CM_SignIn
			environment.Value("e_LastLoginAirLine") = environment.Value("e_LoginAirLine")
		Else	
			call Common_CaptureScreenshot("Login Failed",0)
           	environment.Value("e_LoginStatus")=Fal
		End If
	Else
		Common_Report "Attempted Login to " & environment.Value("e_LoginAirLine") & ". Skipping JFE login As the previous login was for the same Airline"		
	End If
End Function

Function CM_SignIn()
		s_Connection=environment.Value("TestEnv_Connection")
		s_AirlineCode=environment.Value("login_Airline")
		s_Provider=environment.Value("login_Provider")
		s_CityORAirport=environment.Value("login_CityORAirport")
		s_AirportORCityCode=environment.Value("login_AirportORCityCode")
		s_BuildingORTerminalType=environment.Value("login_BuildingORTerminalType")
		s_BuildingORTerminalNo=environment.Value("login_BuildingORTerminalNo")
		s_Category=environment.Value("login_Category")
		s_Index=environment.Value("login_Index")
		'i_LocalID=environment.Value("login_LocalID")
		i_LocalID = Common_RandomData(1,5)
		s_UserID=environment.Value("login_UserID")
		s_Password=environment.Value("login_Password")
		s_DutyCode=environment.Value("login_DutyCode")
		s_RemoteOffice=environment.Value("login_RemoteOffice")
		s_lstAuthentication=environment.Value("login_lstAuthentication")
		s_CategoryCode=fetchCategoryValue(s_Category)
		s_WID= s_Provider&"/"&Ucase(left(s_CityORAirport,1))&"/"&s_AirportORCityCode&"/"&Ucase(left(s_BuildingORTerminalType,1))&"/"&s_BuildingORTerminalNo&"/"&"TBD"&"/"&s_Index&"/"&i_LocalID
		
	JavaWindow("wndCM").JavaDialog("dlgSignIn").JavaList("lstConnection").Select s_Connection
	If ucase(s_AirlineCode) = "1A" Then
		JavaWindow("wndCM").JavaDialog("dlgSignIn").JavaEdit("txtUserID").SetSecure s_UserID
	Else
		JavaWindow("wndCM").JavaDialog("dlgSignIn").JavaEdit("txtUserID").Set s_UserID
	End If
	If s_Password<>NULL or s_Password<>"" Then
		JavaWindow("wndCM").JavaDialog("dlgSignIn").JavaEdit("txtPassword").SetSecure s_Password
	End If
	JavaWindow("wndCM").JavaDialog("dlgSignIn").JavaButton("btnAdvanced").Click
	If s_DutyCode<>NULL or s_DutyCode<>"" Then
	   JavaWindow("wndCM").JavaDialog("dlgSignIn").JavaList("lstDutyCode").Select s_DutyCode	
	End If

	If s_lstAuthentication<>NULL or s_lstAuthentication<>"" Then
		SetTimeOutToZero
		if JavaWindow("wndCM").JavaDialog("dlgSignIn").JavaList("lstAuthentication").Exist(1) then
			JavaWindow("wndCM").JavaDialog("dlgSignIn").JavaList("lstAuthentication").select s_lstAuthentication
		End If
		ResetDefaultTimeOut
	End If
	
	If s_RemoteOffice<>NULL or s_RemoteOffice<>"" Then
	   JavaWindow("wndCM").JavaDialog("dlgSignIn").JavaEdit("txtRemoteOffice").Set s_RemoteOffice	
	End If
	Call Common_CaptureScreenshot("Login Credentails Entered",1)
	JavaWindow("wndCM").JavaDialog("dlgSignIn").JavaButton("btnSignIn").Click
	'This is to handle pop-up which may appear on login
	If (s_AirlineCode="KE") or (s_AirlineCode="SQ") or (s_AirlineCode="MI") Then
	    If JavaWindow("wndCM").JavaDialog("wndWarning").Exist(40) then
		    JavaWindow("wndCM").JavaDialog("wndWarning").JavaButton("btnOK").Click
        End If
	End If
	If JavaWindow("wndCM").JavaButton("btnSubscribe").Exist Then
	    JavaWindow("wndAmadeusDeviceSimulator").Minimize
		If JavaWindow("wndCM").JavaButton("btnAdvancedOptions").Exist(2) = false Then
			JavaWindow("wndCM").JavaMenu("mnuApplications").JavaMenu("mnuMyPreferences").Select
			Common_CMScreenCheck "Update Preferences"
			Common_SetTableValue "wndCM","tblInnerTable","COL(0)|Advanced Options:","Agent Preference|Closed"
			JavaWindow("wndCM").JavaButton("btnUpdate").Click
	    End If
		call Common_CaptureScreenshot("Login Successful",1)
		environment.Value("e_LoginStatus")=True
	Else
	   Call Common_CaptureScreenshot("Login Failed",0)
	   environment.Value("e_LoginStatus")=False 
	End If
	If not environment.Value("e_LoginStatus") then
		reporter.ReportEvent micFail,"CM_Login","Login Failed"
		ExitTest
	Else
		JavaWindow("wndCM").Activate  'To facilitate CM window to be active than having simulator window open
		JavaWindow("wndCM").Maximize
		reporter.ReportEvent micPass,"CM_Login","Login Successful"
	End if
End  Function	

Function fetchCategoryValue(sValue)
    Dim objCategory
    Set objCategory = CreateObject("Scripting.Dictionary")
    objCategory.Add "Airport Check In","CKI"
    objCategory.Add "Gate","GTE"
    objCategory.Add "Boarding Monitoring Desk","BMD"
    objCategory.Add "Catering","CAT"
    objCategory.Add "Load Control","LCO"
    objCategory.Add "Lounge","LGE"
    objCategory.Add "Ticket Desk","TKT"
    objCategory.Add "Self Service Kiosk","SSK"
    objCategory.Add "Customer service Desk","CSD"
    objCategory.Add "Airport Back Office","BOF"
    objCategory.Add "Transfer Desk","TRA"
    objCategory.Add "Training","TRN"
    objCategory.Add "Regulatory Authorities","REG"
    objCategory.Add "Cargo","CAR"
    objCategory.Add "Ramp","RAM"
    objCategory.Add "Baggage","BAG"
    objCategory.Add "Passenger Services Facilities","PSF"
    objCategory.Add "Engineering","ENG"
    objCategory.Add "Security","SEC"
    objCategory.Add "Airline Administration","ADM"
    objCategory.Add "Test-bed","TBD"
    
    fetchCategoryValue=Ucase(objCategory(sValue))
End Function

Public Function CM_AppClose()
	
	If JavaWindow("wndCM").Exist(10) Then
		Common_KillGUIApp "1A-Launcher.exe"
	End If
'	If JavaWindow("wndCM").JavaDialog("dlgSignIn").JavaButton("btnExitSignInPage").exist(2) Then
'		JavaWindow("wndCM").JavaDialog("dlgSignIn").JavaButton("btnExitSignInPage").Click
'		If JavaWindow("wndCM").Exist(10) Then
'			Common_KillGUIApp "1A-Launcher.exe"
'		End If
'	Else
'	   JavaWindow("wndCM").JavaMenu("mnuLogoff").JavaMenu("mnuExit").Select
'       	If JavaWindow("wndCM").Exist(10) Then
'			Common_KillGUIApp "1A-Launcher.exe"
'		End If
'	End If
'	
'	If JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaButton("btnYes").Exist(2) then
'		JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaButton("btnYes").click
'		'// to handle task pending pop-up
'		if JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaButton("btnYes").Exist(2) then
'		JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaButton("btnYes").click
'		End If
'	End if
	environment.Value("e_LastLoginAirLine")=""
	Reporter.ReportEvent micPass, "CM_Exit", "CM App closed successfully"

End Function

Public Function CM_Exit()
    
    call CM_GetDocumentCount("ATB",true)
    call CM_GetDocumentCount("BTP",true)
	JavaWindow("wndCM").JavaMenu("mnuLogoff").JavaMenu("mnuLogoff").Select
	If JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaButton("btnYes").Exist(5) then
		JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaButton("btnYes").click
		'// to handle task pending pop-up
		if JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaButton("btnYes").Exist(2) then
		JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaButton("btnYes").click
		End If
	End if
	environment.Value("e_LastLoginAirLine")=""
	Reporter.ReportEvent micPass, "CM_Exit", "CM App closed successfully"

End Function


Public Function CM_LoginCustom()
	'Required ENV vars list before calling this function:
'e_LoginAirLine


	s_ResolutionBatchPath =  "C:\TESTRESOURCES\Resolution"
	Common_FolderCreate s_ResolutionBatchPath
	Common_FolderCleanUp s_ResolutionBatchPath
	Common_DownloadWithPreferance "CMJFECustom.bat",s_ResolutionBatchPath

	Common_FetchLoginProperties environment.Value("e_LoginAirLine")



	Common_KillGUIApp("1A-Launcher.exe")

	
	Common_RunBatch "C:\TESTRESOURCES\Resolution\CMJFECustom.bat"
	' // Launch the CM JFE
	'Common_RunBatch s_CMJFEDir
	
	
	' // Read the Login credentails
	s_Connection=environment.Value("TestEnv_Connection")
	s_AirlineCode=environment.Value("login_Airline")
	s_Provider=environment.Value("login_Provider")
	s_CityORAirport=environment.Value("login_CityORAirport")
	s_AirportORCityCode=environment.Value("login_AirportORCityCode")
	s_BuildingORTerminalType=environment.Value("login_BuildingORTerminalType")
	s_BuildingORTerminalNo=environment.Value("login_BuildingORTerminalNo")
	s_Category=environment.Value("login_Category")
	s_Index=environment.Value("login_Index")
	'i_LocalID=environment.Value("login_LocalID")
	i_LocalID = Common_RandomData(1,5)
	s_UserID=environment.Value("login_UserID")
	s_Password=environment.Value("login_Password")
	s_DutyCode=environment.Value("login_DutyCode")
	s_RemoteOffice=environment.Value("login_RemoteOffice")
	s_lstAuthentication=environment.Value("login_lstAuthentication")
	
	
	JavaWindow("dlgWIDChooser").WaitProperty "text","Workstation ID Chooser",900000
	
	If JavaWindow("dlgWIDChooser").Exist(60) then
	    Reporter.ReportEvent micPass, "Jfe Launch", " Successful."
		JavaWindow("dlgWIDChooser").JavaEdit("txtAirline").Set s_AirlineCode
		JavaWindow("dlgWIDChooser").JavaList("lstProvider").Select s_Provider
		JavaWindow("dlgWIDChooser").JavaList("lstCityAirport").Select s_CityORAirport
		JavaWindow("dlgWIDChooser").JavaEdit("txtAirport").Set s_AirportORCityCode
		JavaWindow("dlgWIDChooser").JavaList("lstBuildingTerminal").Select s_BuildingORTerminalType
		JavaWindow("dlgWIDChooser").JavaEdit("txtTerminal").Set s_BuildingORTerminalNo
		JavaWindow("dlgWIDChooser").JavaList("lstCategory").Select s_Category
		JavaWindow("dlgWIDChooser").JavaEdit("txtIndex").Set s_Index
		JavaWindow("dlgWIDChooser").JavaEdit("txtLocalID").Set i_LocalID
		JavaWindow("dlgWIDChooser").JavaButton("btnOK").Click
	   
	   
		If JavaWindow("wndCM").JavaDialog("dlgSignIn").Exist(10) Then
		    Reporter.ReportEvent micPass, "Enter WID", " Successful."
			JavaWindow("wndCM").JavaDialog("dlgSignIn").JavaList("lstConnection").Select s_Connection
			If ucase(s_AirlineCode) = "1A" Then
				JavaWindow("wndCM").JavaDialog("dlgSignIn").JavaEdit("txtUserID").SetSecure s_UserID
			Else
				JavaWindow("wndCM").JavaDialog("dlgSignIn").JavaEdit("txtUserID").Set s_UserID
			End If
			If s_Password<>NULL or s_Password<>"" Then
				JavaWindow("wndCM").JavaDialog("dlgSignIn").JavaEdit("txtPassword").SetSecure s_Password
			End If
			
			JavaWindow("wndCM").JavaDialog("dlgSignIn").JavaButton("btnAdvanced").Click
			If s_DutyCode<>NULL or s_DutyCode<>"" Then
			   JavaWindow("wndCM").JavaDialog("dlgSignIn").JavaList("lstDutyCode").Select s_DutyCode	
			End If
			If s_RemoteOffice<>NULL or s_RemoteOffice<>"" Then
			   JavaWindow("wndCM").JavaDialog("dlgSignIn").JavaEdit("txtRemoteOffice").Set s_RemoteOffice	
			End If
			If s_lstAuthentication<>NULL or s_lstAuthentication<>"" Then
				SetTimeOutToZero
			   	if JavaWindow("wndCM").JavaDialog("dlgSignIn").JavaList("lstAuthentication").Exist(1) then
			   		JavaWindow("wndCM").JavaDialog("dlgSignIn").JavaList("lstAuthentication").select s_lstAuthentication
			   	End If
				ResetDefaultTimeOut
			End If
			call Common_CaptureScreenshot("Login Credentails Entered",1)
			JavaWindow("wndCM").JavaDialog("dlgSignIn").JavaButton("btnSignIn").Click
			'JavaWindow("wndCM").JavaDialog("dlgSignIn").JavaList("lstAuthentication").Select
	       
	       'This is to handle pop-up which may appear on login
	        If (s_AirlineCode="KE") or (s_AirlineCode="SQ") Then
	           if JavaWindow("wndCM").JavaDialog("wndWarning").Exist(10) then
	           JavaWindow("wndCM").JavaDialog("wndWarning").JavaButton("btnOK").Click
	           End If
	        End If
	        
			If JavaWindow("wndCM").JavaButton("btnSubscribe").Exist Then
			    'JavaWindow("wndCM").JavaButton("btnMaximize").Click
			    JavaWindow("wndAmadeusDeviceSimulator").Minimize
			    
			    If JavaWindow("wndCM").JavaButton("btnAdvancedOptions").Exist(2) = false Then
			    	
			    	
					JavaWindow("wndCM").JavaMenu("mnuApplications").JavaMenu("mnuMyPreferences").Select
					
					Common_CMScreenCheck "Update Preferences"
					 
					Common_SetTableValue "wndCM","tblInnerTable","COL(0)|Advanced Options:","Agent Preference|Closed"
					
					JavaWindow("wndCM").JavaButton("btnUpdate").Click


			    End If
			    
			    
				'Reporter.ReportEvent micPass, "Login", " Successful."
				call Common_CaptureScreenshot("Login Successful",1)
				environment.Value("e_LoginStatus")=True
			End If
	    Else
	       'Reporter.ReportEvent micFail, "Login Failed"
	       call Common_CaptureScreenshot("Login Failed",0)
	       environment.Value("e_LoginStatus")=False
	       
		End If
	
	
	Else
	    call Common_CaptureScreenshot("Login Failed",0)
		environment.Value("e_LoginStatus")=False
	End If
	
	
	if not environment.Value("e_LoginStatus") then
		reporter.ReportEvent micFail,"CM_Login","Login Failed"
		ExitTest
	else
		JavaWindow("wndCM").Activate  'To facilitate CM window to be active than having simulator window open
		reporter.ReportEvent micPass,"CM_Login","Login Successful"
	End if



End Function

'----------------------------------------------------------------------------------------------------------------------------------------------------
'	# Reusable Action CollectPayment
'
' 		~ This Action performs Collecting of payment in JFE based on mode value passed.
'			* Mode 1: Cash
'			* Mode 2: Manually Enter Card


'		~ Usage	 : Direct run or RunAction "CollectPayment [CollectPayment]", oneIteration 
' 		~ Input  : e_ModeOfPayment.
'                 Environment variables based on modes.
'                 for cash mode, set environment variable e_ModeOfPayment = 1
'                 for Manually Enter Card mode, set environment variable e_ModeOfPayment = 2,e_HolderName,e_Vendor,e_CreditCardNo,e_ExpiryDate,e_SecurityCode
'                 e_Vendor= 1 for Visa, 2 for MasterCard
'		~ Output : e_CollectPaymentStatus true or false
'
'	@author		:   Ravi kumar
'	@copyright	:  	2017 Amadeus Services Limited. All rights reserved.
'	@contact	:   ravi.kumar@amadeus.com
'	@deffield	:   Created:29/12/2017  | Last Updated: 
'----------------------------------------------------------------------------------------------------------------------------------------------------
Public Function CM_CollectPayment()
'----------------------------------------------------------------------------------------------------------------------------------------------------
'	# Reusable Action CollectPayment
'
' 		~ This Action performs Collecting of payment in JFE based on mode value passed.
'			* Mode 1: Cash
'			* Mode 2: Manually Enter Card


'		~ Usage	 : Direct run or RunAction "CollectPayment [CollectPayment]", oneIteration 
' 		~ Input  : e_ModeOfPayment.
'                 Environment variables based on modes.
'                 for cash mode, set environment variable e_ModeOfPayment = 1
'                 for Manually Enter Card mode, set environment variable e_ModeOfPayment = 2,e_HolderName,e_Vendor,e_CreditCardNo,e_ExpiryDate,e_SecurityCode
'                 e_Vendor= 1 for Visa, 2 for MasterCard
'		~ Output : e_CollectPaymentStatus true or false
'
'	@author		:   Ravi kumar
'	@copyright	:  	2017 Amadeus Services Limited. All rights reserved.
'	@contact	:   ravi.kumar@amadeus.com
'	@deffield	:   Created:29/12/2017  | Last Updated: 
'----------------------------------------------------------------------------------------------------------------------------------------------------


i_ModeOfPayment=environment.Value("e_ModeOfPayment")
environment.Value("e_CollectPaymentStatus")=False

	Common_CMScreenCheck "Payment Method"
	wait(10)
	'JavaWindow("wndCM").JavaObject("objProcessPaymentScreen").WaitProperty "attached text","PSPT",600000
	
	Select Case i_ModeOfPayment
	' Case one is for the cash payment
		Case 1
'		     wait 1
'		     If JavaWindow("wndCM").InsightObject("insCash").Exist(20) Then
'		     	JavaWindow("wndCM").InsightObject("insCash").Click
'			 Else
'			 	JavaWindow("wndCM").InsightObject("insCash2").Click
'		     End If
'		  
'		     call Common_CaptureScreenshot("Cash Payment selected",2)
				CM_Cash_Payment_UI_Auto
		Case 2
		              CM_InsightCreditCollection
		Case 3
		     s_CreditCardNo=environment.Value("e_CreditCardNo")
		     s_ExpiryDate=environment.Value("e_ExpiryDate")
		     
				 Set WshShell = CreateObject("WScript.Shell")
				 if JavaWindow("wndCM").InsightObject("insManualEntryPayment").exist(20) then 
					JavaWindow("wndCM").InsightObject("insManualEntryPayment").Click
				Else 
					JavaWindow("wndCM").InsightObject("insManualEntryPayment2").Click
				End If
				If JavaWindow("wndCM").InsightObject("insSelect").exist(20) Then
					JavaWindow("wndCM").InsightObject("insSelect").Click
				else
					JavaWindow("wndCM").InsightObject("insSelect2").Click
				End If
			
				Common_CMScreenCheck "Payment Method"
				
				
				If JavaWindow("wndCM").InsightObject("insCreditCardNo").exist(20) Then
					JavaWindow("wndCM").InsightObject("insCreditCardNo").Click
					'JavaWindow("wndCM").InsightObject("insCreditCardNo").DblClick
					WshShell.SendKeys s_CreditCardNo
				ElseIf JavaWindow("wndCM").InsightObject("insCreditCardNoL").Exist(20) Then
					JavaWindow("wndCM").InsightObject("insCreditCardNoL").Click
					'JavaWindow("wndCM").InsightObject("insCreditCardNoL").DblClick
					WshShell.SendKeys s_CreditCardNo
				else
					JavaWindow("wndCM").InsightObject("insCreditCardNo2").Click
					'JavaWindow("wndCM").InsightObject("insCreditCardNo2").DblClick
					WshShell.SendKeys s_CreditCardNo
				End If
				
				If JavaWindow("wndCM").InsightObject("insExpiryDate").exist(20) Then
					JavaWindow("wndCM").InsightObject("insExpiryDate").Click
					WshShell.SendKeys s_ExpiryDate
				ElseIf JavaWindow("wndCM").InsightObject("insExpiryDateL").Exist(20) Then
					JavaWindow("wndCM").InsightObject("insExpiryDateL").Click
					WshShell.SendKeys s_ExpiryDate
				Else
					JavaWindow("wndCM").InsightObject("insExpiryDate2").Click
					WshShell.SendKeys s_ExpiryDate
				End If
			    call Common_CaptureScreenshot("Credit card details entered",2)
				If JavaWindow("wndCM").InsightObject("insProceed").exist(20) Then
					JavaWindow("wndCM").InsightObject("insProceed").Click
				Else
					JavaWindow("wndCM").InsightObject("insProceed2").Click
				End If
				call Common_CaptureScreenshot("Collect Payment Successful",1)
	             ExitAction
	       Case 4 
	           JavaWindow("wndCM").InsightObject("insightHoldRemainingValue").Click

		Case else
		      environment.Value("e_CollectPaymentStatus")=False
		      call Common_CaptureScreenshot("Invalid Data passed",0)
           	  ExitAction
		End Select
		    wait 1
		    

		    If JavaWindow("wndCM").InsightObject("insSelect").exist(20) then
		    	JavaWindow("wndCM").InsightObject("insSelect").click
		    	
		    	If JavaWindow("wndCM").InsightObject("insProceed").exist(20) Then
					JavaWindow("wndCM").InsightObject("insProceed").Click
				Else
					If JavaWindow("wndCM").InsightObject("insProceed2").exist(10) then
						JavaWindow("wndCM").InsightObject("insProceed2").Click
					End if
				End If
		    	
		    End if
		    If JavaWindow("wndCM").InsightObject("insProcessPayment").exist(2) Then
		    	JavaWindow("wndCM").InsightObject("insProcessPayment").Click
		    End If
		    
		    
		    If JavaWindow("wndCM").JavaDialog("dlgError").Exist(2) Then
		    	JavaWindow("wndCM").JavaDialog("dlgError").JavaButton("btnOK").Click
		    	JavaWindow("wndCM").InsightObject("insProcessPayment").Click
		    End If
            call Common_CaptureScreenshot("Collect Payment Successful",1)
			'reporter.ReportEvent micPass,"CollectPayment","Collect Payment Successful"
			environment.Value("e_CollectPaymentStatus")=True




End Function

'===========================================================================================================================================
'               Action Name      : CM_IDCustomer
'               Description      : This is the Action to identify customer based on the below Criteria.
'											Environment("e_IDCType")     ----> Mandatory Param to determine the mode if set to 2 IDC will be by reservation number for eg.	
'								Mode:
'									1. IDC by Last name and first name (below are the Mandatory Params if option 1 is chosen)
'	                                        Environment("e_AirlineCode")
'											Environment("e_FlightNo")
'											Environment("e_DepaturePort")
'											Environment("e_ArrivalPort")
'											Environment("e_PaxFullName")
'											Environment("e_FlightDate")
'
'
'									2. IDC by Reservation Number (below are the Mandatory Params if option 2 is chosen)
'													environment("e_BookingRefNo") <--- Pass PNR to this env var
'
'
'
'									3. IDC by Ticket Number (below are the Mandatory Params if option 3 is chosen)
'													environment("e_TicketNo") <--- Pass E ticket # to this env var
'
'
'
'
'									4. IDC by Group Name (below are the Mandatory Params if option 4 is chosen)
'													environment("e_GroupName") <--- Pass Group Name  to this env var
'													
'									5.IDC by Passport Number,Nationality 
'
'
'
'               Return Type       : envIDCstatus (TRUE/FALSE) set as environment parameter
'               Input Params      : None
'               Owner             : Ravi Kumar
'               Created on        : 13/12/2017
'               Last Updated     : 
'               Updated By        : 
'              Comments          : 
'=============================================================================================================================================

Public Function CM_IDCustomer()



	Dim b_ObjectFound,d_MaxWaitTime
	b_ObjectFound = False
	
	intIDCTypeVal= Environment("e_IDCType")
	
	DisableRecoveryScenario
	on error resume next
	err.clear
	For i_Iterator = 1 To 4 Step 1
		JavaWindow("wndCM").JavaMenu("mnuApplications").JavaMenu("mnuCustomer").Select
		if err.number = 0 then
			i_Iterator = 4
		End if
	Next
	On error goto 0
	EnableRecoveryScenario
	
	
	Common_CMScreenCheck "Customer Identification"
	
	if JavaWindow("wndCM").JavaButton("btnAdvancedOptions").Exist(1) then
		JavaWindow("wndCM").JavaButton("btnAdvancedOptions").Click
	End if
	
	   Select Case intIDCTypeVal
	     Case 1 
	       	strAirlineCode = Environment("e_AirlineCode")
			intFlightNo = Environment("e_FlightNo")
			strDepaturePort = Environment("e_DepaturePort")
			strArrivalPort = Environment("e_ArrivalPort")
			strPaxFullName = Environment("e_PaxFullName")
			strDate = Environment("e_FlightDate")
			
	 		JavaWindow("wndCM").JavaEdit("txtCustomerName").Set strPaxFullName
	 		JavaWindow("wndCM").JavaEdit("txtAirlineCode").Set strAirlineCode
	 		JavaWindow("wndCM").JavaEdit("txtFlightNumber").Set intFlightNo
	 		JavaWindow("wndCM").JavaEdit("txtDate").Set strDate
	 		JavaWindow("wndCM").JavaEdit("txtAirportFrom").Set strDepaturePort
	 		JavaWindow("wndCM").JavaEdit("txtAirportTo").Set strArrivalPort
	 		call Common_CaptureScreenshot("IDC Data Entered",2)
	 	Case 2
	 	
	 		strBookingRefNo= environment.Value("e_BookingRefNo")
	 	    JavaWindow("wndCM").JavaEdit("txtBookingRef").Set strBookingRefNo
	 	    call Common_CaptureScreenshot("Booking RefNo Entered",2)
	 	
	 	Case 3
	 	
	 	  strTicketNo= environment.Value("e_TicketNo")
	 	  JavaWindow("wndCM").JavaEdit("txtTicketnumber").Set strTicketNo
	 	  call Common_CaptureScreenshot("Ticket No Entered",2)
	 	  
	 	Case 4
	 	
	 	 strGroupName= environment.Value("e_GroupName")
	 	 JavaWindow("wndCM").JavaEdit("txtGroupName").Set strGroupName
	 	 call Common_CaptureScreenshot("Group Name Entered",2)
	 	 
	 	Case 5
	 		strAirlineCode = Environment("e_AirlineCode")
			intFlightNo = Environment("e_FlightNo")
			strDepaturePort = Environment("e_DepaturePort")
			strArrivalPort = Environment("e_ArrivalPort")
			strPaxFullName = Environment("e_PaxFullName")
			strDate = Environment("e_FlightDate")
			strNationality=environment("e_Nationality")
			strPassportNumber=environment("e_PassportNumber") 
	 		JavaWindow("wndCM").JavaEdit("txtCustomerName").Set strPaxFullName
	 		JavaWindow("wndCM").JavaEdit("txtAirlineCode").Set strAirlineCode
	 		JavaWindow("wndCM").JavaEdit("txtFlightNumber").Set intFlightNo
	 		JavaWindow("wndCM").JavaEdit("txtDate").Set strDate
	 		JavaWindow("wndCM").JavaEdit("txtAirportFrom").Set strDepaturePort
	 		JavaWindow("wndCM").JavaEdit("txtAirportTo").Set strArrivalPort
	 		JavaWindow("wndCM").JavaEdit("txtPassportNumberNationality").Set strNationality
			JavaWindow("wndCM").JavaEdit("txtPassportNumberIDC").Set  strPassportNumber
	 		call Common_CaptureScreenshot("IDC Data Entered",2)
	 	
	 	Case else
	 		
	 		environment.Value("e_IDCstatus")=False
	 	
	 	End Select
		
	JavaWindow("wndCM").JavaButton("btnIdentify").Click
	
	d_MaxWaitTime = dateadd("s",30,now)
	
	'Setting("DefaultTimeOut") = 0
	SetTimeOutToZero
	Do
		If (JavaWindow("wndCM").JavaButton("btnSelect").Exist(1)) or (JavaWindow("wndCM").JavaButton("btnProceed").Exist(1)) or (JavaWindow("wndCM").JavaButton("btnAccept").Exist(1) or JavaWindow("wndCM").JavaButton("btnBack").Exist(1)) Then
			b_ObjectFound = true
			Exit Do
		End If
	Loop While now < d_MaxWaitTime
	
	ResetDefaultTimeOut
	'Setting("DefaultTimeOut") =  Environment("DefaultTimeOut")
	
	If b_ObjectFound Then
	   	Environment("e_IDCstatus")=True
	   	Common_Report "IDC OK|IDC|PASS"
	Else 
	   Environment("e_IDCstatus")=False
	   Common_Report "IDC Failed|IDC|Fail"
	   exittest
	End If	
	On error goto 0
	EnableRecoveryScenario
End function


'----------------------------------------------------------------------------------------------------------------------------------------------------
'	# Re-Usable Action CM_TriggerFlight_RunFlightActivity CPR and GMAC_OpenFlight
'
' 		~ This Re-usable action do the below task
'		Verify if the flight is triggered, if not triggered it will trigger the flight
'		It run the CPR and GMAC and waits till it is complete
'		It verifies if flight is open if not it will open the flight

'		~ Output : Update test case as pass or fail
'
'	@author		:   Ravi kumar
'	@copyright	:  	2017 Amadeus Services Limited. All rights reserved.
'	@contact	:   ravi.kumar@amadeus.com
'	@deffield	:   Created:01/02/2017  | Last Updated: 
'	
'
'
'	'Mandatory params needed:
'	'environment.Value("e_AirlineCode")
'	'environment.Value("e_FlightNo")
'	'environment.Value("e_FlightDate")
'	'environment.Value("e_DepaturePort")
'	'environment.Value("e_ArrivalPort")
'   'environment.Value("e_LoginAirLine")
'	
'-----------------------------------------------------------------------------------------------------
Public Function CM_TriggerFlight_RunFlightActivity_CPR_and_GMAC_OpenFlight()

	
	
	'Initialization
	s_AirlineCode=environment.Value("e_AirlineCode")
	s_FlightNo=environment.Value("e_FlightNo")
	s_FlightDate=environment.Value("e_FlightDate")
	s_DepAirport=environment.Value("e_DepaturePort")
	s_ArrAirport=environment.Value("e_ArrivalPort")
	s_LoginAirLine=environment.Value("e_LoginAirLine")
	
	
	'Login to the application
	environment.Value("e_LoginAirLine") = s_LoginAirLine
	
	CM_Login
	
	If JavaWindow("wndCM").JavaDialog("wndWarning").JavaButton("btnOK").Exist(5) Then
	   JavaWindow("wndCM").JavaDialog("wndWarning").JavaButton("btnOK").Click
	End If
	
	If environment.Value("e_LoginStatus")=True then
	    DisableRecoveryScenario
	    
	    On Error resume next
	    err.clear
	    For i_Iterator = 1 To 4 Step 1
	    	JavaWindow("wndCM").JavaMenu("mnuApplications").JavaMenu("mnuFlight").Select
	    	if err.number = 0 then
	    		if Common_CMScreenCheck("Enter Flight|10|DONTREPORT") then
	    			i_Iterator = 4
	    		End if
	    	End if
	    Next
	    On Error goto 0
	    
	    EnableRecoveryScenario
	    
	    
		JavaWindow("wndCM").JavaEdit("txtAirlineCode").Set s_AirlineCode
		JavaWindow("wndCM").JavaEdit("txtFlightNumber").Set s_FlightNo
		JavaWindow("wndCM").JavaEdit("txtDate").Set s_FlightDate
		JavaWindow("wndCM").JavaEdit("txtAirportFrom").Set s_DepAirport
		
		JavaWindow("wndCM").JavaButton("btnDisplay").Click
		If not JavaWindow("wndCM").JavaButton("btnAcceptanceFigures").Exist(20) Then
			
			if Common_CMGetCMScreen <> "Flight Information" then
			
				if JavaWindow("wndCM").JavaDialog("wndWarning").Exist (10) then
			    	JavaWindow("wndCM").JavaDialog("wndWarning").JavaButton("btnOK").Click
			    
		             Inv_LoginAndTriggerFlight
			        
			        '' This is check if flight not found cancel flight or inventory fail to launch error occurs exit from function
			        If environment.Value("e_Inv_Login")=False Then
			        	On error goto 0
						EnableRecoveryScenario
			        	Exit function
			        End If
				    JavaWindow("wndCM").JavaMenu("mnuApplications").JavaMenu("mnuFlight").Select
				    Common_CMScreenCheck "Enter Flight|10"
					JavaWindow("wndCM").JavaEdit("txtAirlineCode").Set s_AirlineCode
					JavaWindow("wndCM").JavaEdit("txtFlightNumber").Set s_FlightNo
					JavaWindow("wndCM").JavaEdit("txtDate").Set s_FlightDate
					JavaWindow("wndCM").JavaEdit("txtAirportFrom").Set s_DepAirport
					JavaWindow("wndCM").JavaButton("btnDisplay").Click
					For i = 1 To 5
					   if JavaWindow("wndCM").JavaDialog("wndWarning").Exist (10) then
						    JavaWindow("wndCM").JavaDialog("wndWarning").JavaButton("btnOK").Click
							JavaWindow("wndCM").JavaButton("btnDisplay").Click
							wait 2
					   Else 
					      i = 5 
					   End if 
						
					Next
					
				End if
				
			End If
			
		End if
		If JavaWindow("wndCM").JavaDialog("wndWarning").JavaButton("btnOK").Exist(1) Then
			JavaWindow("wndCM").JavaDialog("wndWarning").JavaButton("btnOK").Click
		End If
		
		Common_CMScreenCheck "Flight Information|10"
		If  Common_CMGetCMScreen <> "Flight Information" then 
			On error goto 0
			EnableRecoveryScenario
		    Exit function	
		End If
			
		'Call the function to update the Flight Activities.
		s_SpecificDPMActivity = Common_EnvVarReplace("e_DMPActivities")
		
		If s_SpecificDPMActivity<>"e_DMPActivities" Then
			
			call Common_CM_DPMActivity(s_SpecificDPMActivity,False)
		Else
			call Common_CM_DPMActivity("1",False)
			call Common_CM_DPMActivity("2",False)
		End If
			 
		Common_CM_FlightUpdate "Acceptance Status","Open" 
			 
			 ' environment.Value("e_FlightActivityName")="1,2,3"
		     'LoadAndRunAction "CM_UpdateFlightActivity","CM_UpdateFlightActivity"
			
		
	End if
	On error goto 0
	EnableRecoveryScenario

End Function

'----------------------------------------------------------------------------------------------------------------------------------------------------
'#  Reusable Action CM_SearchFlight 
'
' 		~ This Reusable Action help search flight

'       ~ Input  : Environment variables  e_AirlineCode, e_FlightDate ,e_FlightNumber and e_From
'		~ Output : Update Action as pass or fail
'
'	@author		:   Sanjeeth Nayak
'	@copyright	:  	2018 Amadeus Services Limited. All rights reserved.
'	@contact	:   
'	@deffield	:   Created:26/12/2017  | Last Updated: 22/11/2018 by Ravi Kumar (ravi.kumar@amadeus.com)
'
'-----------------------------------------------------------------------------------------------------------------------------------------------------

Public Function CM_SearchFlight()


JavaWindow("wndCM").JavaMenu("mnuApplications").highlight
JavaWindow("wndCM").JavaMenu("mnuApplications").JavaMenu("mnuFlight").Select
wait 5
Common_CMScreenCheck("Enter Flight")

JavaWindow("wndCM").JavaEdit("txtAirlineCode").Set Environment("e_LoginAirLine")
JavaWindow("wndCM").JavaEdit("txtDate").Set Environment("e_FlightDate")
JavaWindow("wndCM").JavaEdit("txtFlightNumber").Set Environment("e_FlightNumber")
JavaWindow("wndCM").JavaEdit("txtAirportFrom").Set Environment("e_From")
call Common_CaptureScreenshot("Flight data entered",2)
JavaWindow("wndCM").JavaButton("btnDisplay").Click


If JavaWindow("wndCM").JavaButton("btnAcceptanceFigures").Exist(20) Then
	Common_CaptureScreenshot "Flight Search Complete",1
else
	Common_CaptureScreenshot "Flight Search Failed",0
End If


End Function 
	
Public Function CM_SwitchONLocalPrinting()
	
	JavaWindow("wndCM").JavaMenu("mnuDevice").JavaMenu("mnuLocalPrintMode").Select
	if JavaWindow("wndCM").JavaStaticText("stsLocalPrintMode").Exist(10) then
		Common_Report "Switched to Local Print Mode|Label check for local Printing|PASS"
		Common_SimpleCompare JavaWindow("wndCM").JavaStaticText("stsLocalPrintMode").GetROProperty("attached text") & "~Label Fetched from JFE~","=", "Local Print Mode~Label Expected~"
	Else
		Common_Report "Switched to Local Print Mode|Label check for local Printing|FAIL"
	End if
	
End Function

Public Function CM_SwitchOFFLocalPrinting()
	
	If not (JavaWindow("wndCM").JavaStaticText("stsLocalPrintMode").Exist(10) = True) Then
		
		JavaWindow("wndCM").JavaMenu("mnuDevice").JavaMenu("mnuLocalPrintMode").Select
		
		if JavaWindow("wndCM").JavaStaticText("stsLocalPrintMode").Exist(10) then
			Common_Report "Local Print Mode Switched OFF|Label check for local Printing|PASS"
		Else
			Common_Report "Switched to Local Print Mode|Label check for local Printing|FAIL"
		End if
		
	else
		Common_Report "Already in Local Print OFF Mode|Label check for local Printing|PASS"
	End If
	
	
End Function

'----------------------------------------------------------------------------------------------------------------------------------------------------
'#  Reusable Action CM_BoardingSearchFlight 
'
' 		~ This Reusable Action help search flight for boarding

'       ~ Input  : Environment variables  e_AirlineCode, e_FlightDate ,e_FlightNumber and e_From
'		~ Output : Update Action as pass or fail
'
'	@author		:   Sanjeeth Nayak
'	@copyright	:  	2018 Amadeus Services Limited. All rights reserved.
'	@contact	:   
'	@deffield	:   Created:26/12/2017  | Last Updated: 22/11/2018 by Ravi Kumar (ravi.kumar@amadeus.com)
'
'-----------------------------------------------------------------------------------------------------------------------------------------------------

Public Function CM_BoardingSearchFlight()

    JavaWindow("wndCM").Activate
	DisableRecoveryScenario
	On error resume next
	err.clear
	    JavaWindow("wndCM").JavaMenu("mnuApplications").highlight
		JavaWindow("wndCM").JavaMenu("mnuApplications").JavaMenu("mnuBoarding").Select
	If Err.Number <> 0 Then
		Common_Report "CM_BoardingSearchFlight|select Boarding menu failed|WARNING"
	Else
		Common_Report "mnuBoarding|select mnuBoarding|Done"
	End If
	
	On error goto 0
	EnableRecoveryScenario
Common_CMScreenCheck("Enter Flight")

JavaWindow("wndCM").JavaEdit("txtAirlineCode").Set Environment("e_LoginAirLine")
JavaWindow("wndCM").JavaEdit("txtDate").Set Environment("e_FlightDate")
JavaWindow("wndCM").JavaEdit("txtFlightNumber").Set Environment("e_FlightNumber")
JavaWindow("wndCM").JavaEdit("txtAirportFrom").Set Environment("e_From")
Common_CaptureScreenshot "Flight search data entered",2
JavaWindow("wndCM").JavaButton("btnDisplay").Click

d_MaxWait = DateAdd("s",30, Now)

Do	
	if instr(JavaWindow("wndCM").JavaObject("objBreadCrumbTrail").Object.toString,"Boarding") > 0 then		
		S_ScreenCheck = true
		Common_Report "Boarding screen opened"
		Exit do
	End If
	wait 5
Loop While Now < d_MaxWait

If not S_ScreenCheck Then
	Common_Report "Boarding screen did not open||Fail"
End If
	On error goto 0
	EnableRecoveryScenario
End Function 


Public Function CM_OpenBoarding()



If JavaWindow("wndCM").JavaStaticText("stsBoardingTime").Exist(5) Then
	If JavaWindow("wndCM").JavaButton("btnOpenBoarding").Exist(5) Then
		JavaWindow("wndCM").JavaButton("btnOpenBoarding").Click
		If JavaWindow("wndCM").JavaEdit("txtGate").Exist(10) Then
		JavaWindow("wndCM").JavaEdit("txtGate").Set Environment("e_Gate")
		End If
		JavaWindow("wndCM").JavaButton("btnOpenBoarding").Click
		If JavaWindow("wndCM").JavaButton("btnOpenBoarding").Exist(10) Then
		JavaWindow("wndCM").JavaButton("btnOpenBoarding").Click
		End If
		If JavaWindow("wndCM").JavaDialog("wndWarning").Exist(5) Then
		    wait 1
			JavaWindow("wndCM").JavaDialog("wndWarning").JavaButton("btnOpenBoarding").Click
		End If
		Common_CMMessageAreaCheck "Flight Open for Boarding"
	Else
		Common_Report "Flight Already boarding"
	End If
Else
	Common_Report "Flight Already boarding"
End If


End Function 


Public Function CM_RevertOpenBoarding()

' Environment variables needed by this action:

'None

'Must Be on Boarding Screen


If JavaWindow("wndCM").JavaButton("btnOpenBoarding").exist(5)  Then
	Common_Report "No Need to Revert open Boarding as Boarding is not yet open"
Else

	JavaWindow("wndCM").JavaCheckBox("chkBoarding").Set "ON"
	JavaWindow("wndCM").JavaMenu("mnuRevertOpenBoarding").Select
	JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaButton("btnYes").Click
	'Common_CMMessageAreaCheck "Boarding status reverted to 'Not Open'"
	JavaWindow("wndCM").JavaCheckBox("chkFlight").Set "ON"
'    JavaWindow("wndCM").JavaMenu("mnuChangeGate").Select
	wait 2
	Set keys = CreateObject("Wscript.Shell")
	keys.SendKeys "^{F4}"
	JavaWindow("wndCM").JavaEdit("txtGate").Set ""
	JavaWindow("wndCM").JavaButton("btnConfirm").Click
	Common_CMMessageAreaCheck "Gate(s) has been updated." 
End If



End Function 

'####################################################################                        
'# Written by: Sanjeeth Nayak
'# Date:        02nd Jan 2018                           
'#################################################################### 

' Environment variables needed by this action:

'None

'Must be on Boarding Screen

Public Function CM_DeboardAllPax ()

If JavaWindow("wndCM").JavaButton("btnBoardedList").GetROProperty("enabled") = 1 Then
	JavaWindow("wndCM").JavaButton("btnBoardedList").Click
	i_Rows = cstr(JavaWindow("wndCM").JavaTable("tblBoardedList").GetROProperty("rows"))
	JavaWindow("wndCM").JavaEdit("txtSelectPool").Set "1-" & i_Rows
	JavaWindow("wndCM").JavaButton("btnDeboard").Click
	Common_CMMessageAreaCheck i_Rows & " Customer(s) deboarded"
Else
	Common_Report "None to deboard"
End If

End Function

'===========================================================================================================================================
'               Action Name      : CM_BookingCommercial
'               Description      : This Action is to book customer based on the below Criteria.
'									1. Book a single customer
'									2. Book a customer along with customer.
'									
'               Return Type       : None
'               Input Params      : 
'               Owner             :Sanjeeth
'               Created on        : 20/12/2017
'               Last Updated     : 
'               Updated By        : Rupa
'              Comments          : 
'=============================================================================================================================================
' ENV needed by this action:
'If  "e_BookType"=1
'e_SurName
'e_FirstName
'e_AirlineCode
'e_FlightDate
'e_FlightNo
'e_DepaturePort
'e_ArrivalPort
'e_Class

'If  "e_BookType"=2
'e_SurName
'e_FirstName
'e_InfantSurName
'e_InfantFirstName
'e_AirlineCode
'e_FlightDate
'e_FlightNo
'e_DepaturePort
'e_ArrivalPort
'e_Class

Public Function CM_BookingCommercial()
 intBookTypeVal= Environment("e_BookType")
 Select Case intBookTypeVal
 Case 1 
	JavaWindow("wndCM").JavaMenu("mnuApplications").JavaMenu("mnuCustomer").Select
	JavaWindow("wndCM").JavaButton("btnBookCommercial").Click
	JavaWindow("wndCM").JavaEdit("txtBookCommercialSurname").Set Environment("e_SurName")
	JavaWindow("wndCM").JavaEdit("txtBookCommercialFirstName").Set Environment("e_FirstName")
	Common_SetTableValue "wndCM","tblItinerary","ROW(0)","Col(0)|" & Environment("e_AirlineCode") &"+"& Environment("e_FlightNo") & ";Col(1)|"& Environment("e_Class") &";Col(2)|" & Environment("e_FlightDate") & ";Col(3)|" & Environment("e_DepaturePort") & ";Col(4)|"& Environment("e_ArrivalPort")
	JavaWindow("wndCM").JavaButton("btnCreate").Click
	
 Case 2
    JavaWindow("wndCM").JavaMenu("mnuApplications").JavaMenu("mnuCustomer").Select
	JavaWindow("wndCM").JavaButton("btnBookCommercial").Click
	JavaWindow("wndCM").JavaEdit("txtBookCommercialSurname").Set Environment("e_SurName")
	JavaWindow("wndCM").JavaEdit("txtBookCommercialFirstName").Set Environment("e_FirstName")
	JavaWindow("wndCM").JavaList("lstWithInfant").Select "Yes"
    JavaWindow("wndCM").JavaEdit("txtInfantSurname").Set Environment("e_InfantSurName")
    JavaWindow("wndCM").JavaEdit("txtInfantFirstName").Set Environment("e_InfantFirstName")
    Common_SetTableValue "wndCM","tblItinerary","ROW(0)","Col(0)|" & Environment("e_AirlineCode") &"+"& Environment("e_FlightNo") & ";Col(1)|"& Environment("e_Class") &";Col(2)|" & Environment("e_FlightDate") & ";Col(3)|" & Environment("e_DepaturePort") & ";Col(4)|"& Environment("e_ArrivalPort")
	JavaWindow("wndCM").JavaButton("btnCreate").Click
 Case else
 	Common_Report "Improper select value or e_BookType mentioned doesn't exist||Fail"	
 End Select
If Common_CMScreenCheck("Customer Acceptance") then
	Common_Report "Customer Creation Completed|CM_BookingCommercial|Pass"
else
	Common_Report "Error during Customer Creation|CM_BookingCommercial|Fail"
End If

End Function 

'----------------------------------------------------------------------------------------------------------------------------------------------------
'# Re-usable action :Update_Flight
'
'	Objective:	To update the Acceptance status as per the input provided. Future Verify the Acceptance Status in Flight Status Table,Flight banner and verify the Update message
'   Input: environment.Value("e_ListAndStatus")  e.g environment.Value("Acceptance Status|OPEN") 
'	~ Output : Update test case as pass or fail
'  
'	@author		:   Rupawati,Ravi kumar
'	@copyright	:  	2018 Amadeus Services Limited. All rights reserved.
'	@contact	:   Rupawathi.BOKKA@amadeus.com,ravi.kumar@amadeus.com
'	@deffield	:   Created:28/08/2018  | Last Updated: Ravi Kumar
'
'-----------------------------------------------------------------------------------------------------------------------------------------------------

Public Function CM_UpdateFlight()

Dim a_ListAndStatus
Dim lstname


e_ListItemName=environment.Value("e_ListAndStatus") 

a_ListAndStatus=split(e_ListItemName,"|")

	
Common_CMScreenCheck("Flight Information")

JavaWindow("wndCM").JavaButton("btnFlightUpdate").Click

if Common_CMScreenCheck("Flight Update") then
        Select Case a_ListAndStatus(0)
         Case "Acceptance Status"
         lstname="lstAcceptanceStatus"
         Case else
         Common_Report "Please Select the appropriate weblist||Fail"
         ExitSelect
         End select
	                            
	 	strSelected=JavaWindow("wndCM").JavaList(lstname).GetROProperty("value")
	 	if strSelected=Ucase(a_ListAndStatus(1)) THEN
	 		Common_Report "The Acceptance status is already "&strSelected
	 		JavaWindow("wndCM").JavaButton("btnExit").Click
        End iF
	 	if not strSelected=Ucase(a_ListAndStatus(1)) THEN
 			 JavaWindow("wndCM").JavaList(lstname).Select Ucase(a_ListAndStatus(1))
          ' The validation part if the selectList is Selected with proper status or not.
           strSelected=JavaWindow("wndCM").JavaList(lstname).GetROProperty("value")
           intCompare = StrComp(a_ListAndStatus(1),strSelected, vbTextCompare)
           s_RequiredStatus=a_ListAndStatus(1)
               If intCompare = 0 Then
               Common_Report "The Acceptance status is selected as "& s_RequiredStatus&"||Pass"
               Else
               Common_Report "The status is not selected accordingly.Please check||Fail"
               End If
           JavaWindow("wndCM").JavaButton("btnUpdate").Click
           Common_CMScreenCheck("Flight Information")
           Common_CMMessageAreaCheck("Acceptance Status has been changed to "& Ucase(a_ListAndStatus(1)))
           If a_ListAndStatus(0) = "Acceptance Status" Then
               'To the Acceptance status is corrected update in the Flight status table 
	           s_Status=UCase(Left(a_ListAndStatus(1), 1)) &  Lcase(Mid(a_ListAndStatus(1), 2))
			   Common_ValidateTableValues "wndCM","tblFlightStatus","Row(0)","Acceptance|"&s_Status
                
                'To verify the Flight banner Acceptance status is updated.
				s_AccStatus=JavaWindow("wndCM").JavaStaticText("stsAcceptanceStatus").GetROProperty ("attached text")
				if Common_SimpleCompare("Acceptance "&s_Status,"=",s_AccStatus &"~Validation: Flight banner acceptance status Validation is done.~") then
				   Common_Report "Flight banner show acceptance as "&s_AccStatus&"|Flight banner|PASS"
				Else
				   Common_Report "Flight banner show acceptance as "&s_AccStatus&"|Flight banner|Fail"
				End if
			   
           End If
          
           ELSE
           Common_Report "The status is with updated Status"
           End If 
         
      
Else
 Common_Report "The page Flight update is not launched||Fail"

End If

End Function



Public Function CM_CheckFlight()
'----------------------------------------------------------------------------------------------------------------------------------------------------
'	# Function CM_CheckFlight
'
' 		~ This Function verify if the flight is triggered or not, if not triggered, it will trigger the flight.

'		~ Output : Update test case as pass or fail
'
'	@author		:   Ravi kumar
'	@copyright	:  	2019 Amadeus Services Limited. All rights reserved.
'	@contact	:   ravi.kumar@amadeus.com
'	@deffield	:   Created:22/08/2019  | Last Updated: 
'	
'	'Mandatory params needed:
'	'environment.Value("e_AirlineCode")
'	'environment.Value("e_FlightNo")
'	'environment.Value("e_FlightDate")
'	'environment.Value("e_DepaturePort")
'-----------------------------------------------------------------------------------------------------

s_AirlineCode=environment.Value("e_AirlineCode")
s_FlightNo=environment.Value("e_FlightNo")
s_FlightDate=environment.Value("e_FlightDate")
s_DepAirport=environment.Value("e_DepaturePort")
s_LoginAirLine=environment.Value("e_LoginAirLine")


'Login to the application
environment.Value("e_LoginAirLine") = s_LoginAirLine

JavaWindow("wndCM").JavaMenu("mnuApplications").highlight
JavaWindow("wndCM").JavaMenu("mnuApplications").JavaMenu("mnuFlight").Select
Common_CMScreenCheck "Enter Flight|10"
JavaWindow("wndCM").JavaEdit("txtAirlineCode").Set s_AirlineCode
JavaWindow("wndCM").JavaEdit("txtFlightNumber").Set s_FlightNo
JavaWindow("wndCM").JavaEdit("txtDate").Set s_FlightDate
JavaWindow("wndCM").JavaEdit("txtAirportFrom").Set s_DepAirport
JavaWindow("wndCM").JavaButton("btnDisplay").Click
SetTimeOutToZero
if JavaWindow("wndCM").JavaDialog("wndWarning").Exist (10) then
	JavaWindow("wndCM").JavaDialog("wndWarning").JavaButton("btnOK").Click
	environment.Value("e_FlightNo")=s_FlightNo
	Inv_LoginAndTriggerFlight
	For i = 1 To 10
		JavaWindow("wndCM").JavaButton("btnDisplay").Click
		if JavaWindow("wndCM").JavaDialog("wndWarning").Exist (10) then
		    JavaWindow("wndCM").JavaDialog("wndWarning").JavaButton("btnOK").Click
			wait 2
	    Else 
     	    i = 10 
	    End if
	Next   
End if
ResetDefaultTimeOut

if Common_CMScreenCheck("Flight Information") then
   Common_Report "The flight no "&s_AirlineCode&s_FlightNo&"is available in CM||Pass"
else   
   Common_Report "The flight no "&s_AirlineCode&s_FlightNo&"is not available in CM||Fail"
End If
CM_CloseAllTabs

End Function


Public Function CM_CloseAllTabs()
'---------------------------------------------------------------------------------------------------------------------------------------------
'	# Reusable Action CM_CloseAllTabs
'
' 		~ This Action closes all the Open CM tabs Except Message

'		~ Output : Update test case as pass or fail
'
'	@author		:   Ravi kumar
'	@copyright	:  	2017 Amadeus Services Limited. All rights reserved.
'	@contact	:   ravi.kumar@amadeus.com
'	@deffield	:   Created:03/01/2017  | Last Updated: 
'
'---------------------------------------------------------------------------------------------------------------------------------------------------

If JavaWindow("wndCM").Exist(1) Then
	
	JavaWindow("wndCM").JavaMenu("mnuNavigation").JavaMenu("mnuCloseFiles").Select
	
	If JavaWindow("wndCM").JavaDialog("dlgCloseFiles").Exist(3) Then
		JavaWindow("wndCM").JavaDialog("dlgCloseFiles").JavaButton("btnSelectAll").Click
		JavaWindow("wndCM").JavaDialog("dlgCloseFiles").JavaCheckBox("chkMessenger").Set "OFF"
		JavaWindow("wndCM").JavaDialog("dlgCloseFiles").JavaButton("btnOK").Click
		call Common_CaptureScreenshot("All Tabs closed",1)
	else
	    call Common_CaptureScreenshot("All Tabs closed failed",0)
	End If
  
Else
   call Common_CaptureScreenshot("CM_CloseAllTabs",0)
    
End If
End Function



'----------------------------------------------------------------------------------------------------------------------------------------------------
' i_CountWithClosure = CM_GetDocumentCount("ATB",true)   ----->Closes all the boarding passes and gets the count
' i_CountWithoutClosure = CM_GetDocumentCount("ATB",false)   ----->Gets all the boarding passes without closing them

' i_CountWithClosure = CM_GetDocumentCount("BTP",true)   ----->Closes all the Bagtagss and gets the count
' i_CountWithoutClosure = CM_GetDocumentCount("BTP",false)   ----->Gets all the Bagtagss without closing them
'
'	@author		:   Sanjeeth Nayak
'	@copyright	:  	2018 Amadeus Services Limited. All rights reserved.
'	@contact	:   
'	@deffield	:  
'
'-----------------------------------------------------------------------------------------------------------------------------------------------------


Public Function CM_GetDocumentCount(s_DocType,b_closureFlag)
	On error resume next
	err.clear
	DisableRecoveryScenario
	b_closureFlag = cbool(b_closureFlag)
	If err.number = 13 Then
		Reporter.ReportEvent micWarning,"CM_GetDocumentCount", "Second param must be either true or false. It only accepts boolean value. Considering as false as of now and giving only the doc count"
		b_closureFlag
	End If
	On error goto 0
	EnableRecoveryScenario
	CM_GetDocumentCount = 0
	i_closed_count = 0
	For Doc_Iterator = 0 To 100 Step 1
		Reporter.Filter = rfEnableErrorsAndWarnings
		if JavaWindow("to_class:=JavaWindow","title:="&s_DocType&".*","index:="&Doc_Iterator).exist(0.05) then
			if JavaWindow("to_class:=JavaWindow","title:="&s_DocType&".*","index:="&Doc_Iterator).JavaMenu("to_class:=JavaMenu","label:=File").JavaMenu("to_class:=JavaMenu","label:=Close").exist(0.05) then
				Reporter.Filter = rfEnableAll
				If b_closureFlag Then
					JavaWindow("to_class:=JavaWindow","title:="&s_DocType&".*","index:="&Doc_Iterator).JavaMenu("to_class:=JavaMenu","label:=File").JavaMenu("to_class:=JavaMenu","label:=Close").select
					Doc_Iterator = Doc_Iterator - 1
				End If
				i_closed_count = i_closed_count + 1
			End If
		else
			Doc_Iterator = 101
		End If
	Next
	CM_GetDocumentCount = i_closed_count
	Select Case s_DocType
		Case "ATB"
			s_Description = "Boarding passes"
		Case "BTP"
			s_Description = "Bag Tags"
		Case Else
			s_Description = s_DocType
	End Select
	Reporter.ReportEvent micDone, s_Description&" Count", i_closed_count &" "&  s_Description & " found"
	If b_closureFlag Then
		Reporter.ReportEvent micDone,  s_Description&" Closure", i_closed_count &" "& b_closureFlag &" found and Closed"
	End If
	Reporter.Filter = rfEnableAll
	On error goto 0
	EnableRecoveryScenario
End Function



'----------------------------------------------------------------------------------------------------------------------------------------------------
'	CM_TransferInfoValidation("6X9872 LHR-NCE","6X9072 LHR-NCE")    ---->Exactcly same text which is displayed in the 
'
'	@author		:   Sanjeeth Nayak
'	@copyright	:  	2018 Amadeus Services Limited. All rights reserved.
'	@contact	:   
'	@deffield	:  
'
'-----------------------------------------------------------------------------------------------------------------------------------------------------
 Public Function CM_TransferInfoValidation(s_FromFlightText,s_ToFlightText)

	 
	 If Common_CMScreenCheck("Transfer Result") Then
	 
	 	
		If JavaWindow("wndCM").JavaStaticText("stsOriginalJourneyInfo").Exist(3) then
		 
	 		s_originalFlightInfo = Common_StripeHTML(replace(replace(JavaWindow("wndCM").JavaStaticText("stsOriginalJourneyInfo").GetROProperty("attached text"),"<&nbsp;"," "),"&nbsp;"," "))
	 		Common_SimpleCompare s_FromFlightText, "IN", s_originalFlightInfo&"~Data Extracted from JFE~"
	 		
	 	Else
	 	
	 		Common_Report ("Transfer Result|Unable to find Original Flight Info Object|Fail")
	 		
	 	End If
	 	
	 	If JavaWindow("wndCM").JavaStaticText("stsRequestedJourneyInfo").Exist(3) then
	 	
		 	s_ToFlightInfo = Common_StripeHTML(replace(replace(JavaWindow("wndCM").JavaStaticText("stsRequestedJourneyInfo").GetROProperty("attached text"),"<&nbsp;"," "),"&nbsp;"," "))
	 		Common_SimpleCompare s_ToFlightText, "IN", s_ToFlightInfo&"~Data Extracted from JFE~"
	 		
	 	Else
	 	
	 		Common_Report ("Transfer Result|Unable to find Requested Flight Info Object|Fail")
	 	
	 	End If
	 
	 End If

 	
 End Function
 
 
 'Syntax:
 'Common_CopyBuild "\\nceshtalm0807.etv.nce.amadeus.net\GATI-Installers\TESTRESOURCES\CMJFESync\LatestCMBuild\CustomerManagement","C:\TESTRESOURCES\CMJFESync\LatestCMBuild\CustomerManagement", "CM"
 public function Common_CopyBuild (byval s_Source, byVal s_destin, byVal s_AppName)
	
	If s_AppName = "CM" Then
		
		Common_KillGUIApp "1A-Launcher.exe"
	End If
	Common_RunBatch "RD /S /Q "&s_destin
	
	Common_RunBatch "robocopy "&s_Source&" "&s_destin&" /MIR"

End function



Function Kiosk_Acceptance
	'===========================================================================================================================================
'             Action Name      : Kiosk_Acceptance
'             Description      : This is the Action to accept a customer on SSCI Web Application.
'			
'             Input Params      : None
'             Owner             : Ajanth Nayak
'             Created on        : 19/12/2017
'             Last Updated      : 
'             
Updated By        : 
'             Comments          : 
'=============================================================================================================================================
Dim mode_Maximized
mode_Maximized = 3 'Open in maximized mode

SystemUtil.Run "iexplore", "https://checkin.si.amadeus.net/static/DEV/testpage/AirlineCustomizationPortal.html#", , ,mode_Maximized

If Browser("brwSSCI").Page("pgeSSCI").WebButton("btnLoginButton").Exist(60) Then
	strSSCIUsername= environment.Value("e_SSCIUsername")
	strSSCIPassword= environment.Value("e_SSCIPassword")
	
	If Browser("brwSSCI").Page("pgeSSCI").WebEdit("txtUsername").exist(10) Then
	Browser("brwSSCI").Page("pgeSSCI").WebEdit("txtUsername").Set strSSCIUsername
	Browser("brwSSCI").Page("pgeSSCI").WebEdit("txtPassword").Set strSSCIPassword
	Browser("brwSSCI").Page("pgeSSCI").WebButton("btnLoginButton").Click
	End If
End If

strSSCIAirline= environment.Value("e_SSCIAirline")
Browser("brwSSCI").Page("pgeSSCI").WebList("lstAirlineDropdown").Select strSSCIAirline
Browser("brwSSCI").Page("pgeSSCI").WebElement("wbeEnvironmentPDT").Click
Browser("brwSSCI").Page("pgeSSCI").WebElement("wbeProductKiosk").Click
Browser("brwSSCI").Page("pgeSSCI").WebButton("btnStartfromIdentificationButton").Click

strBoardingDate=environment.Value("e_BoardingDate")
strBoardingTime=environment.Value("e_BoardingTime")
strAirlineTitle = environment.Value("e_AirlineTitle")

Browser("brwKioskCheckIn").SetTOProperty "title",strAirlineTitle
'Browser("brwKioskCheckIn").Page("pgeKIOSK").WebEdit("txtBoardingDate").WaitProperty "name","fakeDate",900000

If Browser("brwKioskCheckIn").Page("pgeKIOSK").WebEdit("txtBoardingDate").Exist(5) Then
	Browser("brwKioskCheckIn").Page("pgeKIOSK").WebEdit("txtBoardingDate").Set strBoardingDate
End If

Browser("brwKioskCheckIn").Page("pgeKIOSK").WebEdit("txtBoardingHour").Set strBoardingTime
Browser("brwKioskCheckIn").Page("pgeKIOSK").WebButton("btnInitialPageOKButton").Click

If Browser("brwKioskCheckIn").Page("pgeKIOSK").WebTable("tblDangerousGoodsButton").Exist(2) Then
	Browser("brwKioskCheckIn").Page("pgeKIOSK").WebTable("tblDangerousGoodsButton").Click
End If

Browser("brwKioskCheckIn").Page("pgeKIOSK").WebElement("wbeBookingRefButton").Click

strSSCIBookingRefNo= environment.Value("e_SSCIBookingRefNo")
Browser("brwKioskCheckIn").Page("pgeKIOSK").WebEdit("txtPNRNumber").Set strSSCIBookingRefNo
Browser("brwKioskCheckIn").Page("pgeKIOSK").WebElement("wbePNRContinueButton").Click

'''Browser("brwKioskCheckIn").Page("pgeKIOSK").WebElement("wbeConfirmCheckinButton").Click

Set Obj=Browser("brwKioskCheckIn").Page("pgeKIOSK").Object.body
Obj.doScroll("pageDown")
strDocType= environment.Value("e_DocumentType")
strDocStream= environment.Value("e_DocumentStream")
Wait(3)
If Browser("brwKioskCheckIn").Page("pgeKIOSK").WebList("lstDeviceTypeDropdown").Exist(10) Then
	Browser("brwKioskCheckIn").Page("pgeKIOSK").WebList("lstDeviceTypeDropdown").Select strDocType
End If
Wait(2)
If Browser("brwKioskCheckIn").Page("pgeKIOSK").WebEdit("txtDeviceInput").Exist(10) Then
	Browser("brwKioskCheckIn").Page("pgeKIOSK").WebEdit("txtDeviceInput").Set strDocStream
End If
Wait(2)
If Browser("brwKioskCheckIn").Page("pgeKIOSK").WebButton("btnSubmitSwipeData").Exist(10) Then
	Browser("brwKioskCheckIn").Page("pgeKIOSK").WebButton("btnSubmitSwipeData").Click
End If
If Browser("brwKioskCheckIn").Page("pgeKIOSK").WebElement("wbeContinueWithPassengerButton").Exist(10) Then
	Browser("brwKioskCheckIn").Page("pgeKIOSK").WebElement("wbeContinueWithPassengerButton").Click
End If

If Browser("brwKioskCheckIn").Page("pgeKIOSK").WebElement("wbeCheckInWithPassenger").Exist(10) Then
        Browser("brwKioskCheckIn").Page("pgeKIOSK").WebElement("wbeCheckInWithPassenger").Click
End If
If Browser("brwKioskCheckIn").Page("pgeKIOSK").WebElement("wbeConfirmCheckinButton").Exist(10) Then
        Browser("brwKioskCheckIn").Page("pgeKIOSK").WebElement("wbeConfirmCheckinButton").Click
End If

If Browser("brwKioskCheckIn").Page("pgeKIOSK").WebElement("wbeContinueWithPassengerButton").Exist(10) Then
	Browser("brwKioskCheckIn").Page("pgeKIOSK").WebElement("wbeContinueWithPassengerButton").Click
End If

If Browser("brwKioskCheckIn").Page("pgeKIOSK").WebElement("wbePopUpConfirm").Exist(10) Then
	Browser("brwKioskCheckIn").Page("pgeKIOSK").WebElement("wbePopUpConfirm").Click
End If

If Browser("brwKioskCheckIn").Page("pgeKIOSK").WebElement("wbeNoBaggageConfirmation").Exist(10) Then
	Browser("brwKioskCheckIn").Page("pgeKIOSK").WebElement("wbeNoBaggageConfirmation").Click
End If

If Browser("brwKioskCheckIn").Page("pgeKIOSK").WebElement("wbeBPContinueButton").Exist(10) Then
	Browser("brwKioskCheckIn").Page("pgeKIOSK").WebElement("wbeBPContinueButton").Click
End If

If Browser("brwKioskCheckIn").Page("pgeKIOSK").WebElement("wbeBPContinueButton").Exist(20) Then
	Browser("brwKioskCheckIn").Page("pgeKIOSK").WebElement("wbeBPContinueButton").Click
End If

If Browser("brwKioskCheckIn").Page("pgeKIOSK").WebElement("wbeFinishButton").Exist(10) Then
	Browser("brwKioskCheckIn").Page("pgeKIOSK").WebElement("wbeFinishButton").Click
End If
If Browser("brwSSCI").Page("pgeSSCI").WebButton("btnLogout").Exist(10) Then
	Browser("brwSSCI").Page("pgeSSCI").WebButton("btnLogout").Click
End If
If Browser("brwSSCI").Exist(10) Then
	Browser("brwSSCI").Close
End If
If Browser("brwKioskCheckIn").Exist(10) Then
	Browser("brwKioskCheckIn").Close
End If



End Function

 Function CM_SearchFlightBoarding
 	
 	
	'####################################################################                        
'# Written by: Sanjeeth Nayak
'# Date:        02nd Jan 2018                           
'#################################################################### 

' Environment variables needed by this action:

'e_AirlineCode
'e_FlightDate
'e_FlightNumber
'e_From


JavaWindow("wndCM").JavaMenu("mnuApplications").JavaMenu("mnuBoarding").Select

JavaWindow("wndCM").JavaEdit("txtAirlineCode").Set Environment("e_LoginAirLine")

JavaWindow("wndCM").JavaEdit("txtDate").Set Environment("e_FlightDate")

JavaWindow("wndCM").JavaEdit("txtFlightNumber").Set Environment("e_FlightNumber")

JavaWindow("wndCM").JavaEdit("txtAirportFrom").Set Environment("e_From")

JavaWindow("wndCM").JavaButton("btnDisplay").Click

d_MaxWait = DateAdd("s",30, Now)

Do	
	if instr(JavaWindow("wndCM").JavaObject("objBreadCrumbTrail").Object.toString,"Boarding") > 0 then		
		S_ScreenCheck = true
		Common_Report "Boarding screen opened"
		Exit do
	End If
	wait 5
Loop While Now < d_MaxWait

If not S_ScreenCheck Then
	Common_Report "Boarding screen did open||Fail"
End If

End Function


	'####################################################################                        
'# Written by: Ashwini Telang
'# Date:        28 July 2021                           
'#################################################################### 

' Environment variables needed by this action:

'e_AirlineCode
'e_FlightDate
'e_FlightNumber
'e_From
' sBagInfo : Pass "yes" for pax with bag and "No" for pax withou bag
' recloc : PNR or booking reference number
Function CM_Acceptance(recloc, sBagInfo,sNoOfCustomer)
	
		'' Set different dynamic waits for diffrent enviroment
		If ucase(Environment("TestEnv_Connection"))="DEV" Then
			sGenericWait=15
			sMoreWait=60
		Else
			sGenericWait=5
			sMoreWait=30
		End If
		
		environment.Value("e_BookingRefNo")= recloc
		environment.Value("e_IDCType") = 2
		
		CM_IDCustomer
		
			If JavaWindow("wndCM").JavaButton("btnSelect").Exist(sGenericWait) Then
				If JavaWindow("wndCM").JavaEdit("txtSelectCus").GetROProperty("text")="" Then
					JavaWindow("wndCM").JavaEdit("txtSelectCus").Set "1-"&sNoOfCustomer
		        End If
		        JavaWindow("wndCM").JavaButton("btnSelect").Click
			End If
			
			Common_CMScreenCheck "Customer Acceptance"
			
			If JavaWindow("wndCM").JavaEdit("txtSelectCustomer").GetROProperty("text")="" Then
				JavaWindow("wndCM").JavaEdit("txtSelectCustomer").Set "1-"&sNoOfCustomer
	   		End If
			If JavaWindow("wndCM").JavaList("lstOverride").Exist(sGenericWait) Then
				JavaWindow("wndCM").JavaList("lstOverride").Select "Yes"
				JavaWindow("wndCM").JavaButton("btnProceed").Click
			End If
			If JavaWindow("wndCM").JavaList("lstGender").Exist(10) Then
				JavaWindow("wndCM").JavaList("lstGender").Select "Male"
                            JavaWindow("wndCM").JavaButton("btnConfirm").Click
			End If
			If JavaWindow("wndCM").JavaList("lstCollect").Exist(sGenericWait) Then
				JavaWindow("wndCM").JavaList("lstCollect").Select "Skip"
				JavaWindow("wndCM").JavaButton("btnProceed").Click
			End If
			a_GetCurrentScreenText= JavaWindow("wndCM").JavaStaticText("stsScreenText").GetROProperty("text")
			   If instr(a_GetCurrentScreenText,"Passport")>0 Then
				JavaWindow("wndCM").JavaButton("btnProceed").Click
				For Iterator = 1 To sNoOfCustomer Step 1
					If JavaWindow("wndCM").JavaButton("btnConfirm").Exist(sGenericWait) Then
						If JavaWindow("wndCM").JavaEdit("txtNationality").Exist(5) Then
							txtNationality=JavaWindow("wndCM").JavaEdit("txtNationality").GetROProperty("text" )
							If JavaWindow("wndCM").JavaEdit("txtCountryOfResidence").Exist(5) Then
								If JavaWindow("wndCM").JavaEdit("txtCountryOfResidence").GetROProperty("text")=""Then
									JavaWindow("wndCM").JavaEdit("txtCountryOfResidence").Set txtNationality
								End If
							End If
							If JavaWindow("wndCM").JavaList("lstDeclined").Exist(1) Then
								JavaWindow("wndCM").JavaList("lstDeclined").Select "Yes"
							End If
							If JavaWindow("wndCM").JavaList("lstInternationalTransit").Exist(1) Then
								JavaWindow("wndCM").JavaList("lstInternationalTransit").Select "Yes"
							End If
						End If
						CM_DynamicSync
						 JavaWindow("wndCM").JavaButton("btnConfirm").Click
						 CM_DynamicSync
						 If JavaWindow("wndCM").JavaDialog("wndWarning").JavaButton("btnOK").Exist(sGenericWait) Then
						 	JavaWindow("wndCM").JavaDialog("wndWarning").JavaButton("btnOK").Click
						 End If
						 CM_DynamicSync
						  If JavaWindow("wndCM").JavaButton("btnConfirm").Exist(sGenericWait) Then
						  	If JavaWindow("wndCM").JavaDialog("wndWarning").JavaButton("btnOK").Exist(sGenericWait) Then
						 		JavaWindow("wndCM").JavaDialog("wndWarning").JavaButton("btnOK").Click
							 End If
						  End If
					      End If
				Next
				
			End If
			If ucase(environment("e_AirlineCode"))="6X" Then
				Common_CMMessageAreaCheck "US AQQ/iAPP status - ok to board."
			End If
		
		a_GetCurrentScreenText= JavaWindow("wndCM").JavaStaticText("stsScreenText").GetROProperty("text")
			   If instr(a_GetCurrentScreenText,"Health")>0 Then
				  JavaWindow("wndCM").JavaButton("btnProceed").Click
			 	 JavaWindow("wndCM").JavaEdit("txtEscortsurname1").Set "Y"
			 	  JavaWindow("wndCM").JavaButton("btnConfirm").Click
			 	  wait 3
			  a_GetCurrentScreenName = split(replace(replace(replace(JavaWindow("wndCM").JavaObject("objBreadCrumbTrail").Object.toString, ",,","~|~"),",","~|~"),":","~|~"),"~|~")
			  If Trim(a_GetCurrentScreenName(ubound(a_GetCurrentScreenName)))="Check Requirements" Then
			         JavaWindow("wndCM").JavaEdit("txtEscortsurname1").Set "Y"
			          JavaWindow("wndCM").JavaButton("btnConfirm").Click
			         
			  End If
			          Common_CMScreenCheck "Customer Acceptance"
			          JavaWindow("wndCM").JavaEdit("txtSelectCustomer").Set "1-"&sNoOfCustomer
			  End If
			  
		If JavaWindow("wndCM").JavaList("lstCustomerhasbags").exist(3) Then
			JavaWindow("wndCM").JavaList("lstCustomerhasbags").Select sBagInfo
		End If		
		
		
		if JavaWindow("wndCM").JavaButton("btnProceed").Exist(10) Then
				JavaWindow("wndCM").JavaButton("btnProceed").Click
		End If
			If JavaWindow("wndCM").JavaList("lstGender").Exist(10) Then
				JavaWindow("wndCM").JavaList("lstGender").Select "Male"
                            JavaWindow("wndCM").JavaButton("btnConfirm").Click
			End If
		
		JavaWindow("wndCM").JavaButton("btnAccept").Click
		
		  '' To handle emergency seat
			If JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaEdit("txtSelect").Exist(sGenericWait) Then
				JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaEdit("txtSelect").Set "1"
				if JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaButton("btnOK").Exist(sGenericWait) then
				   JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaButton("btnOK").Click
				End if 	
			End If
	
			 
		'Check for Security and Dangerous Goods question pop-up
		if JavaWindow("wndCM").JavaDialog("dlgQuestion").Exist(sMoreWait) then
		    ''s_DsrtrVal=JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaStaticText("stsPopupText0").GetROProperty("text")
			if JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaEdit("txtEnterYorN").Exist(sGenericWait) then
		       	JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaEdit("txtEnterYorN").Set "N"
		       	JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaButton("btnOK").Click
		    End if
		    
		    '' To handle emergency seat
			If JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaEdit("txtSelect").Exist(sGenericWait) Then
				JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaEdit("txtSelect").Set "1"
				if JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaButton("btnOK").Exist(sGenericWait) then
				   JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaButton("btnOK").Click
				End if 	
			End If
			
		End if
		
		wait 3
		  a_GetCurrentScreenName = split(replace(replace(replace(JavaWindow("wndCM").JavaObject("objBreadCrumbTrail").Object.toString, ",,","~|~"),",","~|~"),":","~|~"),"~|~")
			  If Trim(a_GetCurrentScreenName(ubound(a_GetCurrentScreenName)))="Customer Selection for Payment" Then
				   	JavaWindow("wndCM").JavaButton("btnExit").click
			   End If 
			   
		If JavaWindow("wndCM").JavaDialog("dlgInformation").JavaButton("btnOK").Exist(sGenericWait) Then
 				JavaWindow("wndCM").JavaDialog("dlgInformation").JavaButton("btnOK").Click
			End If
		    if JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaButton("btnCouponCollected").Exist(sGenericWait) then
		       JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaButton("btnCouponCollected").Click
		    End If
		   	if JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaButton("btnOK").Exist(sGenericWait) then
			   JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaButton("btnOK").Click
			End if 
			If JavaWindow("wndCM").JavaDialog("dlgInformation").JavaButton("btnOK").Exist(sGenericWait) Then
 				JavaWindow("wndCM").JavaDialog("dlgInformation").JavaButton("btnOK").Click
			End If
		If sBagInfo="Yes" Then
		    a_GetCurrentScreenName=split(replace(replace(replace(JavaWindow("wndCM").JavaObject("objBreadCrumbTrail").Object.toString, ",,","~|~"),",","~|~"),":","~|~"),"~|~")
		    CMGetCMScreenA =  a_GetCurrentScreenName(ubound(a_GetCurrentScreenName))
                     If not CMGetCMScreenA = "Add Bag" Then
   				JavaWindow("wndCM").JavaButton("btnAddBag").Click
			End If
			Common_CMScreenCheck "Add Bag"
			Exit function 
		End If
		
		If JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaButton("btnOK").Exist(sGenericWait) then
		   JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaButton("btnOK").Click
		End if
		
		Common_CMScreenCheck "Acceptance Information"
'		if Common_EnvVarReplace("e_LoginAirLine") = "AY" then	
'			JavaWindow("wndCM").JavaButton("btnAddService").Click
'			Common_CMScreenCheck "Service Information"
'			Common_SetTableValue "wndCM","tblAddService","Row(0)","Col(0)|CDOK"
'			JavaWindow("wndCM").JavaButton("btnAddService").Click
'		End if
		
		
End Function


Public function CM_AcceptSinglePax(s_PaxFullName)

	If UCase(environment.Value("TestEnv_Connection")) = "DEV" Then
		Maxwait = 120
	else
		Maxwait = 10
	End If

	Common_CMScreenCheck "Customer Acceptance"
	
	Common_ValidateTableText "wndCM","tblCPTable","ROW(0)","Customer",s_PaxFullName
	
				
	If JavaWindow("wndCM").JavaEdit("txtSelectCustomer").GetROProperty("text")="" Then
		JavaWindow("wndCM").JavaEdit("txtSelectCustomer").Set "1"
	End If
			
	
	
	If JavaWindow("wndCM").JavaList("lstCollect").Exist(2) Then
		JavaWindow("wndCM").JavaList("lstCollect").Select "Skip"
	End If
	
	If JavaWindow("wndCM").JavaButton("btnProceed").Exist(2) Then
	
		JavaWindow("wndCM").JavaButton("btnProceed").Click 
	
	End If
	 
	If JavaWindow("wndCM").JavaButton("btnConfirm").Exist(2) Then
	
		JavaWindow("wndCM").JavaButton("btnConfirm").Click 
	
	End If
	
	If JavaWindow("wndCM").JavaList("lstCustomerhasbags").exist(2) then
	
		JavaWindow("wndCM").JavaList("lstCustomerhasbags").Select "No"
	
	End If
	
	JavaWindow("wndCM").JavaButton("btnAccept").Click
	
	'Check for Security and Dangerous Goods question pop-up
	if JavaWindow("wndCM").JavaDialog("dlgQuestion").Exist(Maxwait) then
	    s_DsrtrVal=JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaStaticText("stsPopupText0").GetROProperty("text")
		if Common_SimpleCompare("Security and Dangerous Goods","IN",s_DsrtrVal) then
	       	JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaEdit("txtEnterYorN").Set "N"
	       	JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaButton("btnOK").Click
	    End if
	   	if JavaWindow("wndCM").JavaDialog("dlgQuestion").Exist(Maxwait) then
		   JavaWindow("wndCM").JavaDialog("dlgQuestion").JavaButton("btnOK").Click
		End if 
	End if
	
	If JavaWindow("wndCM").JavaDialog("dlgInformation").Exist(10) Then	
		JavaWindow("wndCM").JavaDialog("dlgInformation").JavaButton("btnOK").Click
	End If
	
	If  JavaWindow("wndCM").JavaDialog("wndWarning").JavaStaticText("stsMessageOne").Exist(2) Then
		If Common_SimpleCompare("Due to US TSA regulatory requirements, unable to print boarding pass(es)","IN",JavaWindow("wndCM").JavaDialog("wndWarning").JavaStaticText("stsMessageOne").GetROProperty("attached text")) Then
			JavaWindow("wndCM").JavaDialog("wndWarning").javaButton("btnOk").Click
		End If
	End If
 

	
	if Common_CMMessageAreaCheck("Accepted") then
		Common_Report "Acceptance for "& s_PaxFullName &" Successful|CM_AcceptSinglePax|Pass"
	Else
		Common_Report "Acceptance for "& s_PaxFullName &" Failed|CM_AcceptSinglePax|Fail"
	End if
	
	If (environment.Value("e_LoginAirLine") = "AY") then
		JavaWindow("wndCM").JavaButton("btnAddService").Click
		Common_CMScreenCheck "Service Information"
		Common_SetTableValue "wndCM","tblAddService","Row(0)","Col(0)|CDOK"
		'JavaWindow("wndCM").JavaTable("tblAddService").SetCellData (0,0,"CDOK")
		JavaWindow("wndCM").JavaButton("btnAddService").Click
	End if

	
End Function


'-----------------------------------------------------------------------------------------------------------------------------------------------------------
'<-----------------------CM Functions End here
'-----------------------------------------------------------------------------------------------------------------------------------------------------------


'-----------------------------------------------------------------------------------------------------------------------------------------------------------
'INV Functions Start here:------------>
'-----------------------------------------------------------------------------------------------------------------------------------------------------------


Public Function Inv_LoginAndTriggerFlight()
	

	
	'----------------------------------------------------------------------------------------------------------------------------------------------------
'	# Reusable Action Inv_LoginAndTriggerFlight
'
' 		~ This Action performs launching of Inventory using .bat file,Then Enter login credential it log-in to Application.

'		~ Usage	 : Direct run or RunAction "Inv_LoginAndTriggerFlight [Inv_LoginAndTriggerFlight]", oneIteration 
' 		~ Input  : Airline code,Environment(pdt,uat etc) and flight date should be passed as environment variable. Below are e.g
'                   environment.Value("e_FlightDate")
'					environment.Value("e_FlightNo")
'					environment.Value("e_AirlineCode")
'		~ Output : e_LoginStatus true or false
'
'	@author		:   Ravi kumar
'	@copyright	:  	2017 Amadeus Services Limited. All rights reserved.
'	@contact	:   ravi.kumar@amadeus.com
'	@deffield	:   Created:1/02/2018  | Last Updated: 
'----------------------------------------------------------------------------------------------------------------------------------------------------

'Load Everything needed for automation
'Common_Init

'environment.Value("e_LoginAirLine")="1A"
Common_FetchLoginProperties "1A"

'Varibale initialisation
s_FlightDate=environment.Value("e_FlightDate")
s_Connection=LCase(environment.Value("TestEnv_Connection"))
s_AirlineCode=environment.Value("login_Airline")
s_UserID=environment.Value("login_UserID")
s_Password=environment.Value("login_Password")
s_DutyCode=environment.Value("login_DutyCode")
s_RemoteOffice=environment.Value("login_RemoteOffice")
s_lstAuthentication=environment.Value("login_lstAuthentication")

'//Adding year at the end of date. E.g if input is 13FEB the append year to make it 13FEB18
s_MonthMMM=UCase(right(s_FlightDate,3))
s_TimeStampDate= Now()
s_year=Year(s_TimeStampDate)
s_month=monthname(month(s_TimeStampDate))
s_monthNow=UCase(Left(s_month,3))
s_YearYY=right(s_year,2)
s_YearNextYear=s_YearYY+1

If s_monthNow="DEC" and s_MonthMMM <> "DEC" Then
	s_FlightDateDDMMYY=s_FlightDate & s_YearNextYear
Else 
   s_FlightDateDDMMYY=s_FlightDate & s_YearYY
End If

' // This checks if Invenory is open if yes then it closed the application

'If JavaWindow("wndInventory").exist(1) Then
   ' // This checks if Invenory has auto logged out then it closed the application
'   If JavaWindow("wndInventory").JavaDialog("dlgReEnterPassword").JavaButton("btnExit").Exist(1) Then
'      JavaWindow("wndInventory").JavaDialog("dlgReEnterPassword").JavaButton("btnExit").Click
'   Else
'   JavaWindow("wndInventory").JavaMenu("mnuFile").JavaMenu("mnuExit").Select
'   End If
'	Common_KillGUIApp "AlteaPlanLauncher.exe" 
'End If

' // Launch the Inventory

'systemutil.Run "C:\Program Files (x86)\Altea Inventory TST\Inv_Generic.bat"
Common_AppLaunch "INVENTORY"

'// wait for Inventory login page to come up.
'JavaWindow("wndInventory").JavaDialog("dlgSignIn").WaitProperty "text","Sign in",900000
wait 15
If JavaWindow("wndInventory").JavaDialog("dlgSignIn").Exist(10) Then
   call Common_CaptureScreenshot("Inventory Launch Sucessfull",1)
   
   'Login to application
   	's_AirlineCode=environment.Value("login_Airline")
  	JavaWindow("wndInventory").JavaDialog("dlgSignIn").JavaList("lstConnection").Select s_Connection
  	JavaWindow("wndInventory").JavaDialog("dlgSignIn").JavaEdit("txtUserID").SetSecure s_UserID
	JavaWindow("wndInventory").JavaDialog("dlgSignIn").JavaEdit("txtPassword").SetSecure s_Password
	JavaWindow("wndInventory").JavaDialog("dlgSignIn").JavaEdit("txtOrganization").Set "1A"
	JavaWindow("wndInventory").JavaDialog("dlgSignIn").JavaButton("btnAdvanced").Click
	JavaWindow("wndInventory").JavaDialog("dlgSignIn").JavaList("lstAuthentication").Select s_lstAuthentication
	JavaWindow("wndInventory").JavaDialog("dlgSignIn").JavaList("lstDutyCode").Select s_DutyCode
	
	If JavaWindow("wndInventory").JavaDialog("dlgSignIn").JavaEdit("txtRemoteOffice").GetROProperty ("enabled")=1 Then
		JavaWindow("wndInventory").JavaDialog("dlgSignIn").JavaEdit("txtRemoteOffice").Set s_RemoteOffice
	End If
	
	If JavaWindow("wndInventory").JavaDialog("dlgSignIn").JavaEdit("txtOfficeID").GetROProperty ("editable")=1 Then
		JavaWindow("wndInventory").JavaDialog("dlgSignIn").JavaEdit("txtOfficeID").Set s_RemoteOffice
	End If
	'JavaWindow("wndInventory").JavaDialog("dlgSignIn").JavaEdit("txtRemoteOffice").Set s_RemoteOffice
	JavaWindow("wndInventory").JavaDialog("dlgSignIn").JavaButton("btnSignIn").Click
	
	If JavaWindow("wndInventory").JavaDialog("dlgInformationCodeshare").JavaButton("btnOK1").Exist(10) then
	JavaWindow("wndInventory").JavaDialog("dlgInformationCodeshare").JavaButton("btnOK1").Click
	End if

	'Search for the flight and trigger the flight
	if JavaWindow("wndInventory").JavaCheckBox("chkFlightShedule").Exist(100) then
	   call Common_CaptureScreenshot("Inventory LoginSucessfull",1)
	   wait 10
       	   
       JavaWindow("wndInventory").JavaCheckBox("chkFlightShedule").Set "ON"
       JavaWindow("wndInventory").JavaMenu("mnuFlightDateInformation").Select
       
       If JavaWindow("wndInventory").JavaInternalFrame("wndSearchFlightDateOperational").Exist(10) Then
           	  
	          JavaWindow("wndInventory").JavaInternalFrame("wndSearchFlightDateOperational").JavaEdit("txtAirlineCode").Set environment.Value("e_AirlineCode")
	          JavaWindow("wndInventory").JavaInternalFrame("wndSearchFlightDateOperational").JavaEdit("txtFlightNo").Set environment.Value("e_FlightNo")       
			  JavaWindow("wndInventory").JavaInternalFrame("wndSearchFlightDateOperational").JavaEdit("txtFlightDate").Set s_FlightDateDDMMYY
	          JavaWindow("wndInventory").JavaInternalFrame("wndSearchFlightDateOperational").JavaButton("btnSearch").Click
	          If JavaWindow("wndInventory").JavaInternalFrame("wndFlightDateInformation").Exist(10) Then
	          	  wait 1
	          	      ' This is to handle if flight date not found
			           If JavaWindow("wndInventory").JavaInternalFrame("dlgInformationFrRedress").JavaButton("OK").exist(1) Then
			                call Common_CaptureScreenshot("Flight date not found",0)
			    	        JavaWindow("wndInventory").JavaInternalFrame("dlgInformationFrRedress").JavaButton("OK").Click
			    	        environment.Value("e_Inv_Login")=False
			    	        On error goto 0
							EnableRecoveryScenario
			    	        Exit function
		               End If
		          JavaWindow("wndInventory").JavaInternalFrame("wndFlightDateInformation").JavaCheckBox("chkActions").Set "ON"
		          JavaWindow("wndInventory").JavaInternalFrame("wndFlightDateInformation").JavaMenu("mnuTriggerDCSFlightCreate").Select
		          
			          If JavaWindow("wndInventory").JavaDialog("dlgInformation").Exist(10) Then
			          	 call Common_CaptureScreenshot("Flight triggered Sucessfull",1)
			             JavaWindow("wndInventory").JavaDialog("dlgInformation").JavaButton("btnOK").Click
			             wait 1
'			             JavaWindow("wndInventory").JavaMenu("mnuFile").JavaMenu("mnuExit").Select
			             environment.Value("e_Inv_Login")=True
		             Else
		               call Common_CaptureScreenshot("wndInformation does not exit",0)
		             '' This is to handle if flight is cancelled
			             If JavaWindow("wndInventory").JavaDialog("dlgInformation").JavaButton("btnOK").exist(1) Then
			             	 JavaWindow("wndInventory").JavaDialog("dlgInformation").JavaButton("btnOK").Click
			             	 environment.Value("e_Inv_Login")=False
			             	On error goto 0
							EnableRecoveryScenario
			    	        Exit function
			             End If
		  		 	     		 	    
		  		 	    environment.Value("e_Inv_Login")=False
			
			         End If
		      Else
		  		 	call Common_CaptureScreenshot("wndSearchFlightDateOperational does not exit",0)
		  		 	environment.Value("e_Inv_Login")=False
		      End If     
		        
        Else
  		 	call Common_CaptureScreenshot("wndSearchFlightDateOperational does not exit",0)
  		 	environment.Value("e_Inv_Login")=False
        End If
    Else
  		 call Common_CaptureScreenshot("Inventory login failed",0) 
         environment.Value("e_Inv_Login")=False  		 
    End if 
   
Else
   call Common_CaptureScreenshot("Inventory Launch failed",0)
   environment.Value("e_Inv_Login")=False
End If



End Function


Public Function Inv_Login
			'----------------------------------------------------------------------------------------------------------------------------------------------------
		'	# Reusable Action Inv_Login
		'
		' 		~ This Action performs launching of Inventory using .bat file. Enter login credential and sign in.
		
		'		~ Usage	 : RunAction "Inv_Login [Inv_Login]", oneIteration 
		' 		~ Input  : Environment(pdt,uat etc),User ID (encrypted),Password (encrypted) should be passed as environment variable. Below are e.g
		'					environment.Value("e_ConnectionEnv")
		'					environment.Value("e_UserID")
		'					environment.Value("e_Password")
		'		~ Output : e_LoginStatus true or false
		'
		'	@author		:   Ravi kumar
		'	@copyright	:  	2018 Amadeus Services Limited. All rights reserved.
		'	@contact	:   ravi.kumar@amadeus.com
		'	@deffield	:   Created:6/04/2018  | Last Updated: 
		'----------------------------------------------------------------------------------------------------------------------------------------------------
		
		Common_FetchLoginProperties "1A"
		
		'Varibale initialisation
		s_Connection=LCase(environment.Value("TestEnv_Connection"))
		s_UserID=environment.Value("login_UserID")'Encrypted User ID
		s_Password=environment.Value("login_Password")'Encrypted Password
		s_AirlineCode=environment.Value("login_Airline")
		s_DutyCode=environment.Value("login_DutyCode")
		s_RemoteOffice=environment.Value("login_RemoteOffice")
		s_lstAuthentication=environment.Value("login_lstAuthentication")
		
		
		' // This checks if Invenory is open if yes then it closed the application
		
		'If JavaWindow("wndInventory").exist(1) Then
		   ' // This checks if Invenory has auto logged out then it closed the application
		'   If JavaWindow("wndInventory").JavaDialog("dlgReEnterPassword").JavaButton("btnExit").Exist(1) Then
		  '    JavaWindow("wndInventory").JavaDialog("dlgReEnterPassword").JavaButton("btnExit").Click
		'   Else
		'   JavaWindow("wndInventory").JavaMenu("mnuFile").JavaMenu("mnuExit").Select
		'  End If
		'End If
		Common_KillGUIApp "AlteaPlanLauncher.exe"
		' // Launch the Inventory
		
		'systemutil.Run "C:\Program Files (x86)\Altea Inventory TST\Inv_Generic.bat"
		Common_AppLaunch "INVENTORY"
		
		'// wait for Inventory login page to come up.
		JavaWindow("wndInventory").JavaDialog("dlgSignIn").WaitProperty "text","Sign in",9000000
		
		If JavaWindow("wndInventory").JavaDialog("dlgSignIn").Exist(10) Then
		   call Common_CaptureScreenshot("Inventory Launch Sucessfull",1)
		    'Login to application
		  	JavaWindow("wndInventory").JavaDialog("dlgSignIn").JavaList("lstConnection").Select s_Connection
		  	JavaWindow("wndInventory").JavaDialog("dlgSignIn").JavaEdit("txtUserID").SetSecure s_UserID
			JavaWindow("wndInventory").JavaDialog("dlgSignIn").JavaEdit("txtPassword").SetSecure s_Password
			JavaWindow("wndInventory").JavaDialog("dlgSignIn").JavaEdit("txtOrganization").Set s_AirlineCode
			JavaWindow("wndInventory").JavaDialog("dlgSignIn").JavaButton("btnAdvanced").Click
			JavaWindow("wndInventory").JavaDialog("dlgSignIn").JavaList("lstAuthentication").Select s_lstAuthentication
			JavaWindow("wndInventory").JavaDialog("dlgSignIn").JavaList("lstDutyCode").Select s_DutyCode
			If JavaWindow("wndInventory").JavaDialog("dlgSignIn").JavaEdit("txtOfficeID").GetROProperty("editable")=1 Then
			   JavaWindow("wndInventory").JavaDialog("dlgSignIn").JavaEdit("txtOfficeID").Set s_RemoteOffice
			End If
			If JavaWindow("wndInventory").JavaDialog("dlgSignIn").JavaEdit("txtRemoteOffice").GetROProperty ("editable")=1 Then
				JavaWindow("wndInventory").JavaDialog("dlgSignIn").JavaEdit("txtRemoteOffice").Set s_RemoteOffice
			End If
	
			JavaWindow("wndInventory").JavaDialog("dlgSignIn").JavaButton("btnSignIn").Click
			'Search for the flight and trigger the flight
			if JavaWindow("wndInventory").JavaCheckBox("chkFlightShedule").Exist(100) then
			   call Common_CaptureScreenshot("Inventory LoginSucessfull",1)
			   
		    Else
		  		 call Common_CaptureScreenshot("Inventory login failed",0) 
		         environment.Value("e_Inv_Login")=False  		 
		    End if 
		   
		Else
		   call Common_CaptureScreenshot("Inventory Launch failed",0)
		   environment.Value("e_Inv_Login")=False
		End If
End Function



Public Function Inv_Logout()
	
	'SetTimeOutToZero

	'if JavaWindow("wndInventory").Exist(2) then
	'	JavaWindow("wndInventory").JavaMenu("mnuFile").highlight
	'	JavaWindow("wndInventory").JavaMenu("mnuFile").JavaMenu("mnuExit").Select
	'End if
	
	Common_KillGUIApp "AlteaPlanLauncher.exe"
	'ResetDefaultTimeOut

End Function


Function Inv_Flight_AddRecommendation

	
if JavaWindow("wndInventory").JavaCheckBox("chkFlightShedule").Exist(100) then
	wait(5)
	JavaWindow("wndInventory").JavaCheckBox("chkFlightShedule").Set "ON" 
	JavaWindow("wndInventory").JavaMenu("mnuVoluntaryReAccommodation").Select
	if JavaWindow("wndInventory").JavaInternalFrame("dlgVoluntaryRe-accommodationSearch").Exist then
		JavaWindow("wndInventory").JavaInternalFrame("dlgVoluntaryRe-accommodationSearch").JavaEdit("txtCarrier").Set environment.Value("e_AirlineCode")
		JavaWindow("wndInventory").JavaInternalFrame("dlgVoluntaryRe-accommodationSearch").JavaEdit("txtFROMFlightNumber").Set environment.Value("e_FlightNo")
		JavaWindow("wndInventory").JavaInternalFrame("dlgVoluntaryRe-accommodationSearch").JavaEdit("txtStartDate").Set environment.Value("e_FlightDate")
		JavaWindow("wndInventory").JavaInternalFrame("dlgVoluntaryRe-accommodationSearch").JavaEdit("txtEndDate").Set environment.Value("e_FlightDate")
		JavaWindow("wndInventory").JavaInternalFrame("dlgVoluntaryRe-accommodationSearch").JavaEdit("txtSegment").Set environment.Value("e_DepaturePort")&"-"&environment.Value("e_ArrivalPort")

		JavaWindow("wndInventory").JavaInternalFrame("dlgVoluntaryRe-accommodationSearch").JavaEdit("txtFrequency").Set "1234567"
        JavaWindow("wndInventory").JavaInternalFrame("dlgVoluntaryRe-accommodationSearch").JavaButton("Search").Click
        
		If JavaWindow("wndInventory").JavaInternalFrame("dlgVoluntaryRe-accommodation").Exist Then
		    wait(5)
			JavaWindow("wndInventory").JavaInternalFrame("dlgVoluntaryRe-accommodation").JavaCheckBox("chkCreate").Set "ON"
			JavaWindow("wndInventory").JavaInternalFrame("dlgVoluntaryRe-accommodation").JavaMenu("mnuCreatePAXListOption").Select
			If JavaWindow("wndInventory").JavaInternalFrame("dlgCreatePassengersList").Exist Then
			JavaWindow("wndInventory").JavaInternalFrame("dlgCreatePassengersList").JavaRadioButton("rdoNoAlternative").Set "ON"
		    JavaWindow("wndInventory").JavaInternalFrame("dlgCreatePassengersList").JavaButton("btnRetrievePassengerList").Click
			wait(5)
		    RegisterUserFunc "JavaTable", "SelectRow", "Register_SelectRow"
			JavaWindow("wndInventory").JavaInternalFrame("dlgRetrievePassengerList").JavaTable("tblPassengerList").SelectRow("NAME|"& environment.Value("e_PassName"))
			UnRegisterUserFunc "JavaTable", "SelectRow"
            
			JavaWindow("wndInventory").JavaInternalFrame("dlgRetrievePassengerList").JavaButton("btnAdd").Click
			JavaWindow("wndInventory").JavaInternalFrame("dlgRetrievePassengerList").JavaButton("btnOK").Click
			JavaWindow("wndInventory").JavaInternalFrame("dlgCreatePassengersList").JavaRadioButton("rdoNoAlternative").Set "ON"
			JavaWindow("wndInventory").JavaInternalFrame("dlgCreatePassengersList").JavaButton("btnSave").Click
		
			JavaWindow("wndInventory").JavaDialog("dlgWarning").JavaButton("btnYes").Click
			wait(10)
			
			JavaWindow("wndInventory").JavaInternalFrame("dlgVoluntaryRe-accommodation").JavaButton("Commit").Click

        else
			Common_Report "The dialogue Passenger list  window is not opened||Fail"
		End if
		else
			Common_Report "The voluntary re-accomdation  window is not opened||Fail"
		End if

	else
		Common_Report "The voluntary re-accomdation search window is not opened||Fail"
	End if

else
	Common_Report "The inventory window is not opened||Fail"
End If 



End Function
'----------------------------------------------------------------------------------------------------------------------------------------------------
'	# Reusable Action Inv_SearchFlightPeriod
'
' 		~ This Action searches for the List of Periods of a particular Flight. Inventory should be Logged In prior to perform this action.

'		~ Usage	 : Direct run or RunAction "Inv_Update_Period [Inv_Update_Period]", oneIteration 
' 		~ Input  : Airline code,Environment(pdt,uat etc) and flight date should be passed as environment variable. Below are e.g
' Mandatory env values:                 
'					environment("e_FlightNo")
'					environment("e_AirlineCode")
'                   environment("e_FlightDate") -> From date
'					environment("e_FlighEndtDate") -> to date


'	@copyright	:  	2017 Amadeus Services Limited. All rights reserved.
'	@contact	:   sanjeeth.nayak@amadeus.com
'	@deffield	:   Created:05/09/2018  | Last Updated: 
Function Inv_SearchFlightPeriod
	If JavaWindow("wndInventory").JavaCheckBox("chkFlightShedule").Exist(100) then
   wait 5
	JavaWindow("wndInventory").JavaCheckBox("chkFlightShedule").Set "ON" 
	JavaWindow("wndInventory").JavaMenu("mnuListOfPeriods").Select
	If JavaWindow("wndInventory").JavaInternalFrame("dlgSearchFlightPeriods").Exist(100) Then
		JavaWindow("wndInventory").JavaInternalFrame("dlgSearchFlightPeriods").Activate
		JavaWindow("wndInventory").JavaInternalFrame("dlgSearchFlightPeriods").JavaEdit("txtAirlineCode").Set environment("e_AirlineCode")
		JavaWindow("wndInventory").JavaInternalFrame("dlgSearchFlightPeriods").JavaEdit("txtFlightRanges").Set environment("e_FlightNo")
		JavaWindow("wndInventory").JavaInternalFrame("dlgSearchFlightPeriods").JavaEdit("txtStartDate").Set environment("e_FlightDate")
		JavaWindow("wndInventory").JavaInternalFrame("dlgSearchFlightPeriods").JavaEdit("txtEndDate").Set environment("e_FlighEndtDate")
		Common_CaptureScreenshot "Data Entered in Date Field of Search Flight period dialogue",2
		JavaWindow("wndInventory").JavaInternalFrame("dlgSearchFlightPeriods").JavaButton("btnSearch").Click
		If JavaWindow("wndInventory").JavaInternalFrame("wndListOfPeriods").Exist(100) Then
			Common_Report "List of period is displayed||Pass"
		ElseIf JavaWindow("wndInventory").JavaInternalFrame("wndWarning").Exist(2) Then
			Common_Report "Warning/Error while searching for flight period||Fail"
		End If
	Else
		Common_Report "Dialog for Entering search criteria for flight period did not appear||Fail"
	End if
Else
	Common_Report "Inventory application is not active||Fail"
End if
End Function
Function INV_AdhocCancelNoAlternative
	s_CarrierCode=Environment.Value("e_AirlineCode")

JavaWindow("wndInventory").JavaInternalFrame("wndListOfPeriods").JavaCheckBox("chkCancelDelete").Set "ON"

JavaWindow("wndInventory").JavaInternalFrame("wndListOfPeriods").JavaMenu("mnuSpecificAdhoc").Select

JavaWindow("wndInventory").JavaInternalFrame("dlgSpecificAdhocCancellation").JavaButton("btnOK").Click

wait 3

JavaWindow("wndInventory").JavaInternalFrame("wndRe-accommodationSolution").JavaRadioButton("rdoManual").Set "ON"


i_rowcount = JavaWindow("wndInventory").JavaInternalFrame("wndRe-accommodationSolution").JavaTable("tblSelectSegments").GetROProperty("rows")

For i_Iterator = 0 To i_rowcount - 1 Step 1
	
	JavaWindow("wndInventory").JavaInternalFrame("wndRe-accommodationSolution").JavaTable("tblSelectSegments").SetCellData "#"&CSTR(i_Iterator),"No Alternative",1

	'TODO: PTR needs tobe raised for the below error
	If JavaWindow("wndInventory").JavaDialog("dlgError").Exist(1) Then
		JavaWindow("wndInventory").JavaDialog("dlgError").JavaButton("btnOK").Click
		Common_Report "GUI Error"
	End If
Next


JavaWindow("wndInventory").JavaInternalFrame("wndRe-accommodationSolution").JavaButton("btnOK").Click


JavaWindow("title:=Amadeus Altéa Inventory.*").JavaInternalFrame("title:=Re-accommodation "&s_CarrierCode&".*").JavaButton("label:=Commit").Click

Wait 25
Common_SimpleCompare "NON OPERATING","IN",JavaWindow("wndInventory").JavaInternalFrame("wndListOfPeriods").JavaTable("tblDisplayMode").GetCellData(0,"Route")


End Function
'-----------------------------------------------------------------------------------------------------------------------------------------------------------
'<-----------------------INV Functions End here
'-----------------------------------------------------------------------------------------------------------------------------------------------------------



'''''' FM Functions''''''''''''''''''''''''''

'----------------------------------------------------------------------------------------------------------------------------------------------------
'	# Reusable Action FM_Login
'
' 		~ This Action performs launching of FM JFE
'			* It login based on the Airline passed.

'		~ Usage	 : Direct run or RunAction "Action1 [FM_Login]", oneIteration 
' 		~ Input  : Connection, User_ID,Password,DutyCode and Remote Office
'		~ Output : e_LoginStatus true or false
'
'	@author		:   Jayadev
'	@copyright	:  	2017 Amadeus Services Limited. All rights reserved.
'	@contact	:   jayadev.budiboyina@amadeus.com
'	@deffield	:   Created:16/08/2018  | Last Updated: 
'----------------------------------------------------------------------------------------------------------------------------------------------------

Function FM_Login
	Common_FetchLoginProperties "1A"
	'
	's_SheetName="LoginData"
	
	
	' // Read the Login credentails
	s_Connection=environment.Value("TestEnv_Connection")
	s_AirlineCode=environment.Value("login_Airline")
	s_Provider=environment.Value("login_Provider")
	s_UserID=environment.Value("login_UserID")
	s_Password=environment.Value("login_Password")
	s_DutyCode=environment.Value("login_DutyCode")
	s_RemoteOffice=environment.Value("login_RemoteOffice2")
	
	's_Connection = Environment("Connection")
	's_UserID = Environment("User_ID")
	's_Password =environment.Value("login_Password")
	's_DutyCode = environment.Value("login_DutyCode")
	's_RemoteOffice = Environment("RemoteOffice")
	''
'	**** New code added(BEGIN) **** (jayadev)
	If JavaWindow("wndAltéaDepartureControl").JavaDialog("wndSignIn").Exist(10) Then
		JavaWindow("wndAltéaDepartureControl").JavaDialog("wndSignIn").Close
	End  If
	
	Dim WshShell, strCurDir
	Set WshShell = CreateObject("WScript.Shell")
	strCurDir    = WshShell.CurrentDirectory
	strRootPath = left(strCurDir,1)
	Set fso = createobject("scripting.FileSystemObject")
	If fso.FolderExists(strRootPath&":\Altea JFE\TST\FlightManagement\") Then
		environment.Value("FMLaunchloc") = strRootPath&":\Altea JFE\TST\FlightManagement\"
	End If
	wait 10
	SystemUtil.Run "1A-Launcher.exe", "--conf.file=cfg/cfg.ini --workstationID=1A/C/LON/B/ASL/LCO//* --airlineCode=1A --airlineNumericID=001 --platform=NATIVE --fmConfig=TST --win.env.resetList=deactivated", environment.Value("FMLaunchloc")
	
'	**** New code added(END) **** (jayadev)

	If JavaWindow("wndAltéaDepartureControl").Exist(60) then
	Reporter.ReportEvent micPass, "FM Management Launch", " Successful."
	
	If JavaWindow("wndAltéaDepartureControl").JavaDialog("wndSignIn").Exist(10) Then
		    Reporter.ReportEvent micPass, "SignIn dialog appeared", " Successful."
			JavaWindow("wndAltéaDepartureControl").JavaDialog("wndSignIn").JavaList("lstConnection").Select s_Connection
	
			JavaWindow("wndAltéaDepartureControl").JavaDialog("wndSignIn").JavaEdit("txtUserID").SetSecure s_UserID
	        
			If s_Password<>NULL or s_Password<>"" Then
				JavaWindow("wndAltéaDepartureControl").JavaDialog("wndSignIn").JavaEdit("txtPassword").SetSecure s_Password
			End If
			
			JavaWindow("wndAltéaDepartureControl").JavaDialog("wndSignIn").JavaButton("btnAdvanced").Click
			If s_DutyCode<>NULL or s_DutyCode<>"" Then
			   JavaWindow("wndAltéaDepartureControl").JavaDialog("wndSignIn").JavaList("lstDutyCode").Select s_DutyCode	
			End If
			If s_RemoteOffice<>NULL or s_RemoteOffice<>"" Then
			   JavaWindow("wndAltéaDepartureControl").JavaDialog("wndSignIn").JavaEdit("txtRemoteOffice").Set s_RemoteOffice	
			End If
			call Common_CaptureScreenshot("Login Credentails Entered",2)
			JavaWindow("wndAltéaDepartureControl").JavaDialog("wndSignIn").JavaButton("btnSignIn").Click
	   
	Else
	
	   call Common_CaptureScreenshot("FM Sign in dialog does not exist",0)
	   
	End If
	
	
	Else
	call Common_CaptureScreenshot("Login Failed",0)
	End If
	
	

End Function



Public Function TSA_Warning_Check()
	If JavaWindow("wndCM").JavaDialog("wndWarning").Exist(10) Then
		If JavaWindow("wndCM").JavaDialog("wndWarning").JavaStaticText("stsMessageOne").Exist(2) Then
			if JavaWindow("wndCM").JavaDialog("wndWarning").JavaStaticText("stsMessageOne").GetROProperty("text") = "Due to US TSA regulatory requirements, unable to print boarding pass(es)" then
				failureflag = false
			else
				failureflag = true
			End If
		Else
			failureflag = true
		End If
		JavaWindow("wndCM").JavaDialog("wndWarning").JavaButton("btnOK").Click	
		If warningflag Then
			Common_Report "Warning while acceptance|Please review the screenshot|Fail"
		End If
End If
End Function






'Function that injects cryptic commands and gets the response
Public Function Common_RocketGate_Injector(OFFICE_ID,ENV,CRY_COMMANDS)
	Common_RocketGate_Injector = False
	ENV = UCase(ENV)
	If ENV = "PDT" Then
		Sufix = ""
	ElseIf ENV = "UAT" Then
		Sufix = "U"
	ElseIf ENV = "DEV" Then
		Sufix = "D"
	ElseIf ENV = "MIG" Then
		Sufix = "M"
	Else
		Reporter.ReportEvent micFail, "Common_RocketGate_Injector", "Check ENV parameter. " &ENV& " not supported"
	End If
		
	ROCKET_GATE_URL = "http://ncepsivm21670.rnd.amadeus.net:8081/rocketgate/cryptic"
	ROCKET_GATE_PORT = 18033
	ROCKET_GATE_IP = "193.23.185.67"
	ROCKET_GATE_SAP = "1ASIXJCP" & Sufix


 	Set objHTTP = CreateObject("MSXML2.XMLHTTP.3.0")
  	objHTTP.Open "POST", ROCKET_GATE_URL, False
  	objHTTP.setRequestHeader "Content-Type", "application/xml"
  	objHTTP.setRequestHeader "SI_SAP", ROCKET_GATE_SAP
  	objHTTP.setRequestHeader "OFFICE_ID",OFFICE_ID
  	objHTTP.setRequestHeader  "SI_SERVER_PORT",ROCKET_GATE_PORT
  	objHTTP.setRequestHeader  "SI_SERVER_IP",ROCKET_GATE_IP
  
  ' Send the json in correct format

  	objHTTP.send (CRY_COMMANDS)

  ' Output error message to std-error and happy message to std-out. Should
  ' simplify error checking
	  If objHTTP.Status >= 400 And objHTTP.Status <= 599 Then
	  Reporter.ReportEvent micFail, "Common_RocketGate_Injector", "Error Occurred : " & objHTTP.status & " - " & objHTTP.statusText
	    
	  Else
	    	print "Common_RocketGate_Injector Success : " & objHTTP.status & " - " & objHTTP.ResponseText
	    	Reporter.ReportEvent micPass , "Common_RocketGate_Injector", "Rocket Gate Response : " & objHTTP.status & " - " & objHTTP.ResponseText
		Common_RocketGate_Injector = objHTTP.ResponseText
	End If
	
End Function

'----------------------------------------------------------------------------------------------------------------------------------------------------
'	# Reusable function InventorySearch
'
' 		~ This Action opens a flight in inventory dialogue in Inventory 
'			* 

'		~ Usagage : InventorySearch()
' 		~ Input  :  environment.Value("e_LoginAirLine"),Environment("e_FlightNo"),Environment("e_FlightDate")
'		~ Output : Nil 
'
'	@author		:  Rupa
'	@copyright	:  	2017 Amadeus Services Limited. All rights reserved.
'	@contact	:    rupawathi.bokka@amadues.com
'	@deffield	:   Created:08/11/2022  | Last Updated: 
'----------------------------------------------------------------------------------------------------------------------------------------------------
Public Function InventorySearch()

	JavaWindow("wndInventory").JavaCheckBox("chkInventoryManagement").Set "ON"
       JavaWindow("wndInventory").JavaMenu("mnuInventory").Select
If JavaWindow("wndInventory").JavaInternalFrame("dlgSearchFlightDate").Exist Then
	JavaWindow("wndInventory").JavaInternalFrame("dlgSearchFlightDate").Activate
	JavaWindow("wndInventory").JavaInternalFrame("dlgSearchFlightDate").JavaEdit("txtFlightCode").Set environment.Value("e_LoginAirLine")
	JavaWindow("wndInventory").JavaInternalFrame("dlgSearchFlightDate").JavaEdit("txtFlightNo").Set Environment("e_FlightNo")
	JavaWindow("wndInventory").JavaInternalFrame("dlgSearchFlightDate").JavaEdit("txtFlightDate").Set Environment("e_FlightDate")
	JavaWindow("wndInventory").JavaInternalFrame("dlgSearchFlightDate").JavaButton("btnSearch").Click 
End If
End Function


'----------------------------------------------------------------------------------------------------------------------------------------------------
'	# Reusable function InventoryUpdateNSLValue
'
' 		~ This Action updates the NSL value in inventory 
'			* 

'		~ Usagage : InventoryUpdateNSLValue "DAL-BNA(1)","0"
' 		~ Input  :  tab(eg. DAL-BNA2, also can be segment),value to be changed in NSL
'		~ Output : Nil 
'
'	@author		:  Rupa
'	@copyright	:  	2017 Amadeus Services Limited. All rights reserved.
'	@contact	:    rupawathi.bokka@amadues.com
'	@deffield	:   Created:08/11/2022  | Last Updated: 
'----------------------------------------------------------------------------------------------------------------------------------------------------
Public Function InventoryUpdateNSLValue(byVal tab, byVal sconfigValue)
wait 2 	
 If JavaWindow("wndInventory").JavaInternalFrame("dlgInventory").Exist(10) Then
 	JavaWindow("wndInventory").JavaInternalFrame("dlgInventory").JavaTab("dlgTab").Select tab
 	JavaWindow("wndInventory").JavaTable("tblInventory").ActivateCell "#0","NSL"
 	JavaWindow("wndInventory").JavaTable("tblInventory").ClickCell "#0","NSL"
 	JavaWindow("wndInventory").JavaTable("tblInventory").DoubleClickCell "#0","NSL"
 	wait 2
       JavaWindow("wndInventory").JavaInternalFrame("dlgInventory").JavaEdit("txtNSLValue").Set sconfigValue
      
 	JavaWindow("wndInventory").JavaTable("tblInventory").DoubleClickCell "#1","NSL"
       wait 2

       
      JavaWindow("wndInventory").JavaInternalFrame("dlgInventory").JavaButton("btnRecalculate").Click
For i_Iterator = 1 To 5 Step 1
	wait 2
     if  JavaWindow("wndInventory").JavaInternalFrame("dlgInventory").JavaButton("btnRecalculate").GetROProperty("enabled") = 1 then
      JavaWindow("wndInventory").JavaInternalFrame("dlgInventory").JavaButton("btnRecalculate").Click
	i_Iterator = 6
    End If
Next    
wait 1

For i_Iterator = 1 To 5 Step 1
	wait 2
     if  JavaWindow("wndInventory").JavaInternalFrame("dlgInventory").JavaButton("btnSave").GetROProperty("enabled") = 1  then
          JavaWindow("wndInventory").JavaInternalFrame("dlgInventory").JavaButton("btnSave").Click
       i_Iterator = 6
    End If
Next

 else
 	Reporter.ReportEvent micFail, "InventoryUpdateNSLValue", "Inventory dialogue is not open to update the NSL value"
 End If
	
End Function
Public Function Common_Refresh_CM_Screen()
	' Open notepad 
	if JavaWindow("wndCM").exist(2) then
		JavaWindow("wndCM").Activate
		Set WshShell = CreateObject("WScript.Shell")
		WshShell.SendKeys "^%+{F5}"
		wait 2
		Common_Report "Common_Refresh_CM_Screen|CM screen refreshed|DONE"
	else
		Common_Report "Common_Refresh_CM_Screen|CM window not detected!|WARNING"
	End if 
	
End Function


Public Function CM_Cash_Payment_UI_Auto()
	CM_Cash_Payment_UI_Auto = false
	If JavaWindow("wndCM").Exist(5) Then
		JavaWindow("wndCM").Activate
		If UIAObject("UIAuto_CustomerManagement").UIAObject("UIAuto_PaymentPagesMerged").UIATable("UIAuto_obj_parent2_to_payment_mode_selection").UIATable("UIAuto_obj_parent1_to_payment_mode_selection").UIATable("UIAuto_tbl_payment_mode_selection").UIAObject("UIAuto_Cash_option").Exist(20) Then
			UIAObject("UIAuto_CustomerManagement").UIAObject("UIAuto_PaymentPagesMerged").UIATable("UIAuto_obj_parent2_to_payment_mode_selection").UIATable("UIAuto_obj_parent1_to_payment_mode_selection").UIATable("UIAuto_tbl_payment_mode_selection").UIAObject("UIAuto_Cash_option").Click
			common_report "CM_Cash_Payment_UI_Auto|Cash Payment mode selection successfull|PASS"
			If UIAObject("UIAuto_CustomerManagement").UIAObject("UIAuto_PaymentPagesMerged").UIATable("UIAuto_obj_parent2_to_procceed_btn").UIATable("UIAuto_obj_parent1_to_procceed_btn").UIAButton("UIAuto_btn_ProcessPayment").Exist(20) Then
				JavaWindow("wndCM").Activate
				UIAObject("UIAuto_CustomerManagement").UIAObject("UIAuto_PaymentPagesMerged").UIATable("UIAuto_obj_parent2_to_procceed_btn").UIATable("UIAuto_obj_parent1_to_procceed_btn").UIAButton("UIAuto_btn_ProcessPayment").Click
				CM_Cash_Payment_UI_Auto = true
				common_report "CM_Cash_Payment_UI_Auto|Cash Payment successfull|PASS"
			Else
				common_report "CM_Cash_Payment_UI_Auto failed as unable to identify UIAuto_btn_ProcessPayment button|CM_Cash_Payment_UI_Auto UIAuto_btn_ProcessPayment identifcation|FAIL"
			End If
		else
		      CM_InsightCashCollection()
			'common_report "CM_Cash_Payment_UI_Auto failed as unable to identify UIAuto_Cash_option object|CM_Cash_Payment_UI_Auto UIAuto_Cash_option identifcation|FAIL"
		End If
	else
		common_report "CM_Cash_Payment_UI_Auto failed as unable to identify CM Window|CM_Cash_Payment_UI_Auto CM window activation|FAIL"
	End If
End Function

Public Function CM_InsightCashCollection()
	If JavaWindow("wndCM").InsightObject("InsightObject_cash_upadate").Exist(20) Then
		     	JavaWindow("wndCM").InsightObject("InsightObject_cash_upadate").Click
		      Else
		 	common_report "CM_Cash_Payment_UI_Auto failed as unable to identify UIAuto_btn_ProcessPayment button also insight object fails|CM_Cash_Payment_UI_Auto UIAuto_btn_ProcessPayment identifcation|FAIL"
	     End If
End Function

Public Function CM_InsightCreditCollection()
	If JavaWindow("wndCM").InsightObject("insManualEntryPayement_1").Exist(20) Then
		     JavaWindow("wndCM").InsightObject("insManualEntryPayement_1").Click
		     If  JavaWindow("wndCM").InsightObject("insCreditCardNo2").Exist(10) Then
		     	 Set WshShell = CreateObject("WScript.Shell")
		         s_CreditCardNo=environment.Value("e_CreditCardNo")
		         s_ExpiryDate=environment.Value("e_ExpiryDate")
		      	  JavaWindow("wndCM").InsightObject("insCreditCardNo2").Click
			  WshShell.SendKeys s_CreditCardNo
			  JavaWindow("wndCM").InsightObject("insExpirationDate_new").Click
			  WshShell.SendKeys s_ExpiryDate
			  JavaWindow("wndCM").InsightObject("insProcessPayement_new").Click
		      
		     End If
		    

	 Else 
	       s_holderName=environment.Value("e_holderName")
		     'read the card type 1=VISA and 2=MasterCard.
		     s_CardType=environment.Value("e_CardType")
		     s_CreditCardNo=environment.Value("e_CreditCardNo")
		     s_ExpiryDate=environment.Value("e_ExpiryDate")
		     s_SecurityCode=environment.Value("e_SecurityCode")
		     
		     JavaWindow("wndCM").InsightObject("insCreditCardManually").Click
			'Window("Customer").InsightObject("insCreditCardManually").Click

			Set WshShell = CreateObject("WScript.Shell")
		     JavaWindow("wndCM").InsightObject("insHolderName").Click
		     WshShell.SendKeys s_holderName
		     
		     
		     if s_CardType=2 then
	     	   JavaWindow("wndCM").InsightObject("insVendorDropDown").Click
	     	   JavaWindow("wndCM").InsightObject("insMasterCard").Click
	     	   
		     End if
		     
		     	JavaWindow("wndCM").InsightObject("insCreditCardNo").Click
				WshShell.SendKeys s_CreditCardNo
		        
		        JavaWindow("wndCM").InsightObject("insExpiryDate").Click
				WshShell.SendKeys s_ExpiryDate
				
				JavaWindow("wndCM").InsightObject("insSecurityCode").Click
				WshShell.SendKeys s_SecurityCode
				call Common_CaptureScreenshot("Credit Card details entered",2)
	     End If
End Function
'Common_getFlightNumberFromPon 
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!This function will pick the flight Number from Pon execution file when we dont specify flight numebr in PON sheet.
'!
'!	Example Usage  : Common_getFlightNumber "flight_number"
'! 	
'!	@Return Returns flight number from Pon execution log that is picked up dynamically during PON call.
'!	@author rupawathi 
'!	@Date 	Created: 12Oct2022
Public Function Common_getFlightNumberFromPon
	
    Dim  o_File  ,o_FileToRead,o_filepath,str_FileText
    o_filepath = s_PONFolderPath & "\PONStartExecution.log"
    Set o_File   = CreateObject("Scripting.FileSystemObject")
    DisableRecoveryScenario
    On error resume next
    Err.clear
   If o_File.FileExists(o_filepath) Then
        Set o_FileToRead = o_File.OpenTextFile(o_filepath,1)
        str_FileText = o_FileToRead.ReadAll()
      '  Common_getFlightNumber   =  str_FileText 
        o_FileToRead.Close
     'get the flightnumber from str_FileText
          str_response = Split(str_FileText , "Response")
           str_lastResponse = Split(str_response (Ubound(str_response)) ,"HK")
           str_response_flight =Split( Split(str_lastResponse(0), " 2 ")(1)," " )
	    Set RegEx = New RegExp
	    RegEx.Pattern = "\D+"
	    RegEx.Global = True
	    Common_getFlightNumberFromPon= RegEx.Replace(str_response_flight(1), "") 
         Else
       
         Reporter.ReportEvent micfail, "Common_getFlightNumber", "File PONStartExecution doesnt exists"
         On error goto 0
	  EnableRecoveryScenario
    End If
   Set o_File = Nothing
   End Function
   
   
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'!  Function To Fetch the desired ALF log and compoares the values mentioned in TestLog_<xyz>.xls with the logs whicha are fetched
'!
'!	* DownLoads TestLog_<xyz>.xls (from testcase in lab/plan) and alflogsearch.bat (from Resources)
'!		~ Usage	 :
'!
'!	 Search with specific search criteria, When user wants to explicitly mention the search criteria while searching this mode can be used
'!
'!						Following search parameters can be used
'!
'!						PEAK,INTERVAL,MESSAGE,RECLOC,FLIGHT,PAXNAME,SHEET details
'!					Ex: "PEAK:2|INTERVAL:-30m|MESSAGE:CAPPNR|~Sheet2~
'!
'!					
'!						If ~Sheet1~ is present in input string, then log validations will be done against data in Sheet1
'!  @Param  : s_Input: <SearchParam1>:<Value1>|<SearchParam2>:<Value2>|<SearchParam2>:<Value2>
'!	@Author budiboyina.jayadev@amadeus.com
'!	@Date 	Created: 10Oct2022| Last Updated: 
'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
  
Public Function Common_ALFLogSearch_Raw (byVal s_Input)
	Common_KillGUIApp "EXCEL.EXE"
	s_InputStore = s_Input
	Environment("ALFLogSearchCount") = Environment("ALFLogSearchCount") + 1
	s_exe = "alflogsearch.exe"
	
	'Set Default Sheet name to ToVerify
	s_SheetName = "ToVerify"
	'Check if Special Params present eg., Common_ALFLogSearch "<SearchParam2>:<Value2>~SpecialParam~
	a_SearchParams = Common_FetchVars(s_Input)

	If a_SearchParams(1) <> "" Then
		s_SheetName = a_SearchParams(1)
		Reporter.ReportEvent micDone, "Sheet Name fetch","Using " & s_SheetName
	End If
	
	s_Input = a_SearchParams(0)
	
	'Clear the folder 
	Common_FolderCleanUp s_ALFFolderPath & "\" & s_exe
	
	
	
	'Create Log Search folder if not exists
	Common_FolderCreate s_ScreenshotFolderPath
	'Download Batch file and LogSearch.Xls
	Common_DownloadTestResource s_ALFlogsearchBatFile,s_ALFFolderPath
	
	Set o_FSO = CreateObject("Scripting.FileSystemObject") 
	
	On error Resume next
	err.clear	
	DisableRecoveryScenario
	
	'Automatic deploying the tool
	o_FSO.CopyFile "\\ncealmhost0095.rnd.amadeus.net\GATI-Installers\ALFLOGSEARCH" & "\" & s_exe ,s_ALFFolderPath & "\" & s_exe
	
	If err.number <> 0 Then
		Reporter.ReportEvent micFail, "Error While Transfering File",s_exe
	else
		Reporter.ReportEvent micPass, "File Successfully transfered to "& s_ALFFolderPath ,s_exe
	End If
	
	On error goto 0
	EnableRecoveryScenario
	
	Set o_SearchCrit = CreateObject("Scripting.Dictionary")
	
	s_PPASS = Common_GetCyberArkPasswordSOAP("T-DCS-QA","T-DCS-QA","svc-gati-alf")
	s_PACCOUNTDETAILS = "svc-gati-alf:" & s_PPASS
	
	'Store default keys and values in a dictionary array
	
	o_SearchCrit.Add "PHASE",ucase(Environment("TestEnv_Connection"))
	o_SearchCrit.Add "APPLICATION","CML"
	o_SearchCrit.Add "PEAK",Environment("login_Peak")
	o_SearchCrit.Add "TIMEFROM","now"
	o_SearchCrit.Add "INTERVAL",chr(34) &"-10m"& chr(34)
	o_SearchCrit.Add "OUTPUT","ALFLog.xls"
	o_SearchCrit.Add "PACCOUNTDETAILS",s_PACCOUNTDETAILS
	
	
	
   'Change the default values to the userdefined values for the log search
	If (ucase(s_Input) = "DEFAULT") or (ucase(s_Input) = "") or (instr(ucase(s_Input),"DEFAULT") > 0) Then 
		Common_Report "Hurray! Default Search!"
	Else		
		Common_Report "Not a Default Search! Trying to replace parameters as per Search criteria in the Batch file"
		
		a_Mode = split(s_Input,"|")
		
		For i_ModeIterator = 0 To ubound(a_Mode) Step 1
			a_VarDefine = Split(a_Mode(i_ModeIterator), ":")
			If ubound(a_VarDefine) = 1 Then
				'Dynamically create vars needed for forming the log search criteria
				
'				Get the error handler
				DisableRecoveryScenario
				On error resume next
				err.clear
				
'				If a_Mode(i_ModeIterator) = "MESSAGE:PAXLST" or a_Mode(i_ModeIterator) = "MESSAGE:CUSRES" Then
'					s_exe = "regalflogsearch.exe"
'				End If
'				
				If instr(ucase(a_Mode(i_ModeIterator)), "MESSAGE")>0 Then
					s_MessageName = replace(a_Mode(i_ModeIterator), "MESSAGE:","")
				End If
				
				'Modify the dictionary value for the key passed by the user
				execute "o_SearchCrit(" & chr(34) & a_VarDefine(0) & chr(34) & ") = " & chr(34) & a_VarDefine(1) & chr(34) 
				
				'If critiria is other than default then, add to the dictionary
				If err.number > 0 Then
					execute "o_SearchCrit.add " & chr(34) & a_VarDefine(0) & chr(34) & "," & chr(34) & a_VarDefine(0) & chr(34)
				End If
				
'				Give back error handling to UFT
				EnableRecoveryScenario
				On error goto 0
				
			else
				Reporter.ReportEvent micFail, "ALFLogSearch", "Please check input!"
			End If
		Next

	End If
	
	
	
	'Read Batch file for replacing dictionary object values and performing search
	Set o_FSO = createobject("Scripting.FileSystemObject")
	Set o_BatchFile = o_FSO.OpenTextFile(s_ALFFolderPath & "\" & s_ALFlogsearchBatFile)
	s_FileContent = o_BatchFile.ReadAll	
	Set o_BatchFile = Nothing
	
	'Get Keys and values
	a_SearchCritKey = o_SearchCrit.Keys
	a_SearchCritVal = o_SearchCrit.Items
	
	'Replace the actual search values
	for i_Replaceidx = 1 to o_SearchCrit.Count step 1
		
		s_FileContent = replace(s_FileContent, "%" & a_SearchCritKey(i_Replaceidx-1) & "%", a_SearchCritVal(i_Replaceidx-1))
			
	Next
	
	
	
	Set o_FileContentRegEx = New RegExp
	
	' Below regex used to remove unused parameters from batch file
	With o_FileContentRegEx
	
      	.Pattern    = "(\[-. \%[\S]*\%\] |\[|])" 
      	.IgnoreCase = True
      	.Global     = true

	End With	
	
	Set o_BatchFile = o_FSO.OpenTextFile(s_ALFFolderPath & "\" & s_ALFlogsearchBatFile,2)
	s_FileContent = o_FileContentRegEx.replace(s_FileContent,"")
	s_FileContent = replace(s_FileContent,"%EXT%", s_exe)
	
	o_BatchFile.Write s_FileContent
	o_BatchFile.Close
	set o_BatchFile = nothing
	
	'Run the Batch file
	Common_RunBatch s_ALFFolderPath &"\" & s_ALFlogsearchBatFile
	b_CritError = false
	
	If not Common_DownloadAttachment("LAB-TEST","TestLog",s_ALFFolderPath) then
			if not Common_DownloadAttachment("PLAN-TEST","TestLog",s_ALFFolderPath) then
				Reporter.ReportEvent micFail, "Common_CMRegLogSearch", "TestLog File attachment not found for the test case either in test lab and test plan"
				ExitTest
			End if
		End If
		
	s_RawFileContent = Common_ReadFileContent(s_ALFFolderPath & "\RawLog.txt")
	if s_RawFileContent = "" then
		Reporter.ReportEvent micFail,"Raw log check","Raw log has no data"
		Exit Function
	else
		Reporter.ReportEvent micPass,"Raw log check","Raw log has data"
	End If
	
	'Reads each column data in the excel from each row and will add into dictionary objects
	set d_SearchData = Common_ReadExcel2Dictionary(s_ALFFolderPath & "\TestLog.xls",s_SheetName,"|")
	
		If b_CritError Then
			Common_Report "Critical ERROR Unable to process the attached TestLog.xls file|Common_ALFLogSearch|FAIL"
			On error goto 0
			EnableRecoveryScenario
			Exit Function
		End If
	
	'Raw log data is fetched and the search data(Dictionary objects) from TestLog is matched with Raw log data
	s_FileFullPath = s_ALFFolderPath & "\RawLog.txt"
	Environment("ALFLogSearchCount") = 0
	For i = 1 To d_SearchData.count  Step 1
		Set o_FSO = createobject("Scripting.FileSystemObject")
		DisableRecoveryScenario
		On Error Resume Next
		err.clear
		Set o_BatchFile = o_FSO.OpenTextFile(s_FileFullPath)
		While not o_BatchFile.AtEndOfStream
		
		str = o_BatchFile.ReadLine
			
			
			If instr(str,mid(d_SearchData(i),1,3))>0 Then
				d_SearchData_split = split(d_searchData(i),"|")
				j = 1
				For j=1 To ubound(d_SearchData_split) Step 1
					If d_SearchData_split(j)<>"NULL" Then
						If instr(str,d_SearchData_split(j))>0 Then
						Environment("ALFLogSearchCount") = Environment("ALFLogSearchCount") + 1
						Common_Report d_SearchData_split(j)&"is available in Raw log under segment"&mid(d_SearchData(i),1,3)&"|Common_ALFLogSearch|PASS"
						else
						Common_Report d_SearchData_split(j)&"is not available Raw log under segment"&mid(d_SearchData(i),1,3)&"|Common_ALFLogSearch|FAIL"
						End If
					End If
					
				Next
			End If
		Wend
		o_BatchFile.Close
		o_BatchFile = Nothing
		o_FSO = Nothing
	Next
	
	
	

'	if Common_FileExistance (s_ALFFolderPath & "\RawLog.txt") then
'	
'			
'		Common_FolderCreate s_ALFFolderPath & "\RawLogArchive"
'		
'		Set o_FSO = CreateObject("Scripting.FileSystemObject")
'		
'		s_RawFilename = "SearchCount-"&Environment("ALFLogSearchCount")&"_DateTime-"&replace(replace(replace(now,"/","_")," ","_"),":","_")&"_ENV-"&ucase(Environment("TestEnv_Connection"))&"_PEAK-"&Environment("login_Peak")&"_"&s_MessageName
'		
'		o_FSO.MoveFile s_ALFFolderPath &"\RawLog.txt" ,s_ALFFolderPath &"\RawLogArchive\"&s_RawFilename&".txt"
'		
'		Common_AttachToCurrentRun s_ALFFolderPath&"\RawLogArchive\"&s_RawFilename&".txt"
'		
'	End if
'	
'	Set o_FSOC = createobject("Scripting.FileSystemObject")
'	Set o_BatchFileC = o_FSOC.OpenTextFile(s_ALFFolderPath & "\" & s_ALFlogsearchBatFile,2)
'	s_FileContentbat = replace(s_FileContent,s_PPASS,"XXXXXXXXXXXX")
'	
'	
'	o_BatchFileC.Write s_FileContentbat
'	o_BatchFileC.Close
'	set o_BatchFileC = nothing
	o_BatchFile.Close
	Set o_BatchFile = nothing
	EnableRecoveryScenario
	On error goto 0
End Function

'Verification of No logs for ALF search criteria

Public Function Common_ALFLogSearch_Raw_NoLog (byVal s_Input)
	Common_KillGUIApp "EXCEL.EXE"
	s_InputStore = s_Input
	Environment("ALFLogSearchCount") = Environment("ALFLogSearchCount") + 1
	s_exe = "alflogsearch.exe"
	
	'Set Default Sheet name to ToVerify
	s_SheetName = "ToVerify"
	'Check if Special Params present eg., Common_ALFLogSearch "<SearchParam2>:<Value2>~SpecialParam~
	a_SearchParams = Common_FetchVars(s_Input)

	If a_SearchParams(1) <> "" Then
		s_SheetName = a_SearchParams(1)
		Reporter.ReportEvent micDone, "Sheet Name fetch","Using " & s_SheetName
	End If
	
	s_Input = a_SearchParams(0)
	
	'Clear the folder 
	Common_FolderCleanUp s_ALFFolderPath & "\" & s_exe
	
	
	
	'Create Log Search folder if not exists
	Common_FolderCreate s_ScreenshotFolderPath
	'Download Batch file and LogSearch.Xls
	Common_DownloadTestResource s_ALFlogsearchBatFile,s_ALFFolderPath
	
	Set o_FSO = CreateObject("Scripting.FileSystemObject") 
	
	On error Resume next
	err.clear	
	DisableRecoveryScenario
	
	'Automatic deploying the tool
	o_FSO.CopyFile "\\ncealmhost0095.rnd.amadeus.net\GATI-Installers\ALFLOGSEARCH" & "\" & s_exe ,s_ALFFolderPath & "\" & s_exe
	
	If err.number <> 0 Then
		Reporter.ReportEvent micFail, "Error While Transfering File",s_exe
	else
		Reporter.ReportEvent micPass, "File Successfully transfered to "& s_ALFFolderPath ,s_exe
	End If
	
	On error goto 0
	EnableRecoveryScenario
	
	Set o_SearchCrit = CreateObject("Scripting.Dictionary")
	
	s_PPASS = Common_GetCyberArkPasswordSOAP("T-DCS-QA","T-DCS-QA","svc-gati-alf")
	s_PACCOUNTDETAILS = "svc-gati-alf:" & s_PPASS
	
	'Store default keys and values in a dictionary array
	
	o_SearchCrit.Add "PHASE",ucase(Environment("TestEnv_Connection"))
	o_SearchCrit.Add "APPLICATION","CML"
	o_SearchCrit.Add "PEAK",Environment("login_Peak")
	o_SearchCrit.Add "TIMEFROM","now"
	o_SearchCrit.Add "INTERVAL",chr(34) &"-10m"& chr(34)
	o_SearchCrit.Add "OUTPUT","ALFLog.xls"
	o_SearchCrit.Add "PACCOUNTDETAILS",s_PACCOUNTDETAILS
	
	
	
   'Change the default values to the userdefined values for the log search
	If (ucase(s_Input) = "DEFAULT") or (ucase(s_Input) = "") or (instr(ucase(s_Input),"DEFAULT") > 0) Then 
		Common_Report "Hurray! Default Search!"
	Else		
		Common_Report "Not a Default Search! Trying to replace parameters as per Search criteria in the Batch file"
		
		a_Mode = split(s_Input,"|")
		
		For i_ModeIterator = 0 To ubound(a_Mode) Step 1
			a_VarDefine = Split(a_Mode(i_ModeIterator), ":")
			If ubound(a_VarDefine) = 1 Then
				'Dynamically create vars needed for forming the log search criteria
				
'				Get the error handler
				DisableRecoveryScenario
				On error resume next
				err.clear
				
'				If a_Mode(i_ModeIterator) = "MESSAGE:PAXLST" or a_Mode(i_ModeIterator) = "MESSAGE:CUSRES" Then
'					s_exe = "regalflogsearch.exe"
'				End If
'				
				If instr(ucase(a_Mode(i_ModeIterator)), "MESSAGE")>0 Then
					s_MessageName = replace(a_Mode(i_ModeIterator), "MESSAGE:","")
				End If
				
				'Modify the dictionary value for the key passed by the user
				execute "o_SearchCrit(" & chr(34) & a_VarDefine(0) & chr(34) & ") = " & chr(34) & a_VarDefine(1) & chr(34) 
				
				'If critiria is other than default then, add to the dictionary
				If err.number > 0 Then
					execute "o_SearchCrit.add " & chr(34) & a_VarDefine(0) & chr(34) & "," & chr(34) & a_VarDefine(0) & chr(34)
				End If
				
'				Give back error handling to UFT
				EnableRecoveryScenario
				On error goto 0
				
			else
				Reporter.ReportEvent micFail, "ALFLogSearch", "Please check input!"
			End If
		Next

	End If
	
	
	
	'Read Batch file for replacing dictionary object values and performing search
	Set o_FSO = createobject("Scripting.FileSystemObject")
	Set o_BatchFile = o_FSO.OpenTextFile(s_ALFFolderPath & "\" & s_ALFlogsearchBatFile)
	s_FileContent = o_BatchFile.ReadAll	
	Set o_BatchFile = Nothing
	
	'Get Keys and values
	a_SearchCritKey = o_SearchCrit.Keys
	a_SearchCritVal = o_SearchCrit.Items
	
	'Replace the actual search values
	for i_Replaceidx = 1 to o_SearchCrit.Count step 1
		
		s_FileContent = replace(s_FileContent, "%" & a_SearchCritKey(i_Replaceidx-1) & "%", a_SearchCritVal(i_Replaceidx-1))
			
	Next
	
	
	
	Set o_FileContentRegEx = New RegExp
	
	' Below regex used to remove unused parameters from batch file
	With o_FileContentRegEx
	
      	.Pattern    = "(\[-. \%[\S]*\%\] |\[|])" 
      	.IgnoreCase = True
      	.Global     = true

	End With	
	
	Set o_BatchFile = o_FSO.OpenTextFile(s_ALFFolderPath & "\" & s_ALFlogsearchBatFile,2)
	s_FileContent = o_FileContentRegEx.replace(s_FileContent,"")
	s_FileContent = replace(s_FileContent,"%EXT%", s_exe)
	
	o_BatchFile.Write s_FileContent
	o_BatchFile.Close
	set o_BatchFile = nothing
	
	'Run the Batch file
	Common_RunBatch s_ALFFolderPath &"\" & s_ALFlogsearchBatFile
	b_CritError = false
	
		
	s_RawFileContent = Common_ReadFileContent(s_ALFFolderPath & "\RawLog.txt")
	if s_RawFileContent = "" then
		Reporter.ReportEvent micPass,"Raw log check","Raw log has no data"
		Exit Function
	else
		Reporter.ReportEvent micFail,"Raw log check","Raw log has data"
	End If
	
End  Function
